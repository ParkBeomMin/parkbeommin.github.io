<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BeomLog</title>
  
  
  <link href="https://parkbeommin.github.io/atom.xml" rel="self"/>
  
  <link href="https://parkbeommin.github.io/"/>
  <updated>2025-10-27T00:31:54.487Z</updated>
  <id>https://parkbeommin.github.io/</id>
  
  <author>
    <name>bmpark</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>서로 다른 도메인간 SSO 인증 구현</title>
    <link href="https://parkbeommin.github.io/posts/sso/"/>
    <id>https://parkbeommin.github.io/posts/sso/</id>
    <published>2025-10-22T23:58:59.000Z</published>
    <updated>2025-10-27T00:31:54.487Z</updated>
    
    <content type="html"><![CDATA[<p style="text-align:center;"><img src="/images/sso/1.jpeg" alt="SSO"></p><h1 id="🔐-SSO란"><a href="#🔐-SSO란" class="headerlink" title="🔐 SSO란?"></a>🔐 SSO란?</h1><p>SSO란 Single Sign-On(🔊 싱글 사인온)의 약자로, 한 번의 로그인으로 여러 애플리케이션이나 웹사이트에 접속할 수 있도록 하는 통합 인증 기술입니다.</p><blockquote><p>예를 들어, 바(bar)에 입장한 손님이 술을 한 잔 더 주문할 때마다 신분증을 다시 제시해야 한다면 매우 번거로울 것입니다.<br>하지만 대부분의 식당에서는 입장 시 한 번만 신원을 확인하고, 이후에는 자유롭게 주문할 수 있습니다.<br>이와 같이 SSO는 사용자의 신원을 한 번만 확인한 뒤 여러 서비스에서 인증 정보를 재사용하도록 해줍니다.  </p></blockquote><h1 id="🧩-SSO의-표준-구조-SAML-기반"><a href="#🧩-SSO의-표준-구조-SAML-기반" class="headerlink" title="🧩 SSO의 표준 구조 (SAML 기반)"></a>🧩 SSO의 표준 구조 (SAML 기반)</h1><p>SSO의 표준 설계는 아래와 같습니다.</p><ol><li>SP(Service Provider) → IdP(Identity Provider)로 로그인 요청</li><li>IdP는 사용자 인증 후 SAML(Security Assertion Markup Language) 프로토콜을 통해 서명된 인증 정보(SAML Assertion)를 SP로 전달</li><li>SP는 전달받은 인증 정보를 검증하고 자체 로그인 처리</li></ol><h2 id="예시-시나리오"><a href="#예시-시나리오" class="headerlink" title="예시 시나리오"></a>예시 시나리오</h2><h3 id="환경-구성"><a href="#환경-구성" class="headerlink" title="환경 구성"></a>환경 구성</h3><blockquote><p><a href="http://www.aaa.com/">www.aaa.com</a> (SP)<br>join.aaa.com (IdP)<br><a href="http://www.bbb.com/">www.bbb.com</a> (SP)  </p></blockquote><h3 id="시나리오-1-www-aaa-com에서-최초-로그인"><a href="#시나리오-1-www-aaa-com에서-최초-로그인" class="headerlink" title="시나리오 1 - www.aaa.com에서 최초 로그인"></a>시나리오 1 - <a href="http://www.aaa.com에서/">www.aaa.com에서</a> 최초 로그인</h3><ol><li><a href="http://www.aaa.com에서/">www.aaa.com에서</a> 로그인 버튼 클릭  </li><li><a href="http://www.aaa.com/api/saml/login">www.aaa.com/api/saml/login</a> 호출  </li><li><a href="http://www.aaa.com/api/saml/login%EC%97%90%EC%84%9C">www.aaa.com/api/saml/login에서</a> SAMLRequest 정보 생성 후 join.aaa.com&#x2F;api&#x2F;authorize?SAMLRequest&#x3D; 로 이동하도록 응답  </li><li>join.aaa.com&#x2F;api&#x2F;authorize에서 Redis에 SAMLRequest값 저장 후 쿠키값이 없으면 join.aaa.com&#x2F;login?rid&#x3D; 페이지로 이동  </li><li>join.aaa.com&#x2F;login 페이지에서 아이디, 비밀번호 입력 후 로그인 버튼 클릭  </li><li>join.aaa.com&#x2F;api&#x2F;login api 호출  </li><li>join.aaa.com&#x2F;api&#x2F;login DB에서 값 조회 후 응답 및 쿠키값(httpOnly, IdP 로그인 확인용) 생성, rid로 레디스에서 값 조회 및 AuthnRequest 인증 후 SAMLResponse생성하여 form데이터로 담은 페이지(자동 POST HTML 반환) 호출  </li><li>form데이터로 담은 페이지로 <a href="http://www.aaa.com/api/auth/success">www.aaa.com/api/auth/success</a> 호출되어 인증 정보 검증 후 JWT 토큰 발급 및 페이지 이동하도록 응답</li></ol><h3 id="시나리오-2-www-aaa-com에서-로그인-이후-www-bbb-com-접속했을-때"><a href="#시나리오-2-www-aaa-com에서-로그인-이후-www-bbb-com-접속했을-때" class="headerlink" title="시나리오 2 - www.aaa.com에서 로그인 이후, www.bbb.com 접속했을 때"></a>시나리오 2 - <a href="http://www.aaa.com에서/">www.aaa.com에서</a> 로그인 이후, <a href="http://www.bbb.com/">www.bbb.com</a> 접속했을 때</h3><ol><li><a href="http://www.bbb.com/">www.bbb.com</a> 최초 접근  </li><li><a href="http://www.bbb.com에/">www.bbb.com에</a> 발급된 로그인 쿠키가 없음(ex. jwt)  </li><li><a href="http://www.bbb.com/api/saml/login">www.bbb.com/api/saml/login</a> 호출  </li><li><a href="http://www.bbb.com/api/saml/login%EC%97%90%EC%84%9C">www.bbb.com/api/saml/login에서</a> SAMLRequest 정보 생성 후 join.aaa.com&#x2F;api&#x2F;authorize?SAMLRequest&#x3D; 로 이동하도록 응답  </li><li>join.aaa.com&#x2F;api&#x2F;authorize에서 쿠키 여부 확인 후 AuthnRequest 인증 후 SAMLResponse생성하여 form데이터로 담은 페이지(자동 POST HTML 반환) 호출  </li><li>form데이터로 담은 페이지로 <a href="http://www.bbb.com/api/auth/success">www.bbb.com/api/auth/success</a> 호출되어 인증 정보 검증 후 JWT 토큰 발급 및 페이지 이동하도록 응답</li></ol><h1 id="🧠-실제-구현-커스텀-Token-Relay-기반-SSO"><a href="#🧠-실제-구현-커스텀-Token-Relay-기반-SSO" class="headerlink" title="🧠 실제 구현: 커스텀 Token Relay 기반 SSO"></a>🧠 실제 구현: 커스텀 Token Relay 기반 SSO</h1><p>위의 표준 구조(SAML 기반)가 정석이지만,<br>제가 진행한 프로젝트에서는 기존 서비스(B도메인)의 코드를 최소한으로 수정해야 하는 제약이 있었습니다.<br>위 내용이 표준이고 정석이지만, 제가 구현했던 서비스는 조금 다른 구조로 SSO를 구현하였습니다.</p><blockquote><p>즉, SAML 프로토콜 대신 JWT 기반 Token Relay 방식의 커스텀 SSO를 선택했습니다.</p></blockquote><p style="text-align:center;"><img src="/images/sso/2.jpeg" alt="SSO"></p><h2 id="🏗️-배경"><a href="#🏗️-배경" class="headerlink" title="🏗️ 배경"></a>🏗️ 배경</h2><ul><li>A도메인(<a href="http://www.a.com)과/">www.a.com)과</a> B도메인(<a href="http://www.b.com)이/">www.b.com)이</a> 별도 회원 DB를 가진 상태로 운영 중</li><li>통합 로그인(IdP) 서버를 join.a.com에 구축</li><li>B서비스는 최대한 기존 로직 유지해야 함</li><li>B서비스는 로컬스토리지로 로그인 정보를 가져옴</li><li>향후 회원 분리도 고려해야 함</li></ul><h2 id="구현-설계"><a href="#구현-설계" class="headerlink" title="구현 설계"></a>구현 설계</h2><ol><li>통합 로그인 서비스에서 로그인 시도  </li><li>로그인 성공 시 JWT 토큰 발급 및 A서비스 쿠키 생성</li><li>B서비스 로그인 처리를 위한 암호화 토큰 생성 및 페이지 호출<br>ex) <a href="http://www.b.com/connect-login?encrypted=abc">www.b.com/connect-login?encrypted=abc</a>  </li><li>B서비스 서버에서 토큰 복호화 후 시크릿 키 검증</li><li>검증 성공 시 B서비스 JWT 발급 및 쿠키 생성 → 스토리지 저장</li><li>최종적으로 redirectUrl로 이동</li></ol><p>위 구현 설계에서는 2가지 문제점이 존재했습니다.</p><h3 id="⚠️-문제점-및-개선"><a href="#⚠️-문제점-및-개선" class="headerlink" title="⚠️ 문제점 및 개선"></a>⚠️ 문제점 및 개선</h3><h4 id="1️⃣-서로-다른-도메인-간-스토리지-공유-불가"><a href="#1️⃣-서로-다른-도메인-간-스토리지-공유-불가" class="headerlink" title="1️⃣ 서로 다른 도메인 간 스토리지 공유 불가"></a>1️⃣ 서로 다른 도메인 간 스토리지 공유 불가</h4><p>초기에는 Iframe 내에서 B서비스 로그인 처리를 시도했지만,<br>브라우저의 SameSite 정책으로 인해<br>타 도메인 쿠키와 스토리지가 반영되지 않는 문제가 발생했습니다.<br>(로컬 테스트에서는 정상 작동했으나, 실제 운영 환경에서는 실패)</p><p>👉 해결: Iframe 방식 대신, B서비스 로그인 페이지로 직접 리다이렉트하도록 변경.</p><h4 id="2️⃣-보안-리스크-URL-기반-토큰-전달"><a href="#2️⃣-보안-리스크-URL-기반-토큰-전달" class="headerlink" title="2️⃣ 보안 리스크 (URL 기반 토큰 전달)"></a>2️⃣ 보안 리스크 (URL 기반 토큰 전달)</h4><p>URL은 브라우저 히스토리, 로그, 네트워크 기록 등에 남기 때문에<br>암호화되어 있더라도 토큰 탈취 위험이 존재합니다.</p><p>👉 해결: Redis 기반의 일회성 검증(One-Time Token) 구조 도입  </p><ul><li>로그인 성공 시 Redis에 일회성 검증 값 저장 (TTL &#x3D; 10초)  </li><li>B서비스 로그인 시 해당 값으로 검증 후 즉시 폐기</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;/images/sso/1.jpeg&quot; alt=&quot;SSO&quot;&gt;&lt;/p&gt;


&lt;h1 id=&quot;🔐-SSO란&quot;&gt;&lt;a href=&quot;#🔐-SSO란&quot; class=&quot;headerlink&quot; title=&quot;�</summary>
      
    
    
    
    
    <category term="SSO, SAML, JWT, 인증, 아키텍처" scheme="https://parkbeommin.github.io/tags/SSO-SAML-JWT-%EC%9D%B8%EC%A6%9D-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/"/>
    
  </entry>
  
  <entry>
    <title>MAC nginx 설치하기</title>
    <link href="https://parkbeommin.github.io/posts/mac-nginx/"/>
    <id>https://parkbeommin.github.io/posts/mac-nginx/</id>
    <published>2024-01-02T16:50:00.000Z</published>
    <updated>2025-10-21T07:33:47.080Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>🙋🏻‍♂️: MAC pro 14 &#x2F; M2 &#x2F; Ventura 13.5 &#x2F; Homebrew 4.2.2<br>👨🏻‍💻: Mac에 nginx를 설치해보자!</p></blockquote><img src="/images/mac/nginx.png" /><h2 id="🌟-요약"><a href="#🌟-요약" class="headerlink" title="🌟 요약"></a>🌟 요약</h2><ol><li>brew services</li><li>brew install nginx</li><li>brew services start nginx</li><li>nano &#x2F;opt&#x2F;homebrew&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</li></ol><h2 id="😋-설치"><a href="#😋-설치" class="headerlink" title="😋 설치"></a>😋 설치</h2><p>먼저, <code>brew services</code>로 nginx가 설치되어 있는지 확인합니다.</p><img src="/images/mac/mac-nginx1.png" /><p>list에 없는 것을 확인했으면 아래 명령어로 설치를 합니다.<br><code>brew install nginx</code></p><img src="/images/mac/mac-nginx2.png" /><p>설치가 완료되었고, <code>/opt/homebrew/etc/nginx/</code> 경로로 설치가 된 것을 확인할 수 있습니다.</p><h2 id="🐣-실행"><a href="#🐣-실행" class="headerlink" title="🐣 실행"></a>🐣 실행</h2><p><code>brew services start nginx</code>로 실행시킵니다.</p><img src="/images/mac/mac-nginx3.png" /><p>이제 <code>localhost:8080</code>으로 접속하면 아래와 같이 잘 뜨는 것을 볼 수 있습니다.</p><img src="/images/mac/mac-nginx4.png" /><p><code>nano /opt/homebrew/etc/nginx/nginx.conf</code>로 config파일을 수정하여 사용하면 된다.</p>]]></content>
    
    
    <summary type="html">Mac에 nginx를 설치해보자.</summary>
    
    
    
    <category term="mac nginx m2" scheme="https://parkbeommin.github.io/categories/mac-nginx-m2/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue3 Teleport, Pinia랑 찰떡궁합?!</title>
    <link href="https://parkbeommin.github.io/posts/vue-teleport/"/>
    <id>https://parkbeommin.github.io/posts/vue-teleport/</id>
    <published>2023-12-26T21:50:00.000Z</published>
    <updated>2025-10-21T07:33:47.104Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>🙋🏻‍♂️: wrapper 하위로 레이어 형태로 된 다양한 알럿이 떴으면 좋겠어요.<br>👨🏻‍💻: 매 컴포넌트마다 불러와서 해야하나..?</p></blockquote><img src="/images/vue/cat_teleport.jpg" /><p>Vue에는 어디서 붙여도 원하는 곳으로 보낼 수 있는 <code>Teleport</code>가 있습니다!!</p><h2 id="🌟-요약"><a href="#🌟-요약" class="headerlink" title="🌟 요약"></a>🌟 요약</h2><ol><li>텔레포트 레이어 컴포넌트를 만든다.</li><li>레이어 내 데이터들은 pinia로 관리한다.</li><li>최상위 컴포넌트에 레이어 컴포넌트를 등록해놓는다.</li><li>필요한 곳에서 pinia를 통해 호출한다.</li></ol><h2 id="😋-Vue-Teleport-만들기"><a href="#😋-Vue-Teleport-만들기" class="headerlink" title="😋 Vue Teleport 만들기"></a>😋 Vue Teleport 만들기</h2><p>먼저 공통으로 쓰일 레이어를 만들어 줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;popWrapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;toast-popup&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;popContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;popup-box&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title-popup&quot;</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-popup&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-area02&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;btnType === 2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-unit04&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;onCancel?.(), store.closeLayer?.()&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; cancel &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-unit01&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;onConfirm?.(), store.closeLayer?.()&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; confirm &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>위 마크업에 쓰인 함수 및 변수는 pinia를 통해 컨트롤하는 값들이 될 것입니다.</p><p>이제 위 마크업을 <code>&lt;Teleport&gt;</code>컴포넌트로 감싸줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Teleport</span> <span class="attr">v-if</span>=<span class="string">&quot;isOpen&quot;</span> <span class="attr">to</span>=<span class="string">&quot;#container&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">Teleport</span>&gt;</span></span><br></pre></td></tr></table></figure><p>to 속성에 어느 element에 붙을지 지정을 해줍니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useLayerStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/useLayerStore&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">useLayerStore</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  isOpen,</span><br><span class="line">  title,</span><br><span class="line">  content,</span><br><span class="line">  btnType,</span><br><span class="line">  confirm,</span><br><span class="line">  cancel,</span><br><span class="line">  onConfirm,</span><br><span class="line">  onCancel,</span><br><span class="line">&#125; = <span class="title function_">storeToRefs</span>(store);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>storeToRefs는 반응성을 살려주는 역할을 합니다.</p><h2 id="🐣-Pinia로-상태관리-만들기"><a href="#🐣-Pinia로-상태관리-만들기" class="headerlink" title="🐣 Pinia로 상태관리 만들기"></a>🐣 Pinia로 상태관리 만들기</h2><p><code>stores/useLayerStore.js</code>파일을 만들고 다음과 같이 작성해줍니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; computed, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useLayerStore = <span class="title function_">defineStore</span>(<span class="string">&quot;layer&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> state = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">isOpen</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">confirm</span>: <span class="string">&quot;확인&quot;</span>,</span><br><span class="line">    <span class="attr">cancel</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">btnType</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">onConfirm</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">onCancel</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">typeClass</span>: <span class="string">&quot;toast-popup&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// getter</span></span><br><span class="line">  <span class="keyword">const</span> isOpen = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">isOpen</span>);</span><br><span class="line">  <span class="keyword">const</span> title = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">title</span>);</span><br><span class="line">  <span class="keyword">const</span> content = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">content</span>);</span><br><span class="line">  <span class="keyword">const</span> btnType = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">btnType</span>);</span><br><span class="line">  <span class="keyword">const</span> confirm = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">confirm</span>);</span><br><span class="line">  <span class="keyword">const</span> cancel = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">cancel</span>);</span><br><span class="line">  <span class="keyword">const</span> onConfirm = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">onConfirm</span>);</span><br><span class="line">  <span class="keyword">const</span> onCancel = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">onCancel</span>);</span><br><span class="line">  <span class="keyword">const</span> typeClass = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> state.<span class="property">value</span>.<span class="property">typeClass</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// action</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">openLayer</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">isOpen</span> = !state.<span class="property">value</span>.<span class="property">isOpen</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">title</span> = data.<span class="property">title</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">content</span> = data.<span class="property">content</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">confirm</span> = data.<span class="property">confirm</span> ?? state.<span class="property">value</span>.<span class="property">confirm</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">cancel</span> = data.<span class="property">cancel</span> ?? state.<span class="property">value</span>.<span class="property">cancel</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">btnType</span> = data.<span class="property">btnType</span> || <span class="number">1</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">onConfirm</span> = data.<span class="property">onConfirm</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">onCancel</span> = data.<span class="property">onCancel</span>;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">typeClass</span> = data.<span class="property">typeClass</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">closeLayer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    state.<span class="property">value</span>.<span class="property">isOpen</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    isOpen,</span><br><span class="line">    title,</span><br><span class="line">    content,</span><br><span class="line">    btnType,</span><br><span class="line">    confirm,</span><br><span class="line">    cancel,</span><br><span class="line">    onConfirm,</span><br><span class="line">    onCancel,</span><br><span class="line">    typeClass,</span><br><span class="line">    openLayer,</span><br><span class="line">    closeLayer,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>이제 어느 컴포넌트에서든 <code>openLayer</code>함수를 호출하여 레이어를 띄울 수 있습니다!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useLayerStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/useLayerStore&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; openLayer &#125; = <span class="title function_">useLayerStore</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_">openLayer</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;안내&quot;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">`내용`</span>,</span><br><span class="line">  <span class="attr">btnType</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">confirm</span>: <span class="string">&quot;회원가입&quot;</span>,</span><br><span class="line">  <span class="attr">onConfirm</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&quot;/signup&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">cancel</span>: <span class="string">&quot;취소&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Vue에는 어디서 붙여도 원하는 곳으로 보낼 수 있는 `Teleport`가 있습니다!!</summary>
    
    
    
    <category term="vue vue3 teleport pinia js" scheme="https://parkbeommin.github.io/categories/vue-vue3-teleport-pinia-js/"/>
    
    
  </entry>
  
  <entry>
    <title>MAC 루트 경로에 폴더 만들기</title>
    <link href="https://parkbeommin.github.io/posts/mac-root-symbolic-link/"/>
    <id>https://parkbeommin.github.io/posts/mac-root-symbolic-link/</id>
    <published>2023-12-25T20:26:00.000Z</published>
    <updated>2025-10-21T07:33:47.089Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>🙋🏻‍♂️: mac 환경에서도 Root에 LOGS 폴더를 만들어주세요.<br>👨🏻‍💻: mkdir LOGS 하면 되겠지?</p></blockquote><img src='/images/mac/root-symbolic-link.png'/><p>mac Catalina부터는 보안상의 이유로 루트경로에 디렉토리를 만들 수가 없습니다..</p><p>Read-only file system이라는 오류 메세지를 주고 생성이 되질 않습니다.</p><h2 id="😋-심볼릭-링크를-활용해보자"><a href="#😋-심볼릭-링크를-활용해보자" class="headerlink" title="😋 심볼릭 링크를 활용해보자"></a>😋 심볼릭 링크를 활용해보자</h2><p><code>USERS/{userName}</code>의 경로에 LOGS 폴더를 만들어줍니다.</p><blockquote><p>mkdir LOGS</p></blockquote><p>이제 심볼릭 링크 설정을 해줍니다.</p><blockquote><p>vi &#x2F;etc&#x2F;synthetic.conf</p></blockquote><p>해당 파일을 열어 아래와 같이 입력해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOGS    /Users/&#123;userName&#125;/LOGS</span><br></pre></td></tr></table></figure><p>LOGS와 &#x2F;Users&#x2F;{userName}&#x2F;LOGS 사이는 탭으로 입력해야합니다.</p><p>&#x2F;Users&#x2F;{userName}&#x2F;LOGS를 루트의 LOGS로 인식하겠다라는 의미입니다.</p><p>이제 저장하고 재부팅을 하면, 루트에 LOGS가 잘 생성되어있는 것을 볼 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;🙋🏻‍♂️: mac 환경에서도 Root에 LOGS 폴더를 만들어주세요.&lt;br&gt;👨🏻‍💻: mkdir LOGS 하면 되겠지?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&#39;/images/mac/root-symbol</summary>
      
    
    
    
    <category term="mac symbolic link" scheme="https://parkbeommin.github.io/categories/mac-symbolic-link/"/>
    
    
  </entry>
  
  <entry>
    <title>블로그 개편기 EP.3</title>
    <link href="https://parkbeommin.github.io/posts/blog-3/"/>
    <id>https://parkbeommin.github.io/posts/blog-3/</id>
    <published>2023-09-05T15:47:00.000Z</published>
    <updated>2025-10-21T07:33:47.075Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/blog/banner.png'><blockquote><p>깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!</p></blockquote><h2 id="🚛-포스팅-이전"><a href="#🚛-포스팅-이전" class="headerlink" title="🚛 포스팅 이전"></a>🚛 포스팅 이전</h2><p>Jekyll로 운영되던 <a href="https://parkbeommin.github.io/">기존 블로그</a>에서 md 파일들로 만들어져 있었고, 그대로 활용할 수 있길 바랬다.</p><img src='/images/blog/blog-3-1.png'><p>넉스트 공식 홈페이지에 있는 인증 마크(?)까지 받은 <a href="https://nuxt.com/modules/content">nuxt&#x2F;content 모듈</a>을 활용하여 기존 md파일들을 무사히 이전할 수 있었다.</p><h2 id="🚀-배포"><a href="#🚀-배포" class="headerlink" title="🚀 배포"></a>🚀 배포</h2><blockquote><p>배포 과정이 정말 문제가 많았다. 🤦‍♂️</p></blockquote><h3 id="github-pages"><a href="#github-pages" class="headerlink" title="github pages"></a>github pages</h3><img src='/images/blog/blog-3-2.png'><p>로컬에선 잘되는데,,, 를 어김없이 경험했던 github pages…</p><p>github.io 도메인 포기 못한다는 생각에 공식 github의 이슈에 있는 비슷한 사례들로 이런 저런 시도를 해봤지만 끝끝내 해결 하지 못했다..</p><p>인생 첫 <a href="https://github.com/nuxt/content/discussions/2236">discussion</a>도 남겨봤지만 아직 미해결..</p><p><a href="https://velog.io/@anjoy/%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A7%8C%EB%93%A4%EA%B8%B011-Vercel%EB%A1%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EB%8B%A8-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0">멍청하게도 SSR(Server Side Rendering)을 하기 때문에 </a> 라는 이유로 문제가 있었던 것 같고 아직 정확한 파악과 해결은 못했습니다 ㅠㅠㅠ</p><h3 id="firebase-hosting"><a href="#firebase-hosting" class="headerlink" title="firebase hosting"></a>firebase hosting</h3><p>파이어베이스를 통한 배포는 큰 어려움은 없었고, Nuxt로 구성되어 있기 때문에 Firebase Function 기능도 활성화하여야 했습니다.</p><p>큰 문제 없이 Function 기능도 활성화하고(과금 가능성 생김) 배포까지 했지만, 성능이 너무나 좋지 않았습니다..</p><p>아마 Function 기능을 통해 의도치 않은 서버 통신도 생기고 해서 그랬던 것 같습니다.. (정적 페이지로써 굳이 서버 통신이 없어도 됨..)</p><h3 id="goorm-ide"><a href="#goorm-ide" class="headerlink" title="goorm ide"></a>goorm ide</h3><p>firebase로 해결이 될 줄 알았지만 성능 이슈때문에,, 무료로 서버를 운영하고 있던 goorm ide로 갔습니다.</p><p>챗봇 서버와 웹을 하나 돌려놓고 있던 서버에 블로그도 추가하여 배포를 했습니다.</p><p>이 과정도 당연히 문제 없이 서버에 코드를 받아 실행시켜, 잘 배포가 되었습니다.</p><p>근데.. 🤦‍♂️</p><p>아무래도 무료 버전이다보니 cpu, ram에 한계가 있었고,, 기존 운영되던 서비스들에 영향이 생겨버려.. 이 방법도 포기해야했습니다..</p><h3 id="vercel"><a href="#vercel" class="headerlink" title="vercel"></a>vercel</h3><p>간단하게 정적 사이트를 배포할 수 있는 서비스인 vercel을 찾아 드디어!! 정상적인 배포를 했습니다!</p><p>git repo를 연결시켜 간단하게 배포를 진행할 수 있더군요..</p><p>그동안의 고생이 무색하게 너무 쉽게 배포가 되었습니다..!</p><p>무료 도메인도 발급받아 도메인 변경도 했습니다. ✨✨</p><h2 id="🎊-BeomLog"><a href="#🎊-BeomLog" class="headerlink" title="🎊 BeomLog"></a>🎊 BeomLog</h2><p><a href="https://blog.beommin.kro.kr/">https://blog.beommin.kro.kr/</a></p><p>부족한 블로그겠지만, 점차 나아가보겠습니다…!!</p><h2 id="아쉬운-점"><a href="#아쉬운-점" class="headerlink" title="아쉬운 점"></a>아쉬운 점</h2><p>기존 블로그에서는 구글 애드센스를 붙여 어느정도 수익화를 생각할 수 있었는데,, kro.kr 도메인은 애드센스 신청이 불가하더라구요.. (최상위 도메인이 kro.kr이라..)<br>카카오 애드몹은 붙여놓긴 했지만,, 최근 포스팅 갯수 부족으로 거절당해 열심히.. 포스팅해야겠습니다..!!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/blog/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;🚛-포스팅-이전&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="blog nuxt tailwindCSS" scheme="https://parkbeommin.github.io/categories/blog-nuxt-tailwindCSS/"/>
    
    
  </entry>
  
  <entry>
    <title>Placeholder 줄바꿈 적용하기</title>
    <link href="https://parkbeommin.github.io/posts/placeholder-line-breaking/"/>
    <id>https://parkbeommin.github.io/posts/placeholder-line-breaking/</id>
    <published>2023-08-24T04:15:00.000Z</published>
    <updated>2025-10-21T07:33:47.094Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/web/banner.png'><blockquote><p>🙋🏻‍♂️: textarea 영역의 placeholder 문구를 두줄로 보여지게 해주세요.<br>👨🏻‍💻: 개행 문자를 넣으면 되려나…?</p></blockquote><p>placeholder에서의 줄바꿈 요청이 왔을 때, 딱 떠오른 생각은 개행 문자를 넣는 것이었다.<br>그닥 신경쓸만한 요구사항이 아니었다.</p><h2 id="😋-개행-문자로-쉽게-적용"><a href="#😋-개행-문자로-쉽게-적용" class="headerlink" title="😋 개행 문자로 쉽게 적용"></a>😋 개행 문자로 쉽게 적용</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">&quot;-첫번째줄 <span class="symbol">&amp;#10;</span>-두번째줄&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><img src='/images/web/placeholder-1.png'><p>html상에서 처리할 땐, <code>&amp;#10;</code> 유니코드를 사용하여 줄바꿈을 적용할 수 있습니다.</p><p>Vue 환경에서 placeholder 값을 변수&#x2F;상수로 할당시켜 표현하고 싶다면 <code>\n</code>으로도 적용할 수 있습니다.</p><h2 id="😩-아이폰-사파리에서는-줄바꿈이-되질-않아요"><a href="#😩-아이폰-사파리에서는-줄바꿈이-되질-않아요" class="headerlink" title="😩 아이폰 사파리에서는 줄바꿈이 되질 않아요"></a>😩 아이폰 사파리에서는 줄바꿈이 되질 않아요</h2><blockquote><p>매번 아이폰이 문제다..</p></blockquote><img src='/images/web/placeholder-2.png'><p><a href="https://caniuse.com/mdn-html_elements_textarea_placeholder_line_breaks">Can I Use</a> 사이트에서 placeholder의 line breaks는 사파리에서는 지원이 안된다고 나와있었다..</p><p>기능이 안되는 것도 아니고 사파리에서만 줄바꿈이 되지 않기에,, 포기하고 넘어가려했는데 퍼블리셔분의 도움으로 방법을 찾았습니다!</p><h2 id="🥳-또-다른-방법-그리고-버전"><a href="#🥳-또-다른-방법-그리고-버전" class="headerlink" title="🥳 또 다른 방법, 그리고 버전"></a>🥳 또 다른 방법, 그리고 버전</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span></span></span><br><span class="line"><span class="tag">    <span class="attr">placeholder</span>=<span class="string">&quot;-첫번째줄</span></span></span><br><span class="line"><span class="string"><span class="tag">-두번째줄&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>위와 같이 엔터처리 후 좌우 공백이 없도록 해주면 줄바꿈 처리가 됩니다!!<br>그리고 아이폰의 최신버전 16.6 (2023.08 기준) 으로 업데이트를 하면 아이폰에서도 잘 적용이 됩니다.</p><hr><p>이전 버전들에 대해서는 어쩔 수 없이 줄바꿈이 되지 않은 채로 노출이 됩니다..<br>이를 우회하는 방법으로 html 요소를 겹쳐서 js로 컨트롤되도록 하는 방법도 있으니 꼭 필요하다면 이와 같은 방식으로 구현을 하면 될 것 같습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/web/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;🙋🏻‍♂️: textarea 영역의 placeholder 문구를 두줄로 보여지게 해주세요.&lt;br&gt;👨🏻‍💻: 개행 문자를 넣으면 되려나…?&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    <category term="html placeholder textarea web" scheme="https://parkbeommin.github.io/categories/html-placeholder-textarea-web/"/>
    
    
  </entry>
  
  <entry>
    <title>블로그 개편기 EP.2</title>
    <link href="https://parkbeommin.github.io/posts/blog-2/"/>
    <id>https://parkbeommin.github.io/posts/blog-2/</id>
    <published>2023-08-10T17:19:00.000Z</published>
    <updated>2025-10-21T07:33:47.064Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/blog/banner.png'><blockquote><p>깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!</p></blockquote><h2 id="🔑-소소한-재미-요소"><a href="#🔑-소소한-재미-요소" class="headerlink" title="🔑 소소한 재미 요소"></a>🔑 소소한 재미 요소</h2><h3 id="스크롤-시-헤더-변화-이미지-배너-변화"><a href="#스크롤-시-헤더-변화-이미지-배너-변화" class="headerlink" title="스크롤 시 헤더 변화 &amp; 이미지 배너 변화"></a>스크롤 시 헤더 변화 &amp; 이미지 배너 변화</h3><img src='/images/blog/blog-1.gif'><p>스크롤이 발생하면, 헤더의 색상이 변경되도록 했습니다.<br>이미지 배너 또한 스크롤 시 scale이 확장되어 보다 더 인터랙티브한 효과를 줍니다.</p><h3 id="로고-텍스트-마우스-오버-시-선으로-그려지는-효과"><a href="#로고-텍스트-마우스-오버-시-선으로-그려지는-효과" class="headerlink" title="로고 텍스트 마우스 오버 시 선으로 그려지는 효과"></a>로고 텍스트 마우스 오버 시 선으로 그려지는 효과</h3><img src='/images/blog/blog-7.gif'><p>로고 텍스트를 svg파일로 만들어 마우스 오버 시 선들이 다시 그려지는 효과를 주었습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">&quot;[</span></span></span><br><span class="line"><span class="string"><span class="tag">        &#123; &#x27;fill-white hover:animate-[stroke_1s_linear]&#x27;: !isScroll &#125;,</span></span></span><br><span class="line"><span class="string"><span class="tag">        &#123; &#x27;hover:animate-[strokeBlack_1s_linear]&#x27;: isScroll &#125;,</span></span></span><br><span class="line"><span class="string"><span class="tag">    ]&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;180&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">viewBox</span>=<span class="string">&quot;0 0 180 100&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span></span></span><br><span class="line"><span class="tag">        <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:class</span>=<span class="string">&quot;`text-xl animate-[$&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">            isScroll ? &#x27;strokeBlack&#x27; : &#x27;strokeBlack&#x27;</span></span></span><br><span class="line"><span class="string"><span class="tag">        &#125;_1s_linear]`&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">        Beom Log</span><br><span class="line">    <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text</span> &#123;</span><br><span class="line">    <span class="attribute">stroke-dasharray</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> stroke &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">stroke</span>: white;</span><br><span class="line">        <span class="attribute">stroke-width</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: <span class="number">24px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">70%</span> &#123;</span><br><span class="line">        <span class="attribute">fill</span>: transparent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">98%</span> &#123;</span><br><span class="line">        <span class="attribute">stroke</span>: white;</span><br><span class="line">        <span class="attribute">stroke-width</span>: <span class="number">1px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">fill</span>: white;</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> strokeBlack &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">stroke</span>: black;</span><br><span class="line">        <span class="attribute">stroke-width</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: <span class="number">24px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">70%</span> &#123;</span><br><span class="line">        <span class="attribute">fill</span>: transparent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">98%</span> &#123;</span><br><span class="line">        <span class="attribute">stroke</span>: black;</span><br><span class="line">        <span class="attribute">stroke-width</span>: <span class="number">1px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">fill</span>: black;</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="프로필-사진-확대"><a href="#프로필-사진-확대" class="headerlink" title="프로필 사진 확대"></a>프로필 사진 확대</h3><img src='/images/blog/blog-2.gif'><p>프로필 사진에 마우스 오버를 하게되면 scale이 커지도록 애니메이션 효과를 주었습니다.<br>tailwindCSS로 편리하게 애니메이션 효과를 줄 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;m-auto w-24 h-24 rounded-full object-cover border-double border-2 border-slate-300 transition duration-500 hover:scale-125&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">&quot;~/assets/profile.jpg&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">alt</span>=<span class="string">&quot;profile&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="운영-시간-카운팅"><a href="#운영-시간-카운팅" class="headerlink" title="운영 시간 카운팅"></a>운영 시간 카운팅</h3><img src='/images/blog/blog-3.gif'><p>하단 푸터에는 블로그가 현재까지 운영된 시간을 보여줍니다.<br>페이지 랜더링 시 랜덤하게 일&#x2F;시간&#x2F;분&#x2F;초를 선택하여 보여주며, 바운스 효과를 주어 시간의 흐름을 보여줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; timer &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;mx-1 animate-[bounce_1s_infinite]&quot;</span>&gt;</span>.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;mr-1 animate-[bounce_1s_infinite_100ms]&quot;</span>&gt;</span>.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;animate-[bounce_1s_infinite_200ms]&quot;</span>&gt;</span>.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> diffDay = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">date</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">hour</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">min</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">sec</span>: <span class="number">0</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> random = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> timer = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> suffix = [<span class="string">&quot;일&quot;</span>, <span class="string">&quot;시간&quot;</span>, <span class="string">&quot;분&quot;</span>, <span class="string">&quot;초&quot;</span>];</span><br><span class="line">    <span class="keyword">const</span> diffKeys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(diffDay);</span><br><span class="line">    <span class="keyword">const</span> selectedDiffKey = diffKeys[random] <span class="keyword">as</span> keyof <span class="keyword">typeof</span> diffDay;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;diffDay[selectedDiffKey]&#125;</span><span class="subst">$&#123;suffix[random]&#125;</span> 동안 운영중`</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// diffDay = getDate();</span></span><br><span class="line">        <span class="keyword">const</span> &#123; date, hour, min, sec &#125; = <span class="title function_">getDate</span>();</span><br><span class="line">        diffDay.<span class="property">date</span> = date;</span><br><span class="line">        diffDay.<span class="property">hour</span> = hour;</span><br><span class="line">        diffDay.<span class="property">min</span> = min;</span><br><span class="line">        diffDay.<span class="property">sec</span> = sec;</span><br><span class="line">        <span class="comment">// console.log(diffDay);</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getDate</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> startDate = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;2023/08/10 22:30:00&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> curDate = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">const</span> diff = curDate.<span class="title function_">getTime</span>() - startDate.<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">const</span> diffDate = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>));</span><br><span class="line">    <span class="keyword">const</span> diffHour = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / (<span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>));</span><br><span class="line">    <span class="keyword">const</span> diffMin = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / (<span class="number">60</span> * <span class="number">1000</span>));</span><br><span class="line">    <span class="keyword">const</span> diffSec = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">date</span>: diffDate, <span class="attr">hour</span>: diffHour, <span class="attr">min</span>: diffMin, <span class="attr">sec</span>: diffSec &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="카테고리-마우스-오버-효과"><a href="#카테고리-마우스-오버-효과" class="headerlink" title="카테고리 마우스 오버 효과"></a>카테고리 마우스 오버 효과</h3><img src='/images/blog/blog-4.gif'><p>카테고리 필터에 마우스 오버 시 명확한 표시를 위해 확대 및 강조효과를 주었습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;flex mb-8 flex-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-for</span>=<span class="string">&quot;(category, i) of categoryList&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:key</span>=<span class="string">&quot;`category-$&#123;i&#125;`&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:class</span>=<span class="string">&quot;[</span></span></span><br><span class="line"><span class="string"><span class="tag">                `mr-3 p-1 px-2 rounded-3xl transition duration-500 hover:scale-125 hover:bg-blue-400 hover:text-white`,</span></span></span><br><span class="line"><span class="string"><span class="tag">                &#123; &#x27;bg-blue-400 text-white&#x27;: getIsSelected(category) &#125;,</span></span></span><br><span class="line"><span class="string"><span class="tag">            ]&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">            <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;setCategory(&#123; category &#125;), getPostList()&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">            #&#123;&#123; category &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="포스트-상세-스크롤-위치에-맞게-달려가는-고양이"><a href="#포스트-상세-스크롤-위치에-맞게-달려가는-고양이" class="headerlink" title="포스트 상세 스크롤 위치에 맞게 달려가는 고양이"></a>포스트 상세 스크롤 위치에 맞게 달려가는 고양이</h3><img src='/images/blog/blog-5.gif'><p>1yoouoo님의 <a href="https://1yoouoo.tistory.com/38">블로그</a>를 참고하여 뛰어가는 고양이를 구현했습니다.<br>스크롤 위치를 계산하여 그에 맞게 left 값이 변화될 수 있도록 했습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">&quot;[</span></span></span><br><span class="line"><span class="string"><span class="tag">            &#123; hidden: !catState.isShow &#125;,</span></span></span><br><span class="line"><span class="string"><span class="tag">            &#123; &#x27;-scale-x-50&#x27;: isScrollDown &amp;&amp; !catState.isBack &#125;,</span></span></span><br><span class="line"><span class="string"><span class="tag">            `scale-50 bg-[url(~/assets/cats.png)] bg-no-repeat absolute w-[112px] h-32 animate-[run_1s_steps(10)_infinite]`,</span></span></span><br><span class="line"><span class="string"><span class="tag">        ]&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> run &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: -<span class="number">1120px</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="복사하기-시-폭죽-터트리기-토스트-메세지-띄우기"><a href="#복사하기-시-폭죽-터트리기-토스트-메세지-띄우기" class="headerlink" title="복사하기 시 폭죽 터트리기 &amp; 토스트 메세지 띄우기"></a>복사하기 시 폭죽 터트리기 &amp; 토스트 메세지 띄우기</h3><img src='/images/blog/blog-6.gif'><p>wwendy님의 <a href="https://wwendy.tistory.com/1005">블로그</a>를 참고하여 폭죽 터트리는 효과를 구현했습니다.<br>폭죽이 터짐과 동시에 우측하단에 토스트 메세지가 나타납니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy <span class="keyword">from</span> <span class="string">&#x27;copy-to-clipboard&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> shareRef = <span class="title function_">ref</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; showToast &#125; = <span class="title function_">useToast</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">particles</span>: <span class="title class_">Array</span>&lt;any&gt; = [];</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(init, <span class="number">700</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">share</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">pop</span>();</span><br><span class="line">    <span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span><br><span class="line">    <span class="comment">// console.log(route.fullPath);</span></span><br><span class="line">    <span class="title function_">copy</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">window</span>.location.host&#125;</span><span class="subst">$&#123;route.fullPath&#125;</span>`</span>);</span><br><span class="line">    <span class="title function_">showToast</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;클립보드에 복사되었습니다.&#x27;</span> &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">init</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// for (let i = particles.length - 1; i--; i &gt; -1) &#123;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; particles.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> p = particles[i];</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translate3d(<span class="subst">$&#123;p.x&#125;</span>px, <span class="subst">$&#123;p.y&#125;</span>px, 1px)`</span>;</span><br><span class="line"></span><br><span class="line">        p.<span class="property">x</span> += p.<span class="property">vel</span>.<span class="property">x</span>;</span><br><span class="line">        p.<span class="property">y</span> += p.<span class="property">vel</span>.<span class="property">y</span>;</span><br><span class="line"></span><br><span class="line">        p.<span class="property">vel</span>.<span class="property">y</span> += <span class="number">0.5</span> * p.<span class="property">mass</span>;</span><br><span class="line">        <span class="keyword">if</span> (p.<span class="property">y</span> &gt; (shareRef.<span class="property">value</span> <span class="keyword">as</span> <span class="title class_">HTMLElement</span>).<span class="property">offsetTop</span> * <span class="number">2</span>) &#123;</span><br><span class="line">            p.<span class="title function_">remove</span>();</span><br><span class="line">            particles.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(init);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> colors = [<span class="string">&#x27;#eb6383&#x27;</span>, <span class="string">&#x27;#fa9191&#x27;</span>, <span class="string">&#x27;#ffe9c5&#x27;</span>, <span class="string">&#x27;#b4f2e1&#x27;</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">pop</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">150</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;particule&#x27;</span>) <span class="keyword">as</span> any;</span><br><span class="line">        <span class="comment">// 시작 위치</span></span><br><span class="line">        p.<span class="property">x</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> * <span class="number">0.5</span>;</span><br><span class="line">        p.<span class="property">y</span> = (shareRef.<span class="property">value</span> <span class="keyword">as</span> <span class="title class_">HTMLElement</span>).<span class="property">offsetTop</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">window</span>.<span class="property">innerHeight</span> * <span class="number">0.3</span>;</span><br><span class="line">        <span class="comment">// 속도 ?</span></span><br><span class="line">        p.<span class="property">vel</span> = &#123;</span><br><span class="line">            <span class="attr">x</span>: (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">10</span>,</span><br><span class="line">            <span class="attr">y</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * -<span class="number">20</span> - <span class="number">15</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        p.<span class="property">mass</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.2</span> + <span class="number">0.8</span>;</span><br><span class="line">        particles.<span class="title function_">push</span>(p);</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translate(<span class="subst">$&#123;p.x&#125;</span>px, <span class="subst">$&#123;p.y&#125;</span>px)`</span>;</span><br><span class="line">        <span class="keyword">const</span> size = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">15</span> + <span class="number">5</span>;</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">width</span> = size + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">height</span> = size + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">background</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)];</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">init</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="🎢-To-Be-Continued"><a href="#🎢-To-Be-Continued" class="headerlink" title="🎢 To Be Continued.."></a>🎢 To Be Continued..</h2><img src="/images/blog/to-be-continued"><p>소소한 애니메이션 효과들을 채워넣으니 만족스럽네요.<br>지속적으로 운영해나가면서 재미난 요소들로 채워나가야지!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/blog/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;🔑-소소한-재미-요소&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="blog nuxt tailwindCSS" scheme="https://parkbeommin.github.io/categories/blog-nuxt-tailwindCSS/"/>
    
    
  </entry>
  
  <entry>
    <title>블로그 개편기 EP.1</title>
    <link href="https://parkbeommin.github.io/posts/blog-1/"/>
    <id>https://parkbeommin.github.io/posts/blog-1/</id>
    <published>2023-08-04T17:19:00.000Z</published>
    <updated>2025-10-21T07:33:47.052Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/blog/banner.png'>> 깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!<h2 id="🤩-참고할-블로그"><a href="#🤩-참고할-블로그" class="headerlink" title="🤩 참고할 블로그"></a>🤩 참고할 블로그</h2><ul><li><a href="https://wormwlrm.github.io/">재그지그의 개발 블로그</a></li><li><a href="https://techblog.woowahan.com/">우아한 기술블로그</a></li></ul><p>위 두 블로그를 참고하여 개편을 해보려합니다.</p><h3 id="재그지그의-개발-블로그"><a href="#재그지그의-개발-블로그" class="headerlink" title="재그지그의 개발 블로그"></a>재그지그의 개발 블로그</h3><p><img src="https://velog.velcdn.com/images/bmpark/post/2617d6f4-bf3d-4817-bd40-7c273f5229b8/image.png"></p><h3 id="우아한-기술블로그"><a href="#우아한-기술블로그" class="headerlink" title="우아한 기술블로그"></a>우아한 기술블로그</h3><p><img src="https://velog.velcdn.com/images/bmpark/post/68202955-d54b-4849-8189-6f6d16ab8c5e/image.png"></p><p>공통점</p><ul><li>대형 배너</li><li>심플함</li><li>가운데 정렬</li></ul><p>두 블로그를 방문했을 때, 비슷한 느낌을 받았고 깔끔하다는 인상을 받았습니다.<br>그리고 재그지그님의 블로그는 자잘한 애니메이션 효과들이 소소한 재미도 있고 사용성에서 좋다고 느껴졌습니다.</p><h2 id="🤔-페이지-구상하기"><a href="#🤔-페이지-구상하기" class="headerlink" title="🤔 페이지 구상하기"></a>🤔 페이지 구상하기</h2><p>대부분의 블로그가 비슷한 구성이겠지만, 재그지그님의 블로그에는 Manifesto라는 페이지가 존재하여 블로그 제작 동기 등의 내용이 있습니다. 저에겐 없어도 될 메뉴라고 생각됩니다.</p><ul><li>메인 페이지</li><li>포스트 리스트 페이지</li><li>포스트 상세 페이지</li><li>이력서 및 포트폴리오 페이지</li></ul><h3 id="메인-페이지"><a href="#메인-페이지" class="headerlink" title="메인 페이지"></a>메인 페이지</h3><ul><li>간단 소개</li><li>태그 필터</li><li>최신 포스트 5개 노출</li></ul><h3 id="포스트-리스트-페이지"><a href="#포스트-리스트-페이지" class="headerlink" title="포스트 리스트 페이지"></a>포스트 리스트 페이지</h3><ul><li>키워드 검색</li><li>태그 필터</li><li>모든 포스트 노출</li></ul><h3 id="포스트-상세-페이지"><a href="#포스트-상세-페이지" class="headerlink" title="포스트 상세 페이지"></a>포스트 상세 페이지</h3><ul><li>md파일 뿌려주기</li><li>댓글 기능</li><li>공유 기능</li><li>메타 정보 만들어내기</li></ul><h3 id="이력서-및-포트폴리오-페이지"><a href="#이력서-및-포트폴리오-페이지" class="headerlink" title="이력서 및 포트폴리오 페이지"></a>이력서 및 포트폴리오 페이지</h3><ul><li><a href="https://parkbeommin.github.io/MyPortfolio/">기존 포트폴리오 페이지</a> 활용하기</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/blog/banner.png&#39;&gt;
&gt; 깔끔하고 내 입맛대로 블로그를 꾸며보고 싶어 시작한 블로그 개편기..!

&lt;h2 id=&quot;🤩-참고할-블로그&quot;&gt;&lt;a href=&quot;#🤩-참고할-블로그&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="markdown blog nuxt tailwindCSS" scheme="https://parkbeommin.github.io/categories/markdown-blog-nuxt-tailwindCSS/"/>
    
    
  </entry>
  
  <entry>
    <title>블로그 개편기 EP.0</title>
    <link href="https://parkbeommin.github.io/posts/blog-0/"/>
    <id>https://parkbeommin.github.io/posts/blog-0/</id>
    <published>2023-08-02T17:19:00.000Z</published>
    <updated>2025-10-21T07:33:47.027Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/blog/banner.png'><p>블로그에게 개발자는 불나방과 같을 것 같다..<br><img src="/images/blog/blog-0-1.png"></p><p>블로깅을 하다보면 블로그를 이전하는 많은 분들을 볼 수 있습니다.<br>대표적인 이유들로는 아래와 같을 것입니다.</p><ul><li>불편해서</li><li>수익성</li><li>트렌디하지 않아서</li><li><strong>맘에 안들어서</strong></li></ul><p>저도 기존의 블로그가 <strong>맘에 들지 않아서</strong> 개편을 해보려합니다.</p><h2 id="🤦🏻-AS-IS"><a href="#🤦🏻-AS-IS" class="headerlink" title="🤦🏻 AS-IS"></a>🤦🏻 AS-IS</h2><p>자유도가 높고, 내 블로그를 내가 구현을 할 수 있다는 것에 자부심을 가져 <code>github 블로그</code>를 선택했습니다.<br><em><strong>github 블로그 만들기</strong></em> 와 같은 키워드로 검색하면 jeykll테마를 활용한 예제들이 많습니다.<br>맘에 드는 테마를 골라서 그냥 클론받아서 하면 된다는 장점이 있었고 쉽게 만들어서 운영해왔습니다.</p><blockquote><p>쉽게 셋팅이 가능했지만, 어느 정도의 틀이 있었고 무엇보다 다른 좋은 블로그들을 보며 내 블로그는 너무나 초라해보였다..</p></blockquote><p><img src="/images/blog/blog-0-2.png"><br><em>칙칙하고 투박하기 그지없는 현재 블로그 상태..</em></p><h2 id="🙋🏻-TO-BE"><a href="#🙋🏻-TO-BE" class="headerlink" title="🙋🏻 TO-BE"></a>🙋🏻 TO-BE</h2><blockquote><p>내 마음대로 만들어보자!</p></blockquote><p>익숙한 기술 스택인 Nuxt로 만들어보기로 했습니다.<br>이번 블로그의 키워드는 아래처럼 정했습니다.</p><ul><li>깔끔</li><li>간결</li><li>재미</li></ul><p><em>누구에게나 잘 읽히는 블로그를 만들어보고 싶다..</em></p><p>좋은 블로그, 자신의 블로그 등을 댓글로 추천&#x2F;자랑해주세요..!!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/blog/banner.png&#39;&gt;

&lt;p&gt;블로그에게 개발자는 불나방과 같을 것 같다..&lt;br&gt;&lt;img src=&quot;/images/blog/blog-0-1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;블로깅을 하다보면 블로그를 이전하는 많은 분들을</summary>
      
    
    
    
    <category term="blog github jekyll nuxt" scheme="https://parkbeommin.github.io/categories/blog-github-jekyll-nuxt/"/>
    
    
  </entry>
  
  <entry>
    <title>[WEB] web push, 이렇게 쉬운거였어?</title>
    <link href="https://parkbeommin.github.io/posts/2023-07-28-web-push/"/>
    <id>https://parkbeommin.github.io/posts/2023-07-28-web-push/</id>
    <published>2023-07-27T15:43:00.000Z</published>
    <updated>2025-10-21T07:33:47.016Z</updated>
    
    <content type="html"><![CDATA[<img src='/images/web/banner.png'><blockquote><p>사용자들에게 푸쉬 알림을 보내고 싶은데..<br>난 앱 개발자가 아닌데..<br>언제 또 앱 개발 공부를 하지..</p></blockquote><p>앱 개발 안해도 푸쉬 알림을 보낼 수 있습니다!<br>웹 푸쉬를 활용하면 브라우저의 푸쉬 기능을 입맛대로 사용할 수 있습니다!</p><h2 id="🔑웹-푸쉬-구현에-앞서"><a href="#🔑웹-푸쉬-구현에-앞서" class="headerlink" title="🔑웹 푸쉬 구현에 앞서.."></a>🔑웹 푸쉬 구현에 앞서..</h2><p>웹 푸쉬 구현에 앞서 실습 환경은 아래와 같습니다.<br>다른 프레임워크라고 하더라도 기본적인 구조는 같으니 이해하시기에 어렵지 않으실 겁니다!</p><ul><li>Vue (v3.3.4)</li><li>Node</li><li>Firebase firestore</li></ul><p>( 모바일 기준 )<br>웹 푸쉬는 카카오 브라우저 및 네이버 브라우저에서는 동작하지 않습니다.<br>적절한 조치를 취해 기본 브라우저(삼성, 크롬, 사파리)로 유도해야합니다.<br>IOS의 경우, 16.4버전 이상부터 푸쉬 기능이 지원되며 PWA로 구현하여 앱을 다운로드 후 푸쉬 기능이 지원됩니다.</p><h2 id="📃구독-부탁드립니다"><a href="#📃구독-부탁드립니다" class="headerlink" title="📃구독 부탁드립니다."></a>📃구독 부탁드립니다.</h2><p>갑자기 구독이요..?</p><p>웹 푸쉬는 구독을 한 사용자에게 토큰값을 얻어서 보내야 합니다.<br>구독 버튼을 만들어 봅시다.</p><p>구독 버튼을 만들기 위해서는 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker</a>와 <a href="https://developer.mozilla.org/en-US/docs/Web/API/PushManager">PushManager</a>를 사용해야합니다.</p><p>Vue 프로젝트의 <code>/public</code> 폴더에 <code>service-worker.js</code> 파일을 만들어줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 웹 푸쉬 수신 시</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&quot;push&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> text = event.<span class="property">data</span>.<span class="title function_">text</span>();</span><br><span class="line">    event.<span class="title function_">waitUntil</span>(</span><br><span class="line">        self.<span class="property">registration</span>.<span class="title function_">showNotification</span>(<span class="string">&quot;웹 푸쉬!&quot;</span>, &#123;</span><br><span class="line">            <span class="attr">body</span>: text,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&quot;https://github.io/ParkBeomMin/WebPushExample&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 푸쉬 알림 클릭 시</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&quot;notificationclick&quot;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">    event.<span class="property">notification</span>.<span class="title function_">close</span>();</span><br><span class="line">    event.<span class="title function_">waitUntil</span>(clients.<span class="title function_">openWindow</span>(event.<span class="property">notification</span>.<span class="property">data</span>.<span class="property">url</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>push와 notificationclick 이벤트를 등록시켜줍니다.<br>event.data.text()를 통해 푸쉬 알림에 보여줄 데이터를 가져오고 showNotification의 body값에 뿌려줍니다.<br>showNotification의 첫번째 인자는 푸쉬알림의 타이틀니니다.<br>url 부분은 notificationclick 이벤트에서 푸쉬 클릭 시 이동할 url 경로입니다.</p><p>이제 <code>HomeView.vue</code> 파일로 이동하여 구독 버튼과 service worker 파일을 등록하고 구독을 할 수 있는 기능을 구현해보겠습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;requestPermission&quot;</span>&gt;</span>&#123;&#123; buttonText &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>버튼은 위와 같이 만들고, buttonText는 구독과 구독해지를 위해 변화될 수 있도록 했습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> buttonText = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// Service Worker 등록 코드</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;serviceWorker&#x27;</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">        <span class="keyword">const</span> workerFile = <span class="string">&#x27;/service-worker.js&#x27;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> registration = <span class="keyword">await</span> navigator.<span class="property">serviceWorker</span>.<span class="title function_">register</span>(workerFile);</span><br><span class="line">            <span class="keyword">if</span> (registration) &#123;</span><br><span class="line">                <span class="keyword">const</span> subscription = <span class="keyword">await</span> registration.<span class="property">pushManager</span>.<span class="title function_">getSubscription</span>();</span><br><span class="line">                <span class="keyword">if</span> (subscription) &#123;</span><br><span class="line">                    buttonText.<span class="property">value</span> = <span class="string">&#x27;구독 해지하기&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    buttonText.<span class="property">value</span> = <span class="string">&#x27;구독하기&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(e.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Service Worker in navigator error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>이제 service worker가 등록이 되었으니, 구독 요청 기능을 구현해보겠습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">requestPermission</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> registration = <span class="keyword">await</span> navigator.<span class="property">serviceWorker</span>.<span class="property">ready</span>;</span><br><span class="line">        <span class="keyword">const</span> subscription = <span class="keyword">await</span> registration.<span class="property">pushManager</span>.<span class="title function_">getSubscription</span>();</span><br><span class="line">        <span class="keyword">if</span> (subscription) &#123;</span><br><span class="line">            <span class="comment">// 이미 구독이 되어있다면 해지하기</span></span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> DB에 구독 해지 정보 보내기</span></span><br><span class="line">            buttonText.<span class="property">value</span> = <span class="string">&#x27;구독하기&#x27;</span>;</span><br><span class="line">            subscription.<span class="title function_">unsubscribe</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 구독이 되어있지 않으면 구독하기</span></span><br><span class="line">            <span class="keyword">const</span> subscription = <span class="keyword">await</span> registration.<span class="property">pushManager</span>.<span class="title function_">subscribe</span>(&#123;</span><br><span class="line">                <span class="attr">userVisibleOnly</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">applicationServerKey</span>: vapidKey.<span class="property">value</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> DB에 구독 정보 보내기</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;subscription =&gt; &#x27;</span>, subscription.<span class="title function_">toJSON</span>());</span><br><span class="line">            buttonText.<span class="property">value</span> = <span class="string">&#x27;구독 해지하기&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(e.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>요청은 service worker가 등록되고 준비가 된 이후 pushManager의 getSubscription()를 통해 구독정보를 가져옵니다.<br>구독이 되어있다면 해지, 되어있지 않다면 구독을 합니다.<br>뜬금없이 <code>vapidKey.value</code> 이 친구가 나타났는데 푸쉬 발송을 위한 키값입니다. 이 키값은 서버단에서 만들어야합니다.</p><p>이제 Node 프로젝트로 이동합니다.</p><p><code>npm install -g web-push</code><br><code>web-push generate-vapid-keys</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">=======================================</span><br><span class="line"></span><br><span class="line">Public Key:</span><br><span class="line">BAHc42Ge9Ku-Hgup-66JXrkbsWuwDTUTnoh0Y5UyQFyS04UbP7NF02ZfOMMDf2ujLTMIfKlQ4cx4Thz8ek6hze8</span><br><span class="line"></span><br><span class="line">Private Key:</span><br><span class="line">TdolN_-xYH9ARuWRDULgaXO-EFgadIM39FhCSttwswc</span><br><span class="line"></span><br><span class="line">=======================================</span><br></pre></td></tr></table></figure><p>위 명령어를 통해 web-push를 설치하고, vapid key 값을 발급받습니다.<br>발급받은 vapid key 값 중 Public Key를 위에서 언급되었던 <code>vapidKey.value</code>에 넣어줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vapidKey = <span class="title function_">ref</span>(</span><br><span class="line">    <span class="string">&quot;BAHc42Ge9Ku-Hgup-66JXrkbsWuwDTUTnoh0Y5UyQFyS04UbP7NF02ZfOMMDf2ujLTMIfKlQ4cx4Thz8ek6hze8&quot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>이제 구독 버튼을 눌러보면 아래와 같이 알림 요청과 구독 정보를 받아올 수 있습니다.</p><img src='/images/web/web-push-1.png'><img src='/images/web/web-push-2.png'><p>이 구독 정보를 가지고 다시 Node 프로젝트로 이동합니다.<br><code>npm install --save web-push</code></p><p>라이브러리 설치 후 vapid키와 구독정보를 포함해 푸쉬 발송 로직을 만들어줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpush = <span class="built_in">require</span>(<span class="string">&quot;web-push&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vapidKeys = &#123;</span><br><span class="line">    <span class="attr">publicKey</span>:</span><br><span class="line">        <span class="string">&quot;BAHc42Ge9Ku-Hgup-66JXrkbsWuwDTUTnoh0Y5UyQFyS04UbP7NF02ZfOMMDf2ujLTMIfKlQ4cx4Thz8ek6hze8&quot;</span>,</span><br><span class="line">    <span class="attr">privateKey</span>: <span class="string">&quot;TdolN_-xYH9ARuWRDULgaXO-EFgadIM39FhCSttwswc&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">webpush.<span class="title function_">setVapidDetails</span>(</span><br><span class="line">    <span class="string">&quot;mailto:bmpark@jinhak.com&quot;</span>,</span><br><span class="line">    vapidKeys.<span class="property">publicKey</span>,</span><br><span class="line">    vapidKeys.<span class="property">privateKey</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">webpush.<span class="title function_">sendNotification</span>(</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">endpoint</span>:</span><br><span class="line">            <span class="string">&quot;https://fcm.googleapis.com/fcm/send/cRngP9o7apw:APA91bG5_i-BS2WBUSehlWxe4Pr2PLhugyvCtIcNgFSs2RcSSth60wmC61R9SH-Iq3tFpO1tqprXcFFze4ZduL-MsSGWP9DJvm7jEbWB3nM40Ui99VFNPsnoHUx-emEceevzR6vwATMn&quot;</span>,</span><br><span class="line">        <span class="attr">keys</span>: &#123;</span><br><span class="line">            <span class="attr">auth</span>: <span class="string">&quot;BjJjTUVFQi9UCBH-VqqVAg&quot;</span>,</span><br><span class="line">            <span class="attr">p256dh</span>: <span class="string">&quot;BDDJ_YGSawW1NowpbJ1Cl0N8JiFtsSuMBjjtWCly7lBrf4wnsrJP7xlVTqBKhhaMIP3RwkCfb5oSSwDVh1fbYp4&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;웹푸쉬발송!&quot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>이제 <code>node index.js</code>로 서버를 실행시키면 웹 푸쉬 발송을 확인할 수 있습니다!</p><img src='/images/web/web-push-3.png'><h2 id="💻RESTFul한-WebPush로"><a href="#💻RESTFul한-WebPush로" class="headerlink" title="💻RESTFul한 WebPush로!"></a>💻RESTFul한 WebPush로!</h2><p>위에서 단순히 웹 푸쉬가 동작하는 것까지 했으니, 이제 db도 연결하고 서버 api로 웹 푸쉬가 발송될 수 있도록 해보겠습니다.<br>Node 프로젝트로 이동합니다.</p><p><code>npm install express --save</code><br><code>npm install firebase-admin --save</code></p><p>firebase console에서 키값 파일도 다운로드 받아놓습니다.<br>firebase project &gt; 프로젝트 설정 &gt; 서비스 계정 &gt; 새 비공개 키 생성</p><p>이제 기본적인 셋팅은 완료가 되었고, 구조를 잡고 구현을 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├── routes</span><br><span class="line">│   ├── index.<span class="property">js</span></span><br><span class="line">│   └── webPush.<span class="property">js</span></span><br><span class="line">├── firebase-account-file.<span class="property">json</span></span><br><span class="line">├── firebase.<span class="property">js</span></span><br><span class="line">├── index.<span class="property">js</span></span><br><span class="line">├── webPush.<span class="property">controller</span>.<span class="property">js</span></span><br><span class="line">└── package.<span class="property">json</span></span><br></pre></td></tr></table></figure><p>기존 <code>index.js</code>의 webPush 기능들은 <code>webPush.controller.js</code>파일로 변경했습니다.<br>이제 각 파일에 대해 파헤쳐보겠습니다.</p><p>먼저 <code>index.js</code> 파일은 기본적인 express 라우팅 처리를 해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> index = <span class="built_in">require</span>(<span class="string">&quot;./routes/index&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, index);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebPush Server On 3000 Port&quot;</span>));</span><br></pre></td></tr></table></figure><p><code>webPush.controller.js</code>에서는 vapidkey와 push를 보내는 함수를 export시켜줍니다.<br>vapidKey는 서버에서 발급받은 키를 고정으로 프론트와 같게 사용해야하기 때문에 Vapid값을 보내주는 함수를 만들었습니다.<br>dev, production 환경에서 각각 달라지므로 cross-env를 활용해 config값으로 셋팅하여 사용해도 좋습니다!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpush = <span class="built_in">require</span>(<span class="string">&quot;web-push&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vapidKeys = &#123;</span><br><span class="line">    <span class="attr">publicKey</span>:</span><br><span class="line">        <span class="string">&quot;BAHc42Ge9Ku-Hgup-66JXrkbsWuwDTUTnoh0Y5UyQFyS04UbP7NF02ZfOMMDf2ujLTMIfKlQ4cx4Thz8ek6hze8&quot;</span>,</span><br><span class="line">    <span class="attr">privateKey</span>: <span class="string">&quot;TdolN_-xYH9ARuWRDULgaXO-EFgadIM39FhCSttwswc&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">webpush.<span class="title function_">setVapidDetails</span>(</span><br><span class="line">    <span class="string">&quot;mailto:club20608@gmail.com&quot;</span>,</span><br><span class="line">    vapidKeys.<span class="property">publicKey</span>,</span><br><span class="line">    vapidKeys.<span class="property">privateKey</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getVapidKey</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> vapidKeys.<span class="property">publicKey</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">push</span> = (<span class="params">&#123; data, tokens &#125;</span>) =&gt; &#123;</span><br><span class="line">    tokens.<span class="title function_">forEach</span>(<span class="title function_">async</span> (token) =&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> webpush.<span class="title function_">sendNotification</span>(token, data.<span class="property">message</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; getVapidKey, push &#125;;</span><br></pre></td></tr></table></figure><p><code>firebase.js</code>에서는 firebase를 초기화하고 firestore db와 통신하는 기능들을 구현합니다.<br>토큰을 db에 추가&#x2F;삭제하고 가져와서 발송처리를 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">    initializeApp,</span><br><span class="line">    applicationDefault,</span><br><span class="line">    cert,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&quot;firebase-admin/app&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; getFirestore &#125; = <span class="built_in">require</span>(<span class="string">&quot;firebase-admin/firestore&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; push &#125; = <span class="built_in">require</span>(<span class="string">&quot;./webPush.controller&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> serviceAccount = <span class="built_in">require</span>(<span class="string">&quot;./firebase-account-file.json&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">initializeApp</span>(&#123;</span><br><span class="line">    <span class="attr">credential</span>: <span class="title function_">cert</span>(serviceAccount),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> db = <span class="title function_">getFirestore</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setToken</span> = <span class="keyword">async</span> (<span class="params">&#123; endpoint, keys &#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> isExist = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">const</span> q = db.<span class="title function_">collection</span>(<span class="string">&quot;token&quot;</span>).<span class="title function_">where</span>(<span class="string">&quot;endpoint&quot;</span>, <span class="string">&quot;==&quot;</span>, endpoint);</span><br><span class="line">    <span class="keyword">const</span> querySnapshot = <span class="keyword">await</span> q.<span class="title function_">get</span>();</span><br><span class="line">    querySnapshot.<span class="title function_">forEach</span>(<span class="function">(<span class="params">doc</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (doc.<span class="property">id</span>) &#123;</span><br><span class="line">            isExist = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (!isExist) &#123;</span><br><span class="line">        <span class="keyword">const</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        db.<span class="title function_">collection</span>(<span class="string">&quot;token&quot;</span>).<span class="title function_">add</span>(&#123;</span><br><span class="line">            endpoint,</span><br><span class="line">            keys,</span><br><span class="line">            <span class="attr">regDate</span>: today,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteToken</span> = <span class="keyword">async</span> (<span class="params">&#123; endpoint, keys &#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> q = db.<span class="title function_">collection</span>(<span class="string">&quot;token&quot;</span>).<span class="title function_">where</span>(<span class="string">&quot;endpoint&quot;</span>, <span class="string">&quot;==&quot;</span>, endpoint); <span class="comment">// query(collection(db, &#x27;token&#x27;), where(&#x27;endpoint&#x27;, &#x27;==&#x27;, true));</span></span><br><span class="line">    <span class="keyword">const</span> querySnapshot = <span class="keyword">await</span> q.<span class="title function_">get</span>();</span><br><span class="line">    querySnapshot.<span class="title function_">forEach</span>(<span class="function">(<span class="params">doc</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (doc.<span class="property">id</span>) &#123;</span><br><span class="line">            db.<span class="title function_">doc</span>(<span class="string">`token/<span class="subst">$&#123;doc.id&#125;</span>`</span>).<span class="title function_">delete</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sendMessage</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> registrationTokens = [];</span><br><span class="line">    <span class="keyword">const</span> docs = <span class="keyword">await</span> db.<span class="title function_">collection</span>(<span class="string">&quot;token&quot;</span>).<span class="title function_">get</span>();</span><br><span class="line">    <span class="comment">// 디비에 등록된 토큰 가져오기</span></span><br><span class="line">    docs.<span class="title function_">forEach</span>(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">        registrationTokens.<span class="title function_">push</span>(&#123; ...result.<span class="title function_">data</span>() &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> message = &#123;</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&quot;웹푸쉬!&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">tokens</span>: registrationTokens.<span class="title function_">filter</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> r.<span class="property">endpoint</span>),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_">push</span>(message);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    setToken,</span><br><span class="line">    sendMessage,</span><br><span class="line">    deleteToken,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>routes/index.js</code>에서는 webPush 경로로 라우팅 해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">router.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> webPush = <span class="built_in">require</span>(<span class="string">&quot;./webPush.js&quot;</span>);</span><br><span class="line">router.<span class="title function_">use</span>(<span class="string">&quot;/webPush&quot;</span>, webPush);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>마지막으로 <code>routes/webPush.js</code>에서 각 api들을 구현해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; setToken, deleteToken, sendMessage &#125; = <span class="built_in">require</span>(<span class="string">&quot;../firebase&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; getVapidKey &#125; = <span class="built_in">require</span>(<span class="string">&quot;../webPush.controller&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">router.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">rtCode</span>: <span class="string">&quot;S&quot;</span>, <span class="attr">vapidKey</span>: <span class="title function_">getVapidKey</span>() &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; endpoint, keys &#125; = req.<span class="property">body</span>;</span><br><span class="line">    <span class="title function_">setToken</span>(&#123; endpoint, keys &#125;);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">rtCode</span>: <span class="string">&quot;S&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/delToken&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; endpoint &#125; = req.<span class="property">body</span>;</span><br><span class="line">    <span class="title function_">deleteToken</span>(&#123; <span class="attr">endpoint</span>: <span class="built_in">decodeURIComponent</span>(endpoint) &#125;);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">rtCode</span>: <span class="string">&quot;S&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/send&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">sendMessage</span>();</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">rtoCode</span>: <span class="string">&quot;S&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>이제 Vue 프로젝트로 이동하여 api 호출을 구현합니다.</p><p><code>npm i --save axios</code></p><p><code>main.ts</code>로 이동하여 axios를 글로벌하게 사용할 수 있게 등록해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$axios</span> = axios;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>이제 <code>vite.config.ts</code>로 이동하여 api 서버가 제대로 호출될 수 있도록 server 설정을 해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">server</span>: &#123;</span><br><span class="line">        <span class="attr">port</span>: <span class="number">3001</span>,</span><br><span class="line">        <span class="attr">cors</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3000&#x27;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>페이지 랜딩 시 vapidKey 값을 받아와서 셋팅될 수 있도록 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; onMounted, getCurrentInstance, ref, nextTick &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> instance = <span class="title function_">getCurrentInstance</span>();</span><br><span class="line"><span class="keyword">const</span> vapidKey = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> ds = <span class="title function_">await</span> (instance?.<span class="property">proxy</span> <span class="keyword">as</span> any).<span class="property">$axios</span>.<span class="title function_">get</span>(<span class="string">&#x27;/api/webPush&#x27;</span>);</span><br><span class="line">  vapidKey.<span class="property">value</span> = ds.<span class="property">data</span>.<span class="property">vapidKey</span>;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>requestPermission</code> 함수에서 TODO로 남겨놓았던 부분에도 토큰값이 셋팅될 수 있도록 추가해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">requestPermission</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> registration = <span class="keyword">await</span> navigator.<span class="property">serviceWorker</span>.<span class="property">ready</span>;</span><br><span class="line">        <span class="keyword">const</span> subscription = <span class="keyword">await</span> registration.<span class="property">pushManager</span>.<span class="title function_">getSubscription</span>();</span><br><span class="line">        <span class="keyword">if</span> (subscription) &#123;</span><br><span class="line">            <span class="comment">// 이미 구독이 되어있다면 해지하기</span></span><br><span class="line">            <span class="title function_">await</span> (instance?.<span class="property">proxy</span> <span class="keyword">as</span> any).<span class="property">$axios</span>.<span class="title function_">post</span>(<span class="string">`/api/webPush/delToken`</span>, subscription);</span><br><span class="line">            buttonText.<span class="property">value</span> = <span class="string">&#x27;구독하기&#x27;</span>;</span><br><span class="line">            subscription.<span class="title function_">unsubscribe</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 구독이 되어있지 않으면 구독하기</span></span><br><span class="line">            <span class="keyword">const</span> subscription = <span class="keyword">await</span> registration.<span class="property">pushManager</span>.<span class="title function_">subscribe</span>(&#123;</span><br><span class="line">                <span class="attr">userVisibleOnly</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">applicationServerKey</span>: vapidKey.<span class="property">value</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;subscription =&gt; &#x27;</span>, subscription.<span class="title function_">toJSON</span>());</span><br><span class="line">            <span class="title function_">await</span> (instance?.<span class="property">proxy</span> <span class="keyword">as</span> any).<span class="property">$axios</span>.<span class="title function_">post</span>(<span class="string">&#x27;/api/webPush&#x27;</span>, subscription);</span><br><span class="line">            buttonText.<span class="property">value</span> = <span class="string">&#x27;구독 해지하기&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(e.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>이제 구독 버튼 클릭 시 DB에 토큰이 저장되고 모든 셋팅이 끝났습니다.<br>postman 프로그램으로 <code>/webPush/send</code> api를 호출하면 웹 푸쉬가 정상적으로 오는 것을 확인할 수 있습니다!</p><img src='/images/web/web-push-4.png'><h2 id="😮-IOS는요"><a href="#😮-IOS는요" class="headerlink" title="😮 IOS는요??"></a>😮 IOS는요??</h2><p>IOS는 처음에 말씀드린 것과 같이 사파리 16.4 버전 이상에서 동작이 가능하며 PWA로 만들어야합니다.<br>PWA로 만드는 것은 기존 웹사이트에 Manifest만 등록해주면 됩니다!</p><p>Vue 프로젝트로 이동하여 <code>public/manifest.json</code> 파일을 만들어줍니다.<br>icon 파일들은 <a href="https://www.favicon-generator.org/">favicon-generator</a>사이트에서 만들어주면 편리합니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;short_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;웹푸쉬&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;웹푸쉬&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpush&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standalone&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;theme_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffc107&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;backgroun_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffc107&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-36x36.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;36x36&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.75&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-48x48.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48x48&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-72x72.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;72x72&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.5&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-96x96.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;96x96&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-144x144.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;144x144&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3.0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/android-icon-192x192.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192x192&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;density&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>그리고 <code>index.html</code>로 가서 head태그 안에 mainfest파일을 등록해줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;manifest&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/manifest.json&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vite App<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/src/main.ts&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이제 실행을 시켜보면 아래와 같이 앱을 다운로드 받을 수 있습니다.<br>IOS 환경에서는 ‘홈화면에 추가’를 통해 앱이 설치가 되고, 구독버튼을 눌러 웹 푸쉬 기능을 사용할 수 있습니다.</p><img src='/images/web/web-push-5.png'><hr><p>모든 소스코드는 <a href="https://github.com/ParkBeomMin/WebPushExample">WebPushExample</a>와 <a href="https://github.com/ParkBeomMin/WebPushServerExample">WebPushServerExample</a>에서 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/images/web/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;사용자들에게 푸쉬 알림을 보내고 싶은데..&lt;br&gt;난 앱 개발자가 아닌데..&lt;br&gt;언제 또 앱 개발 공부를 하지..&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;앱 개</summary>
      
    
    
    
    <category term="web web-push" scheme="https://parkbeommin.github.io/categories/web-web-push/"/>
    
    
  </entry>
  
  <entry>
    <title>[DX] git actions로 ssh 접속하여 자동 배포 하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-07-21-git-action-ssh/"/>
    <id>https://parkbeommin.github.io/posts/2023-07-21-git-action-ssh/</id>
    <published>2023-07-20T16:34:00.000Z</published>
    <updated>2025-10-21T07:33:46.988Z</updated>
    
    <content type="html"><![CDATA[<img src='/assets/dx/banner.png'><blockquote><p>로컬에서 작업하고 푸쉬하고<br>마스터 브랜치로 합치고<br>서버에 접속해서 빌드&amp;배포 하고…</p></blockquote><p>개발자는 귀찮음이 많아야 좋은 환경들을 만들어 간다고 합니다.<br>위와 같은 작업이 슬슬 귀찮아져서 자동 배포를 적용해야겠다 싶었습니다.<br>goorm ide로 ubuntu 서버를 사용하고 있고 vue3로 제작된 웹 페이지를 운영하는 환경입니다.</p><h2 id="🔑마스터-브랜치에-코드가-변경되면-빌드-배포가-실행되게-할-수-없을까"><a href="#🔑마스터-브랜치에-코드가-변경되면-빌드-배포가-실행되게-할-수-없을까" class="headerlink" title="🔑마스터 브랜치에 코드가 변경되면 빌드&amp;배포가 실행되게 할 수 없을까?"></a>🔑마스터 브랜치에 코드가 변경되면 빌드&amp;배포가 실행되게 할 수 없을까?</h2><p>goorm ide에 jenkins를 설치해서 ci&#x2F;cd환경을 구축해보려 했는데 설치가 잘 되지 않아 그냥 계속 수동으로 빌드&amp;배포를 진행해왔습니다.<br>수개월간 방치하다 문득 git actions가 떠올랐습니다.<br>git actions로 브랜치에 코드 변화 감지를 할 수 있고 명령어를 실행시킬 수 있기에 ssh 접근도 가능한지 알아봤습니다.</p><blockquote><p>git actions로 ssh 접속하여 빌드&amp;배포 스크립트를 실행시키게 하면 되겠다!</p></blockquote><h2 id="📃배포-스크립트-만들기"><a href="#📃배포-스크립트-만들기" class="headerlink" title="📃배포 스크립트 만들기"></a>📃배포 스크립트 만들기</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">project() &#123;</span><br><span class="line">cd /workspace/project</span><br><span class="line">git pull</span><br><span class="line">npm run build</span><br><span class="line">pm2 restart project</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">project</span><br></pre></td></tr></table></figure><p>workspace의 project폴더로 이동한 후 git pull을 받고 빌드를 하고 pm2를 재시작하는 스크립트입니다.<br>cd 경로를 지정할 때 상대경로로 지정하게 되면 수동으로는 잘 동작하지만, ssh로 접근 시에는 다르기때문에 절대경로로 지정해줍니다.</p><h2 id="💻git-actions-스크립트-만들기"><a href="#💻git-actions-스크립트-만들기" class="headerlink" title="💻git actions 스크립트 만들기"></a>💻git actions 스크립트 만들기</h2><p><code>.github/workflows/main.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">name: remote ssh command</span><br><span class="line">on: [push]</span><br><span class="line">jobs:</span><br><span class="line"></span><br><span class="line">  build:</span><br><span class="line">    name: Build</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: executing remote ssh commands using password</span><br><span class="line">      uses: appleboy/ssh-action@master</span><br><span class="line">      with:</span><br><span class="line">        host: -</span><br><span class="line">        username: -</span><br><span class="line">        password: -</span><br><span class="line">        port: -</span><br><span class="line">        script: /workspace/baepo.sh</span><br></pre></td></tr></table></figure><p>github 레포지토리로 이동해서 main.yml 파일을 위와 같이 만들어줍니다.<br>host와 username, password, port를 잘 지정해주고 먼저 만들어놨던 baepo.sh파일을 실행하도록 스크립트를 만들어줍니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/assets/dx/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;로컬에서 작업하고 푸쉬하고&lt;br&gt;마스터 브랜치로 합치고&lt;br&gt;서버에 접속해서 빌드&amp;amp;배포 하고…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;개발자는 귀찮음이 많</summary>
      
    
    
    
    <category term="dx git actions ssh ci/cd" scheme="https://parkbeommin.github.io/categories/dx-git-actions-ssh-ci-cd/"/>
    
    
  </entry>
  
  <entry>
    <title>[DX] 팀즈 WebHook으로 에러 알림받기</title>
    <link href="https://parkbeommin.github.io/posts/2023-07-14-teams-webhook-error/"/>
    <id>https://parkbeommin.github.io/posts/2023-07-14-teams-webhook-error/</id>
    <published>2023-07-13T22:33:00.000Z</published>
    <updated>2025-10-21T07:33:46.964Z</updated>
    
    <content type="html"><![CDATA[<img src='/assets/dx/banner.png'><blockquote><p>개발자님 A페이지에서 오류가 났나봐요.<br>확인해보겠습니다.<br>내부망 &gt; 서버 &gt; 로그 찾기</p></blockquote><p>서버 에러가 나는 경우 500 상태 값을 리턴해주고 console.error()를 찍어놓는 방식으로 관리가 되고 있었습니다.<br>사이트에 오류가 났을 경우, 대개 서버에러인 경우가 많고 그러면 내부망에서 서버에 접근해서 로그를 찾아봐야했습니다.<br>오류가 발생했을 때 확인하는 과정도 귀찮음이 있고, 오류가 발생하더라도 서버 로그를 모니터링하지 않으면 모르고 지나가는 경우도 있었습니다.</p><h2 id="🔑에러가-났을-때-바로-알게-할-수-있지-않을까"><a href="#🔑에러가-났을-때-바로-알게-할-수-있지-않을까" class="headerlink" title="🔑에러가 났을 때 바로 알게 할 수 있지 않을까?"></a>🔑에러가 났을 때 바로 알게 할 수 있지 않을까?</h2><p>저희 팀은 팀즈로 소통을 하고 있고, 팀즈 알림에 반응하도록 적응이 되어있어서 팀즈 알림을 활용하면 어떨까 했습니다.<br>팀즈에는 각 채널별로 웹훅을 설정할 수 있는 기능이 있습니다.</p><blockquote><p>팀즈의 웹훅을 활용해 오류가 났을 때 알람이 가도록 하면 되겠다!</p></blockquote><h2 id="🎊에러-핸들링에-팀즈-웹훅-추가하기"><a href="#🎊에러-핸들링에-팀즈-웹훅-추가하기" class="headerlink" title="🎊에러 핸들링에 팀즈 웹훅 추가하기"></a>🎊에러 핸들링에 팀즈 웹훅 추가하기</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">const axios = require(&#x27;axios&#x27;);</span><br><span class="line">const config = require(&#x27;./config/index.js&#x27;);</span><br><span class="line"></span><br><span class="line">let errorMiddleware = (err, req, res, next) =&gt; &#123;</span><br><span class="line">   ...</span><br><span class="line">    if (process.env.NODE_ENV === &#x27;production&#x27;) &#123;</span><br><span class="line">        teamsWebHook(err.stack);</span><br><span class="line">    &#125;</span><br><span class="line">    console.error(`SERVER ERROR ($&#123;new Date().toISOString()&#125;) - $&#123;req.originalUrl&#125;\n$&#123;err.stack&#125;`);</span><br><span class="line">    res.status(500).end(&#x27;Server Error&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const teamsWebHook = (errMsg) =&gt; &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        const $axios = axios.create(&#123;</span><br><span class="line">            baseURL: config.teamsWebHook,</span><br><span class="line">            headers: &#123;</span><br><span class="line">                &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,</span><br><span class="line">            &#125;,</span><br><span class="line">            timeout: 5000,</span><br><span class="line">        &#125;);</span><br><span class="line">        $axios.post(&#x27;/&#x27;, &#123;</span><br><span class="line">            type: &#x27;message&#x27;,</span><br><span class="line">            attachments: [</span><br><span class="line">                &#123;</span><br><span class="line">                    contentType: &#x27;application/vnd.microsoft.card.adaptive&#x27;,</span><br><span class="line">                    content: &#123;</span><br><span class="line">                        type: &#x27;AdaptiveCard&#x27;,</span><br><span class="line">                        body: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                type: &#x27;TextBlock&#x27;,</span><br><span class="line">                                size: &#x27;Large&#x27;,</span><br><span class="line">                                weight: &#x27;Bolder&#x27;,</span><br><span class="line">                                text: &#x27;Server Error&#x27;,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                type: &#x27;TextBlock&#x27;,</span><br><span class="line">                                text: &#x27;&lt;at&gt;mention&lt;/at&gt;&#x27;,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                type: &#x27;TextBlock&#x27;,</span><br><span class="line">                                text: errMsg,</span><br><span class="line">                                wrap: true,</span><br><span class="line">                            &#125;,</span><br><span class="line">                        ],</span><br><span class="line">                        $schema: &#x27;http://adaptivecards.io/schemas/adaptive-card.json&#x27;,</span><br><span class="line">                        version: &#x27;1.0&#x27;,</span><br><span class="line">                        msteams: &#123;</span><br><span class="line">                            width: &#x27;Full&#x27;,</span><br><span class="line">                            entities: [</span><br><span class="line">                                &#123;</span><br><span class="line">                                    type: &#x27;mention&#x27;,</span><br><span class="line">                                    text: &#x27;&lt;at&gt;mention&lt;/at&gt;&#x27;,</span><br><span class="line">                                    mentioned: &#123;</span><br><span class="line">                                        id: &#x27;abc@def.com&#x27;,</span><br><span class="line">                                        name: &#x27;name&#x27;,</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                &#125;,</span><br><span class="line">                            ],</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; catch (e) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>console.error()로만 에러 로그를 남기고 있던 <code>errorMiddleware</code>에 teamsWebHook 함수를 만들어서 알람이 가도록 추가했습니다.<br>웹훅을 통해 메세지를 보내는 것은 더 간단하지만, 멘션기능을 사용하려면 AdaptiveCard으로만 가능합니다.<br>멘션이 표현될 부분을 <code>&lt;at&gt;&lt;/at&gt;</code>으로 감싸주고 msteams &gt; entities에서 type을 mention으로 설정하고 text에는 멘션이 표현될 부분과 동일하게 지정해줍니다.(변수에 값을 할당하는 느낌)<br>mentioned에는 팀즈에서 사용중인 이메일과 이름을 지정해줍니다. 이메일기반으로 멘션이 진행되기에 이메일을 정확하게 입력해주셔야합니다.<br>TextBlock에 <code>wrap: true</code>를 주지 않으면 자동으로 텍스트를 생략시키기때문에 추가해줍니다.<br>msteams에 <code>width: &#39;Full&#39;</code>이 부분도 넣어주어야 가로로 꽉찬 알림을 받아보실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/assets/dx/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;개발자님 A페이지에서 오류가 났나봐요.&lt;br&gt;확인해보겠습니다.&lt;br&gt;내부망 &amp;gt; 서버 &amp;gt; 로그 찾기&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;서버 에러가 </summary>
      
    
    
    
    <category term="dx teams webhook error" scheme="https://parkbeommin.github.io/categories/dx-teams-webhook-error/"/>
    
    
  </entry>
  
  <entry>
    <title>[DX] 다수의 프로젝트 병렬로 빌드&amp;배포하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-07-14-projects-build-with-parallel/"/>
    <id>https://parkbeommin.github.io/posts/2023-07-14-projects-build-with-parallel/</id>
    <published>2023-07-13T16:48:00.000Z</published>
    <updated>2025-10-21T07:33:46.945Z</updated>
    
    <content type="html"><![CDATA[<img src='/assets/dx/banner.png'><blockquote><p>PC랑 M 프로젝트 실서버 배포 진행하겠습니다~<br>git pull PC<br>… PC build …<br>… PC baepo …<br>git pull M …<br>………</p></blockquote><p>저희 팀의 배포 방식은 순차대로 짜여진 쉘스크립트를 실행하는 방식입니다.<br>그냥 쉘스크립트 하나만 실행하기만 하면 두 개의 프로젝트가 빌드&amp;배포가 되기에 편리했었죠.<br>하지만 PC가 빌드&amp;배포 된 후, M이 빌드&amp;배포가 되기에 하나의 프로젝트를 빌드&amp;배포하는 것의 2배가 되는 시간이 걸리게 됩니다.</p><h2 id="🔑두-프로젝트가-동시에-빌드-배포될-수는-없을까"><a href="#🔑두-프로젝트가-동시에-빌드-배포될-수는-없을까" class="headerlink" title="🔑두 프로젝트가 동시에 빌드&amp;배포될 수는 없을까?"></a>🔑두 프로젝트가 동시에 빌드&amp;배포될 수는 없을까?</h2><p>순차적으로 빌드&amp;배포가 되어야 할 프로트트들이 아니라면 동시에 빌드&amp;배포가 되면 시간을 좀 더 줄일 수 있지 않을까 싶었습니다.<br>빌드하는 작업을 백그라운드로 실행시키면 되지 않나?라는 생각으로 시작했습니다.</p><p>쉘스크립트 명령어 중 <code>&amp;&amp;</code> 명령어를 자주 사용하게 되는데, <code>&amp;&amp;</code> 명령어는 앞의 명령어의 실행이 끝난 뒤 다음 명령어를 실행하도록 합니다.<br>이와 유사한 <code>&amp;</code> 명령어가 있습니다. <code>&amp;</code> 명령어는 앞의 명령어를 백그라운드로 실행시키고 다음 명령어를 실행하도록 합니다.</p><blockquote><p><code>&amp;</code> 명령어를 활용하면 되겠다!</p></blockquote><h2 id="🎊-명령어로-병렬-실행하는-쉘-스크립트-만들기"><a href="#🎊-명령어로-병렬-실행하는-쉘-스크립트-만들기" class="headerlink" title="🎊&amp;명령어로 병렬 실행하는 쉘 스크립트 만들기"></a>🎊&amp;명령어로 병렬 실행하는 쉘 스크립트 만들기</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 작업 1을 백그라운드에서 실행</span><br><span class="line">task1() &#123;</span><br><span class="line">    # 작업 1 실행 명령어</span><br><span class="line">    sleep 5 # 예시로 5초간 대기</span><br><span class="line">    echo &quot;작업 1 완료&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 작업 2를 백그라운드에서 실행</span><br><span class="line">task2() &#123;</span><br><span class="line">    # 작업 2 실행 명령어</span><br><span class="line">    sleep 3 # 예시로 3초간 대기</span><br><span class="line">    echo &quot;작업 2 완료&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 작업 1 실행</span><br><span class="line">task1 &amp;</span><br><span class="line"></span><br><span class="line"># 작업 2 실행</span><br><span class="line">task2 &amp;</span><br><span class="line"></span><br><span class="line"># 모든 백그라운드 작업이 완료될 때까지 대기</span><br><span class="line">wait</span><br><span class="line"></span><br><span class="line">echo &quot;모든 작업 완료&quot;</span><br></pre></td></tr></table></figure><p>각각의 task를 만들고 그 task를 <code>&amp;</code> 명령어로 백그라운드에 실행시키게 합니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/assets/dx/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;PC랑 M 프로젝트 실서버 배포 진행하겠습니다~&lt;br&gt;git pull PC&lt;br&gt;… PC build …&lt;br&gt;… PC baepo …&lt;br&gt;git pull M …</summary>
      
    
    
    
    <category term="dx linux shellscript" scheme="https://parkbeommin.github.io/categories/dx-linux-shellscript/"/>
    
    
  </entry>
  
  <entry>
    <title>[Vanilla JS] About Me 프로젝트 - 라우터 구성하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-27-vanillajs-project_3/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-27-vanillajs-project_3/</id>
    <published>2023-07-09T16:16:00.000Z</published>
    <updated>2025-10-21T07:33:46.931Z</updated>
    
    <content type="html"><![CDATA[<img src='/assets/about-me/banner.png'><blockquote><p><a href="https://aboutme2.web.app/">About Me</a><br>친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!</p></blockquote><p>지난 <a href="https://parkbeommin.github.io/web/frontend/vanillajs-project_2/">라우터 구성하기</a>에 이어서 프로젝트의 페이지 및 컴포넌트 구성에 대해 이야기해보겠습니다.</p><p>About Me 컨셉은 나의 새싹을 만들어 키우는 것입니다.<br>나의 새싹을 만들면, 색상 및 종류가 랜덤하게 정해지고 id가 부여됩니다.<br>id를 통해 링크가 생성되며 링크를 친구들에게 공유하여 나에 대한 생각을 받습니다.<br>친구들에게 입력받은 단어&#x2F;문장들이 비가 되어 나의 새싹을 키우게 됩니다.</p><h2 id="📃라우터-만들기"><a href="#📃라우터-만들기" class="headerlink" title="📃라우터 만들기"></a>📃라우터 만들기</h2><p>SPA로 만들기 위해 라우터 기능을 구현할 필요가 있습니다. 해시라우팅 방식으로 구현해보도록 하겠습니다.</p><p><code>router.js</code>에 라우터 클래스를 만들어줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export default class Router &#123;</span><br><span class="line">    constructor(&#123; view, route &#125;) &#123;</span><br><span class="line">        this.view = view;</span><br><span class="line">        this.route = route;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>라우터를 통해 그려질 화면에 대한 요소를 view로 받습니다.<br>route로는 라우팅될 정보들을 받습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">export default class Router &#123;</span><br><span class="line">    constructor(&#123; view, route &#125;) &#123;</span><br><span class="line">        this.view = view;</span><br><span class="line">        this.route = route;</span><br><span class="line">        this.setRoute(); // 라우터가 동작할 수 있도록 추가</span><br><span class="line">    &#125;</span><br><span class="line">    setRoute() &#123;</span><br><span class="line">        document.addEventListener(&quot;DOMContentLoaded&quot;, () =&gt; &#123;</span><br><span class="line">            const url = window.location.hash.replace(&quot;#&quot;, &quot;&quot;);</span><br><span class="line">            this.renderPage(url);</span><br><span class="line">        &#125;);</span><br><span class="line">        window.addEventListener(&quot;hashchange&quot;, () =&gt; &#123;</span><br><span class="line">            const url = window.location.hash.replace(&quot;#&quot;, &quot;&quot;);</span><br><span class="line">            this.renderPage(url);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>페이지가 랜딩될 때와 url의 해시에 변화가 있을 때마다 페이지가 잘 랜더링될 수 있도록 setRoute함수를 만들고 라우터 클래스가 생성될 때 실행될 수 있도록 합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">export default class Router &#123;</span><br><span class="line">    constructor(&#123; view, route &#125;) &#123;</span><br><span class="line">        this.view = view;</span><br><span class="line">        this.route = route;</span><br><span class="line">        this.setRoute();</span><br><span class="line"></span><br><span class="line">        // urlChange함수를 window객체에 등록하여 전역으로 사용할 수 있도록 추가</span><br><span class="line">        window.urlChange = (url) =&gt; &#123;</span><br><span class="line">            this.urlChange(url);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    urlChange(url) &#123;</span><br><span class="line">        window.history.pushState(&quot;&quot;, &quot;&quot;, `#$&#123;url&#125;`);</span><br><span class="line">        this.renderPage(url);</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>각 페이지에서 라우팅이 필요할 경우, window.urlChange(…)로 사용가능하도록 함수를 셋팅시켜줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    renderPage(url) &#123;</span><br><span class="line">        this.view.innerHTML = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        const to =</span><br><span class="line">            this.route.filter((r) =&gt; this.matchUrl(r.url, url))[0] ||</span><br><span class="line">            this.route.filter((r) =&gt; r.url === &quot;/&quot;)[0];</span><br><span class="line">        try &#123;</span><br><span class="line">            to.page.render();</span><br><span class="line">            to.css</span><br><span class="line">                ? to.css.forEach((c) =&gt; require(`@/assets/css/$&#123;c&#125;.css`))</span><br><span class="line">                : null;</span><br><span class="line">            document.title = to.title;</span><br><span class="line">            document</span><br><span class="line">                .querySelector(`meta[name=&#x27;description&#x27;]`)</span><br><span class="line">                .setAttribute(&quot;content&quot;, to.description);</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            this.route.filter((r) =&gt; r.url === &quot;/&quot;)[0].page.render();</span><br><span class="line">            console.error(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    matchUrl(a, b) &#123;</span><br><span class="line">        const index = a.indexOf(&quot;:&quot;);</span><br><span class="line"></span><br><span class="line">        if (index &gt; -1) &#123;</span><br><span class="line">            return a.substring(0, index) === b.substring(0, index);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return a === b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>라우팅을 통해 새로운 페이지가 랜더링되는 부분입니다.<br>기존 view를 초기화시켜준 뒤, 등록된 route에 있는 페이지를 랜더링 시켜줍니다.<br>추가적으로 페이지가 랜더링될 때 css파일도 불러오도록 처리를 했으며, 각 메타정보도 바뀔 수 있도록 했습니다.<br>오류가 날 경우에는 메인으로 랜더링되도록 했습니다.</p><h2 id="🎊라우터-등록하기"><a href="#🎊라우터-등록하기" class="headerlink" title="🎊라우터 등록하기"></a>🎊라우터 등록하기</h2><p>위에서 만든 라우터를 등록시켜야 사용할 수 있습니다.<br><code>app.js</code>에 라우터를 등록시켜줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import Home from &#x27;./pages/Home.js&#x27;;</span><br><span class="line">import New from &#x27;./pages/New.js&#x27;;</span><br><span class="line">import About from &#x27;./pages/About.js&#x27;;</span><br><span class="line">import Router from &#x27;./router.js&#x27;;</span><br><span class="line"></span><br><span class="line">export default class App &#123;</span><br><span class="line">    constructor(&#123; $target &#125;) &#123;</span><br><span class="line">        this.$target = $target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        ...</span><br><span class="line">        const $main = document.createElement(&#x27;main&#x27;);</span><br><span class="line">        $main.setAttribute(&#x27;id&#x27;, &#x27;page_content&#x27;);</span><br><span class="line"></span><br><span class="line">        this.$target.appendChild($main);</span><br><span class="line"></span><br><span class="line">        const homePage = new Home(&#123; $target: $main &#125;);</span><br><span class="line">        const newPage = new New(&#123; $target: $main &#125;);</span><br><span class="line">        const aboutPage = new About(&#123; $target: $main &#125;);</span><br><span class="line">        new Router(&#123;</span><br><span class="line">            view: $main,</span><br><span class="line">            route: [</span><br><span class="line">                &#123;</span><br><span class="line">                    url: &#x27;/me/:id&#x27;,</span><br><span class="line">                    page: homePage,</span><br><span class="line">                    css: [&#x27;AboutMe&#x27;, &#x27;Header&#x27;],</span><br><span class="line">                    title: &#x27;나의 새싹 보기&#x27;,</span><br><span class="line">                    description: &#x27;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    url: &#x27;/&#x27;,</span><br><span class="line">                    page: newPage,</span><br><span class="line">                    css: [&#x27;New&#x27;, &#x27;Layer&#x27;],</span><br><span class="line">                    title: &#x27;About Me&#x27;,</span><br><span class="line">                    description: &#x27;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    url: &#x27;/about/:id&#x27;,</span><br><span class="line">                    page: aboutPage,</span><br><span class="line">                    css: [&#x27;About&#x27;, &#x27;Layer&#x27;],</span><br><span class="line">                    title: &#x27;나는 어떤 사람이야?&#x27;,</span><br><span class="line">                    description: &#x27;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>이와 같이 각 페이지에 대한 정보들을 등록시켜주면 됩니다.</p><h2 id="🕹라우터-사용하기"><a href="#🕹라우터-사용하기" class="headerlink" title="🕹라우터 사용하기"></a>🕹라우터 사용하기</h2><p>라우터 사용은 window객체에 등록시켜준 urlChange 함수를 활용합니다.<br><code>About.js</code>에서 ‘내 새싹 만들기’를 클릭해 메인화면으로 넘어오는 부분입니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">export default class About &#123;</span><br><span class="line">    constructor(&#123; $target &#125;) &#123;</span><br><span class="line">        this.$target = $target;</span><br><span class="line">        this.id = window.location.hash.split(&#x27;#/about/&#x27;)[1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        ...</span><br><span class="line">        const $goNew = document.createElement(&#x27;a&#x27;);</span><br><span class="line">        const $goNewImg = document.createElement(&#x27;img&#x27;);</span><br><span class="line">        $goNewImg.setAttribute(&#x27;src&#x27;, require(&#x27;@/assets/images/sprout.svg&#x27;));</span><br><span class="line">        $goNewImg.setAttribute(&#x27;alt&#x27;, &#x27;goNew&#x27;);</span><br><span class="line">        $goNew.setAttribute(&#x27;class&#x27;, &#x27;go-new&#x27;);</span><br><span class="line">        $goNew.textContent = &#x27;내 새싹 만들러가기&#x27;;</span><br><span class="line">        $goNew.appendChild($goNewImg);</span><br><span class="line">        $goNew.addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span><br><span class="line">            window.urlChange(&#x27;/&#x27;);</span><br><span class="line">        &#125;);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><a href="https://github.com/ParkBeomMin/AboutMe">AboutMe GitHub</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&#39;/assets/about-me/banner.png&#39;&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://aboutme2.web.app/&quot;&gt;About Me&lt;/a&gt;&lt;br&gt;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 </summary>
      
    
    
    
    <category term="web frontend" scheme="https://parkbeommin.github.io/categories/web-frontend/"/>
    
    
  </entry>
  
  <entry>
    <title>[Vanilla JS] About Me 프로젝트 - 페이지 구성하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-27-vanillajs-project_2/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-27-vanillajs-project_2/</id>
    <published>2023-06-26T15:16:00.000Z</published>
    <updated>2025-10-21T07:33:46.923Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>About Me<br>친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!</p></blockquote><p>지난 <a href="https://parkbeommin.github.io/web/frontend/vanillajs-project_1/">SPA 구조 만들기</a>에 이어서 프로젝트의 페이지 및 컴포넌트 구성에 대해 이야기해보겠습니다.</p><p>About Me 컨셉은 나의 새싹을 만들어 키우는 것입니다.<br>나의 새싹을 만들면, 색상 및 종류가 랜덤하게 정해지고 id가 부여됩니다.<br>id를 통해 링크가 생성되며 링크를 친구들에게 공유하여 나에 대한 생각을 받습니다.<br>친구들에게 입력받은 단어&#x2F;문장들이 비가 되어 나의 새싹을 키우게 됩니다.</p><h2 id="📃페이지-및-컴포넌트-구성"><a href="#📃페이지-및-컴포넌트-구성" class="headerlink" title="📃페이지 및 컴포넌트 구성"></a>📃페이지 및 컴포넌트 구성</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">├── components</span><br><span class="line">│   ├── Hader.js</span><br><span class="line">│   ├── AboutMe.js</span><br><span class="line">│   ├── MoneyLayer.js</span><br><span class="line">│   └── PasswordLayer.js</span><br><span class="line">├── pages</span><br><span class="line">│   ├── New.js</span><br><span class="line">│   ├── About.js</span><br><span class="line">│   └── Home.js</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="페이지"><a href="#페이지" class="headerlink" title="페이지"></a>페이지</h3><ul><li>생성 페이지(New.js): 새싹을 생성하는 페이지, 모든 사용자들이 입력했던 값들이 보여진다.</li><li>작성 페이지(About.js): 공유받은 링크로 들어와 친구에 대해 작성하는 페이지</li><li>메인 페이지(Home.js): 만든 새싹과 친구들에게 입력받은 단어&#x2F;문장들이 보여지는 페이지</li></ul><h3 id="컴포넌트"><a href="#컴포넌트" class="headerlink" title="컴포넌트"></a>컴포넌트</h3><ul><li>헤더 컴포넌트(Header.js): 공유, 기부 버튼이 있는 헤더</li><li>메인 컴포넌트(AboutMe.js): 새싹이 보여지고, 단어&#x2F;문장들이 비처럼 떨어지는 컴포넌트</li><li>기부 컴포넌트(MoneyLayer.js): 카카오 송금하기로 링크되는 레이어</li><li>비밀번호 컴포넌트(PasswordLayer.js): 비밀번호를 입력받는 레이어</li></ul><h2 id="🎊생성-페이지"><a href="#🎊생성-페이지" class="headerlink" title="🎊생성 페이지"></a>🎊생성 페이지</h2><p><code>pages/New.js</code> <code>components/AboutMe.js</code> <code>components/PasswordLayer.js</code></p><p>생성 페이지에서는 나의 새싹을 생성할 수 있는 버튼과 안내 문구가 필요합니다.<br>생성 버튼을 누르면 비밀번호를 입력할 수 있는 레이어가 노출됩니다.<br>그리고 뒷 배경으로 모든 사용자의 입력 값을 예시로 보여지도록 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">AboutMe</span> <span class="keyword">from</span> <span class="string">&quot;@/components/AboutMe&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PasswordLayer</span> <span class="keyword">from</span> <span class="string">&quot;../components/PasswordLayer.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">New</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> $div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        $div.<span class="title function_">setAttribute</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;new-container&quot;</span>);</span><br><span class="line">        <span class="keyword">const</span> $button = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">        $button.<span class="title function_">setAttribute</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;create-btn&quot;</span>);</span><br><span class="line">        $button.<span class="property">textContent</span> = <span class="string">&quot;나의 새싹 만들기&quot;</span>;</span><br><span class="line">        $button.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">PasswordLayer</span>(&#123;<span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span>&#125;).<span class="title function_">render</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> $info = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        $info.<span class="title function_">setAttribute</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;info&quot;</span>);</span><br><span class="line">        $info.<span class="property">innerHTML</span> =</span><br><span class="line">            <span class="string">&quot;친구들의 관심을 모아 새싹을 자라나게 해주세요!&lt;br&gt;새싹 -&gt; 중간 -&gt; 트리 형태로 자라납니다&lt;br&gt;나무의 형태, 색상은 모두 랜덤으로 생성됩니다.&quot;</span>;</span><br><span class="line">        $div.<span class="title function_">appendChild</span>($button);</span><br><span class="line">        $div.<span class="title function_">appendChild</span>($info);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($div);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">AboutMe</span>(&#123; <span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span>, <span class="attr">id</span>: <span class="string">&quot;new&quot;</span> &#125;).<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>위와 같이 new-container를 클래스 명으로 갖는 div 태그를 만들고 그 안에 버튼과 문구를 만들어 넣어줍니다.<br>button에는 click이벤트를 넣어주고 클릭 시 PasswordLayer가 랜딩될 수 있도록 구현합니다.<br>그리고 AboutMe 컴포넌트도 new라는 id를 넘겨주고 랜더링 시켜줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">PasswordLayer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target, callback &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">callback</span> = callback;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 다시 랜딩을 시도하는 경우에는 이미 켜진 레이어가 꺼지도록 설정</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.layer-container&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.layer-container&#x27;</span>).<span class="property">outerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> $div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $div.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;layer-container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $closeBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $closeBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;close-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $closeImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $closeImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;@/assets/images/close.svg&#x27;</span>));</span><br><span class="line">        $closeImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;close&#x27;</span>);</span><br><span class="line">        $closeBtn.<span class="title function_">appendChild</span>($closeImg);</span><br><span class="line">        $closeBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            $div.<span class="property">outerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $h3 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h3&#x27;</span>);</span><br><span class="line">        $h3.<span class="property">textContent</span> = <span class="string">&#x27;비밀번호&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $form = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line">        $form.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;pw-box&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $input = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        $input.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;pw-input&#x27;</span>);</span><br><span class="line">        $input.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">        $input.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            $input.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $button = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $button.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;pw-btn&#x27;</span>);</span><br><span class="line">        $button.<span class="property">textContent</span> = <span class="string">&#x27;완료&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        $form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            e.<span class="title function_">preventDefault</span>();</span><br><span class="line">            <span class="keyword">if</span> ($input.<span class="property">value</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">callback</span>(&#123; <span class="attr">password</span>: $input.<span class="property">value</span> &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $input.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $form.<span class="title function_">appendChild</span>($input);</span><br><span class="line">        $form.<span class="title function_">appendChild</span>($button);</span><br><span class="line"></span><br><span class="line">        $div.<span class="title function_">append</span>($closeBtn, $h3, $form);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($div);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PasswordLayer는 닫기 버튼과 타이틀, 비밀번호 입력창, 완료 버튼으로 구성됩니다.<br>레이어의 중복 노출 방지를 위해 .layer-container 클래스를 갖는 요소를 찾아 랜딩되기 전 이미 랜딩되어있다면 닫히도록 처리했습니다.<br>input과 button은 form 태그로 감싸서 submit 이벤트로 합쳐지게 처리했으며, e.preventDefault()를 통해 submit시 새로고침되는 것을 방지하였습니다.<br>callback 함수를 인자로 받아서 레이어가 생성되도록 해서 레이어 이후 콜백함수를 처리할 수 있도록 구현하였습니다.</p><h2 id="💻작성-페이지"><a href="#💻작성-페이지" class="headerlink" title="💻작성 페이지"></a>💻작성 페이지</h2><p><code>pages/About.js</code>, <code>components/PasswordLayer.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">PasswordLayer</span> <span class="keyword">from</span> <span class="string">&#x27;../components/PasswordLayer.js&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">About</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">split</span>(<span class="string">&#x27;#/about/&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> $div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $div.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;wrap&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $title = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">        $title.<span class="property">textContent</span> = <span class="string">&#x27;나는 어떤 사람이야?&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $inputBox = <span class="variable language_">this</span>.<span class="title function_">createInputBox</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $info = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        $info.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;info&#x27;</span>);</span><br><span class="line">        $info.<span class="property">innerHTML</span> = <span class="string">&#x27;ex) 마음이 따듯해. 예뻐. 냉정해. 극I...&lt;br&gt;친구를 떠올렸을 때 생각나는 말을 적어주세요.&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $goNew = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $goNewImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $goNewImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;@/assets/images/sprout.svg&#x27;</span>));</span><br><span class="line">        $goNewImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;goNew&#x27;</span>);</span><br><span class="line">        $goNew.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;go-new&#x27;</span>);</span><br><span class="line">        $goNew.<span class="property">textContent</span> = <span class="string">&#x27;내 새싹 만들러가기&#x27;</span>;</span><br><span class="line">        $goNew.<span class="title function_">appendChild</span>($goNewImg);</span><br><span class="line">        $goNew.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">urlChange</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $goMy = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        $goMy.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;go-my&#x27;</span>);</span><br><span class="line">        $goMy.<span class="property">textContent</span> = <span class="string">&#x27;내 새싹 보러가기💚&#x27;</span>;</span><br><span class="line">        $goMy.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">PasswordLayer</span>(&#123;</span><br><span class="line">                <span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span>,</span><br><span class="line">                <span class="attr">callback</span>: <span class="title function_">async</span> (&#123; password &#125;) =&gt; &#123;</span><br><span class="line">                    ...</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;).<span class="title function_">render</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $div.<span class="title function_">append</span>($title, $inputBox, $info, $goNew, $goMy);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($div);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createInputBox</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> id = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">split</span>(<span class="string">&#x27;#/about/&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $inputBox = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line">        $inputBox.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;input-box&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $input = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        $input.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $sendBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $sendBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;about-send-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $sendBtnImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $sendBtnImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;@/assets/images/send.svg&#x27;</span>));</span><br><span class="line">        $sendBtnImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;send&#x27;</span>);</span><br><span class="line">        $sendBtn.<span class="title function_">appendChild</span>($sendBtnImg);</span><br><span class="line">        $inputBox.<span class="title function_">appendChild</span>($input);</span><br><span class="line">        $inputBox.<span class="title function_">appendChild</span>($sendBtn);</span><br><span class="line">        $inputBox.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            e.<span class="title function_">preventDefault</span>();</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> $inputBox;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>작성 페이지는 타이틀과 사용자에게 입력받는 인풋창, 그리고 새싹 만들러 가기, 내 새싹 보러 가기 링크로 구성되어 있습니다.<br>내 새싹 보러 가기를 클릭하면 비밀번호 레이어가 노출되고, 비밀번호를 입력하면 만들었던 새싹 페이지로 랜딩되어야 합니다.</p><h2 id="🖼메인-페이지"><a href="#🖼메인-페이지" class="headerlink" title="🖼메인 페이지"></a>🖼메인 페이지</h2><p><code>pages/Home.js</code> <code>components/AboutMe.js</code> <code>components/Header.js</code> <code>components/MoneyLayer.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Home.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AboutMe</span> <span class="keyword">from</span> <span class="string">&quot;../components/AboutMe.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&quot;@/components/Header&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">Home</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> id = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">split</span>(<span class="string">&quot;#/me/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Header</span>(&#123; <span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span> &#125;).<span class="title function_">render</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">AboutMe</span>(&#123; <span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span>, id &#125;).<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>메인 페이지는 Header.js와 AboutMe.js 컴포넌트로 구성됩니다.<br>Header.js에는 기부하기와 공유하기 기능이 있고, AboutMe.js에는 사용자의 새싹과 입력받은 문자들을 노출해주는 기능이 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AboutMe.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">AboutMe</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target, id &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> num = <span class="number">1</span></span><br><span class="line">        <span class="keyword">const</span> treeFilter = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">const</span> groundColor = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">const</span> aboutList = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> type = <span class="string">&#x27;sprout&#x27;</span>;</span><br><span class="line">        <span class="keyword">let</span> size = <span class="string">&#x27;50px&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (aboutList.<span class="property">length</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            type = <span class="string">`<span class="subst">$&#123;num&#125;</span>/growing`</span>;</span><br><span class="line">            size = <span class="string">&#x27;100px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (aboutList.<span class="property">length</span> &gt; <span class="number">50</span>) &#123;</span><br><span class="line">            type = <span class="string">`<span class="subst">$&#123;num&#125;</span>/tree`</span>;</span><br><span class="line">            size = <span class="string">&#x27;200px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $div.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;wrap&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $ground = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $ground.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;ground&#x27;</span>);</span><br><span class="line">        $ground.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">`<span class="subst">$&#123;groundColor&#125;</span>`</span>;</span><br><span class="line">        $ground.<span class="property">style</span>.<span class="property">borderColor</span> = <span class="string">`<span class="subst">$&#123;groundColor&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">const</span> $sky = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $sky.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;sky&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $aboutMe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $aboutMe.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;about-me&#x27;</span>);</span><br><span class="line">        $aboutMe.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">`../assets/images/<span class="subst">$&#123;type&#125;</span>.svg`</span>);</span><br><span class="line">        $aboutMe.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;aboutMe&#x27;</span>);</span><br><span class="line">        $aboutMe.<span class="property">style</span>.<span class="property">width</span> = size;</span><br><span class="line">        $aboutMe.<span class="property">style</span>.<span class="property">height</span> = size;</span><br><span class="line">        $aboutMe.<span class="property">style</span>.<span class="property">filter</span> = treeFilter;</span><br><span class="line">        $div.<span class="title function_">append</span>($sky, $aboutMe, $ground);</span><br><span class="line">        <span class="keyword">const</span> $textContainer = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $textContainer.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;text-container&#x27;</span>);</span><br><span class="line">        aboutList.<span class="title function_">forEach</span>(<span class="function">(<span class="params">al</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $text = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">            $text.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;falling-text&#x27;</span>);</span><br><span class="line">            $text.<span class="property">style</span>.<span class="property">animationDuration</span> = <span class="string">`<span class="subst">$&#123;<span class="built_in">Math</span>.random() * <span class="number">10</span> + <span class="number">4</span>&#125;</span>s`</span>;</span><br><span class="line">            $text.<span class="property">style</span>.<span class="property">left</span> = <span class="string">`<span class="subst">$&#123;<span class="built_in">Math</span>.random() * <span class="number">100</span>&#125;</span>%`</span>;</span><br><span class="line">            $text.<span class="property">style</span>.<span class="property">color</span> = al.<span class="property">color</span>;</span><br><span class="line">            $text.<span class="property">textContent</span> = al.<span class="property">content</span>;</span><br><span class="line">            $textContainer.<span class="title function_">appendChild</span>($text);</span><br><span class="line">        &#125;);</span><br><span class="line">        $div.<span class="title function_">appendChild</span>($textContainer);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($div);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>num에 따라 트리의 종류가 결정되고, treeFilter와 groundColor로 새싹과 땅의 색을 지정해줍니다. 이 값들은 생성이 될 때 랜덤하게 생성되도록 설정된 값입니다. 아직은 덤프데이터로 놔두겠습니다.<br>aboutList는 친구들에게 입력받은 나에 대한 문장&#x2F;문구들이 담긴 배열입니다. {color, content} 형태의 객체로 담기게 되며 color도 생성될 때 랜덤하게 생성이 됩니다.<br>미리 저장해둔 경로에 맞게 새싹 이미지를 불러오도록 하고 사이즈와 필터도 지정해줍니다. svg파일을 img태그로 지정해놓았기때문에 색상 변동을 filter로 컨트롤합니다.<br>aboutList의 결과값들도 만들어줍니다. 하늘에서 비처럼 떨어지는 애니메이션효과를 css로 주고, 각 요소마다 속도 차이를 주기 위해 랜덤하게 생성될 수 있도록 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Header.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MoneyLayer</span> <span class="keyword">from</span> <span class="string">&#x27;./MoneyLayer&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">Header</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> $header = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;header&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $shareBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $shareBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;share-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $shareImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $shareImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;../assets/images/share.svg&#x27;</span>);</span><br><span class="line">        $shareImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;share&#x27;</span>);</span><br><span class="line">        $shareBtn.<span class="title function_">appendChild</span>($shareImg);</span><br><span class="line">        $shareBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $moneyBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $moneyBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;money-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $moneyImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $moneyImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;../assets/images/money.svg&#x27;</span>);</span><br><span class="line">        $moneyImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;money&#x27;</span>);</span><br><span class="line">        $moneyBtn.<span class="title function_">appendChild</span>($moneyImg);</span><br><span class="line">        $moneyBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">MoneyLayer</span>(&#123; <span class="attr">$target</span>: <span class="variable language_">this</span>.<span class="property">$target</span> &#125;).<span class="title function_">render</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $header.<span class="title function_">appendChild</span>($shareBtn);</span><br><span class="line">        $header.<span class="title function_">appendChild</span>($moneyBtn);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($header);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Header에는 버튼을 2개 만들고, 각 이미지를 지정해줍니다.<br>share버튼의 클릭 이벤트를 만들어주고 추후에 링크가 복사될 수 있도록 구현할 예정입니다.<br>money버튼은 기부를 할 수 있는 레이어를 띄우는 역할로 클릭 이벤트로 MoneyLayer가 노출될 수 있도록 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MoneyLayer.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">MoneyLayer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.layer-container&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.layer-container&#x27;</span>).<span class="property">outerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> $div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $div.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;layer-container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $h3 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h3&#x27;</span>);</span><br><span class="line">        $h3.<span class="property">textContent</span> = <span class="string">&#x27;개발자 밥 사주기🍚&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $closeBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $closeBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;close-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> $closeImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        $closeImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;../assets/images/close.svg&#x27;</span>);</span><br><span class="line">        $closeImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;alt&#x27;</span>, <span class="string">&#x27;close&#x27;</span>);</span><br><span class="line">        $closeBtn.<span class="title function_">appendChild</span>($closeImg);</span><br><span class="line">        $closeBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            $div.<span class="property">outerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $moneyBox = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        $moneyBox.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;money-box&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> $sojuBtn = <span class="variable language_">this</span>.<span class="title function_">createMoneyBtn</span>(&#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;🍺&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> $coffeeBtn = <span class="variable language_">this</span>.<span class="title function_">createMoneyBtn</span>(&#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;☕️&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> $chocolateBtn = <span class="variable language_">this</span>.<span class="title function_">createMoneyBtn</span>(&#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;🍫&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $div.<span class="title function_">appendChild</span>($closeBtn);</span><br><span class="line">        $div.<span class="title function_">appendChild</span>($h3);</span><br><span class="line">        $moneyBox.<span class="title function_">append</span>($sojuBtn, $coffeeBtn, $chocolateBtn);</span><br><span class="line">        $div.<span class="title function_">appendChild</span>($moneyBox);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($div);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createMoneyBtn</span>(<span class="params">&#123; text, url &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> $button = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        $button.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;dev-money-btn&#x27;</span>);</span><br><span class="line">        $button.<span class="property">textContent</span> = text;</span><br><span class="line">        $button.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = url;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> $button;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PasswordLayer와 비슷한 형태로 구성되며 각 기부용 버튼을 만들어줍니다.<br>url로는 기부할 수 있는 링크를 생성해서 넣어주면 됩니다. 저는 카카오 송금하기 링크를 활용했습니다.</p><hr><p>여기까지 각 페이지와 컴포넌트를 만들어보았고, 다음에는 라우터 설정을 통해 페이지 간 이동을 구현해보도록 하겠습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;About Me&lt;br&gt;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;지난 &lt;a href=&quot;https://parkbeommin.github.io/w</summary>
      
    
    
    
    <category term="web frontend" scheme="https://parkbeommin.github.io/categories/web-frontend/"/>
    
    
  </entry>
  
  <entry>
    <title>[Vanilla JS] About Me 프로젝트 - SPA 구조 만들기</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-23-vanillajs-project_1/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-23-vanillajs-project_1/</id>
    <published>2023-06-22T16:04:00.000Z</published>
    <updated>2025-10-21T07:33:46.913Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>About Me<br>친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!</p></blockquote><p>Vue로 웹개발을 시작하여 Vanilla JS에 대해 관심이 없다가 프로그래머스의 dev-matching 과제를 통해 처음으로 접하게 되었고 웹 프로그래밍의 기본이라는 생각이 들었습니다.<br>Vanilla JS에 익숙해지기 위해 프로젝트를 시작했습니다.</p><h2 id="💾파일-구조"><a href="#💾파일-구조" class="headerlink" title="💾파일 구조"></a>💾파일 구조</h2><p>기본적인 파일 구조는 아래와 같이 잡았습니다. 프레임워크를 쓰는 것이 아니기에 별다른 명령어 없이 직접 파일과 폴더를 생성해주면 됩니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">├── src</span><br><span class="line">│   ├── assets</span><br><span class="line">│   │    ├── css</span><br><span class="line">│   │    ├── images</span><br><span class="line">│   ├── components</span><br><span class="line">│   ├── pages</span><br><span class="line">│   ├── lib</span><br><span class="line">│   ├── router.js</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   └── app.js</span><br><span class="line">└── index.html</span><br></pre></td></tr></table></figure><ul><li>assets : css와 image 파일 등의 프로젝트 자산들을 담는 폴더</li><li>components : 컴포넌트 폴더</li><li>pages : 각 url에 해당되는 페이지 폴더</li><li>lib : db통신 등 비즈니스 로직이 필요한 파일들을 담는 폴더</li><li>router.js : 라우팅 설정 파일</li><li>index.js : html에 app.js를 등록해주고 기본적인 설정을 위한 파일</li><li>app.js : SPA로 동작하기 위한 로직 파일</li><li>index.html : 단일 페이지를 보여주는 html 파일</li></ul><h2 id="📃SPA-페이지-만들기"><a href="#📃SPA-페이지-만들기" class="headerlink" title="📃SPA 페이지 만들기"></a>📃SPA 페이지 만들기</h2><p>먼저 index.html 파일에 SPA로 동작하기 위한 js파일을 삽입해줍니다.<br>그리고 동작을 컨트롤할 수 있도록 div 태그에 app이라는 id를 지정해줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;ko&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>About Me<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./src/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이제 app.js에 SPA가 되도록 코드를 작성해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; $target &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span> = $target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> $main = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line">        $main.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;page_content&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$target</span>.<span class="title function_">appendChild</span>($main);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.js에서 app.jss가 html에 붙을 수 있도록 해줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.js&quot;</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">App</span>(&#123; <span class="attr">$target</span>: <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#app&quot;</span>) &#125;).<span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><p>이제 SPA를 위한 기본적인 틀이 생성이 되었습니다.</p><h2 id="🖥실행하기"><a href="#🖥실행하기" class="headerlink" title="🖥실행하기"></a>🖥실행하기</h2><p>SPA로만 프로젝트를 진행하여 따로 서버용 파일을 만들지 않았습니다.<br>serve를 install 받아서 실행시키도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install serve</span><br></pre></td></tr></table></figure><p>serve 패키지가 install되고나면 package.json에 명령어 스크립트를 추가해줍니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aboutme&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src/index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;serve&quot;</span><span class="punctuation">,</span> <span class="comment">// 이 부분 추가</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>이제 터미널창에서 <code>npm run start</code>로 프로젝트를 실행시켜 main 태그가 잘 붙었는지 확인하시면 됩니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;About Me&lt;br&gt;친구들이 생각하는 나는 어떤 사람일까? 친구들의 마음이 모여 나의 새싹을 키워보세요!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vue로 웹개발을 시작하여 Vanilla JS에 대해 관심이 없다가 프로그래머</summary>
      
    
    
    
    <category term="web frontend" scheme="https://parkbeommin.github.io/categories/web-frontend/"/>
    
    
  </entry>
  
  <entry>
    <title>[GIT] Push 정책 설정하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-15-git-pre-push/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-15-git-pre-push/</id>
    <published>2023-06-14T21:04:00.000Z</published>
    <updated>2025-10-21T07:33:46.900Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>팀원: 이번 프로젝트에 Jenkins를 도입해서 자동 빌드 및 배포를 적용했어요. 다만 같은 version으로 push를 하면 오류가 나니 version 변경에 신경써서 push해주세요!</p></blockquote><p>최근 팀원분이 배포 환경을 크게 개선해줘서 push만 해도 빌드 &amp; 배포가 이뤄지도록 해주셨습니다.<br>하지만 같은 package 버전으로 push가 되면 빌드 오류가 나게 되어 있어서 push할 때 주의해달라는 요청도 함께 주셨습니다.<br>version을 올리지 않고 push를 하는 실수가 잦아서 version을 변경하지 않으면 push를 막을 순 없을까해서 찾아보다가 git push 정책을 설정할 수 있다는 것을 알았습니다.</p><p>pre-push라는 파일을 .git&#x2F;hooks 경로에 생성하여 스크립트를 작성하면 됩니다.</p><h3 id="pre-push-파일-생성"><a href="#pre-push-파일-생성" class="headerlink" title="pre-push 파일 생성"></a>pre-push 파일 생성</h3><p>아래와 같이 pre-push 파일을 생성해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd .git/hooks</span><br><span class="line">echo &gt; pre-push // touch pre-push</span><br></pre></td></tr></table></figure><p>pre-push 파일을 열어서 아래와 같은 스크립트를 작성해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># package.json 파일의 version 필드를 가져옵니다.</span><br><span class="line">current_version=$(node -pe &quot;require(&#x27;./package.json&#x27;).version&quot;)</span><br><span class="line"></span><br><span class="line"># 현재 작업 중인 브랜치를 가져옵니다.</span><br><span class="line">current_branch=$(git rev-parse --abbrev-ref HEAD)</span><br><span class="line"></span><br><span class="line"># 원격 저장소의 package.json 파일의 버전을 가져옵니다.</span><br><span class="line">remote_version=$(git show origin/$&#123;current_branch&#125;:package.json | awk -F&#x27;&quot;&#x27; &#x27;/&quot;version&quot;/&#123;print $4&#125;&#x27;)</span><br><span class="line"></span><br><span class="line"># 버전이 변경되지 않았다면 push를 막습니다.</span><br><span class="line">if [ &quot;$current_version&quot; == &quot;$remote_version&quot; ]; then</span><br><span class="line">  echo &quot;Error: package.json version has not been updated.&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="git-push-해보기"><a href="#git-push-해보기" class="headerlink" title="git push 해보기"></a>git push 해보기</h3><p>version을 변경하지 않고 push를 시도한다면 아래와 같은 에러메세지가 출력되는 것을 볼 수 있습니다.</p><img src="/assets/git/pre-push.png">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;팀원: 이번 프로젝트에 Jenkins를 도입해서 자동 빌드 및 배포를 적용했어요. 다만 같은 version으로 push를 하면 오류가 나니 version 변경에 신경써서 push해주세요!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;</summary>
      
    
    
    
    <category term="git" scheme="https://parkbeommin.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>a태그의 target 속성을 전부 변경하기</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-15-nuxt-link-change/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-15-nuxt-link-change/</id>
    <published>2023-06-14T21:04:00.000Z</published>
    <updated>2025-10-21T07:33:46.908Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A -&gt; B로 이동하는 부분이 전부 새창으로 뜨도록 되어있는데 모든 부분을 페이지 전환으로 변경해주세요!</p></blockquote><p>위와 같은 업무 요청이 들어온 경우 어떻게 대응하실건가요?</p><ol><li>모든 코드를 찾아서 target&#x3D;”_blank”를 지운다.</li><li>DOM이 만들어질 때, B로 이동하는 경로로 되어있는 a태그를 찾아 target&#x3D;”_self”로 바뀌게 한다.</li></ol><p>코드 10줄로 NN개의 파일을 드나들며 코드를 하나하나 수정하지 않도록 하는 방법인 2번에 대해 이야기해보려합니다.</p><h3 id="plugin-파일-생성"><a href="#plugin-파일-생성" class="headerlink" title="plugin 파일 생성"></a>plugin 파일 생성</h3><p>nuxt plugin으로 등록하여 mixin을 적용시키는 방법입니다.<br>link.js 라는 plugin 파일을 생성합니다.<br>아래 코드를 작성해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;;</span><br><span class="line"></span><br><span class="line">Vue.mixin(&#123;</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        const links = Array.from(document.querySelectorAll(&#x27;a&#x27;)).filter((l) =&gt; l.getAttribute(&#x27;href&#x27;)?.startsWith(&#x27;/B&#x27;) &amp;&amp; l.target == &#x27;_blank&#x27;);</span><br><span class="line">        links.forEach((link) =&gt; &#123;</span><br><span class="line">            link.target = &#x27;_self&#x27;;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Vue Mixin을 전역으로 적용시켜서 뷰 컴포넌트가 mounted될 때 B경로로 새창으로 여는 a태그를 찾아서 해당 태그의 target속성을 변경시켜줍니다.<br>DOM이 그려진 이후에 속성을 바꿔주도록 되어야 잘 반영이 되어서 mounted 훅에서 해당 작업이 수행되도록 했습니다.</p><h3 id="nuxt-config-js에서-plugin-등록"><a href="#nuxt-config-js에서-plugin-등록" class="headerlink" title="nuxt.config.js에서 plugin 등록"></a>nuxt.config.js에서 plugin 등록</h3><p>이제 nuxt.config.js로 이동해서, plugin을 등록해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">...</span><br><span class="line">    plugins: [</span><br><span class="line">        &#123; src: &#x27;~/plugins/link.js&#x27; &#125;</span><br><span class="line">]</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>페이지를 실행시켜보시면 잘 적용된 것을 확인하실 수 있습니다.</p><h3 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h3><p>결론적으로 위와 같은 코드를 적용하지는 못했고, 모든 코드를 찾아 수정했습니다.<br><b>모든 태그를 일괄로 바꾸는 것에 대한 위험성</b>과 <b>추후 예외로 다시 새창으로 띄워야하는 요청이 왔을 때의 충돌상황</b>이 있을 수 있기에 이번에는 적용하지 않도록 했습니다.<br>실제 프로젝트에 적용하실 때 참고하시길 바랍니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;A -&amp;gt; B로 이동하는 부분이 전부 새창으로 뜨도록 되어있는데 모든 부분을 페이지 전환으로 변경해주세요!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;위와 같은 업무 요청이 들어온 경우 어떻게 대응하실건가요?&lt;/p&gt;
&lt;ol&gt;</summary>
      
    
    
    
    <category term="nuxt" scheme="https://parkbeommin.github.io/categories/nuxt/"/>
    
    
  </entry>
  
  <entry>
    <title>웹워커와 서비스워커</title>
    <link href="https://parkbeommin.github.io/posts/2023-06-08-web-worker/"/>
    <id>https://parkbeommin.github.io/posts/2023-06-08-web-worker/</id>
    <published>2023-06-07T15:23:00.000Z</published>
    <updated>2025-10-21T07:33:46.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Web Worker와 Service Worker는 Web API 중 하나이다.<br>Web Worker와 Service Worker는 웹 애플리케이션에서 백그라운드 작업을 수행하기 위한 기술이다.</p></blockquote><img src="/assets/web/web-worker-and-service-worker.avif"><p>출처: <a href="https://web.dev/workers-overview/">web.dev</a></p><h2 id="Web-Worker-API"><a href="#Web-Worker-API" class="headerlink" title="Web Worker API"></a>Web Worker API</h2><blockquote><p>웹 워커(Web worker)는 스크립트 연산을 웹 어플리케이션의 주 실행 스레드와 분리된 별도의 백그라운드 스레드에서 실행할 수 있는 기술입니다. 웹 워커를 통해 무거운 작업을 분리된 스레드에서 처리하면 주 스레드(보통 UI 스레드)가 멈추거나 느려지지 않고 동작할 수 있습니다.<br>- MDN web docs -</p></blockquote><h3 id="웹-애플리케이션의-반응성-향상에-도움을-주는-Web-Worker"><a href="#웹-애플리케이션의-반응성-향상에-도움을-주는-Web-Worker" class="headerlink" title="웹 애플리케이션의 반응성 향상에 도움을 주는 Web Worker"></a>웹 애플리케이션의 반응성 향상에 도움을 주는 Web Worker</h3><p>자바스크립트는 싱글 스레드이며 call stack에 task를 담아 one by one으로 처리하기 때문에 부하가 많은 작업에 취약합니다.</p><p>브라우저 런타임 시 이러한 취약점을 보완하기 위해 Web Worker API가 등장하게 되었습니다. Web Worker는 주 스레드와 별도의 백그라운드 스레드에서 실행되어, 주 스레드가 차단되지 않고 다른 작업을 수행할 수 있어 웹 애플리케이션의 반응성 향상에 도움을 줍니다.</p><p>그리고 Web Worker는 메시지 전달을 통해 주 스레드와 통신하고 작업 결과를 반환할 수 있어서 웹 애플리케이션의 다른 부분과 상호작용할 수 있습니다.</p><p>Web Worker도 자바스크립트 실행환경을 제공하는 런타임 스레드이기에 어떠한 작업이든 수행할 수 있습니다. 다만 DOM을 직접 조작을 하거나 window객체의 일부 메서드와 속성은 사용이 불가합니다.</p><h2 id="Service-Worker-API"><a href="#Service-Worker-API" class="headerlink" title="Service Worker API"></a>Service Worker API</h2><blockquote><p>서비스 워커는 웹 응용 프로그램, 브라우저, 그리고 (사용 가능한 경우) 네트워크 사이의 프록시 서버 역할을 합니다. 서비스 워커의 개발 의도는 여러가지가 있지만, 그 중에서도 효과적인 오프라인 경험을 생성하고, 네트워크 요청을 가로채서 네트워크 사용 가능 여부에 따라 적절한 행동을 취하고, 서버의 자산을 업데이트할 수 있습니다. 또한 푸시 알림과 백그라운드 동기화 API로의 접근도 제공합니다.<br>- MDN web docs -</p></blockquote><h3 id="캐싱을-통한-효과적인-오프라인-경험을-주는-Service-Worker"><a href="#캐싱을-통한-효과적인-오프라인-경험을-주는-Service-Worker" class="headerlink" title="캐싱을 통한 효과적인 오프라인 경험을 주는 Service Worker"></a>캐싱을 통한 효과적인 오프라인 경험을 주는 Service Worker</h3><p>Service Worker는 이벤트 기반 워커로서 Javscript 파일의 형태로 존재합니다.</p><p>네트워크 요청을 가로채서 수정하고 컨트롤할 수 있으며, 캐싱을 통해 오프라인 환경에서도 앱이 동작할 수 있도록 컨트롤할 수 있습니다.</p><p>Service Worker는 DOM에 접근할 수 없으며, 자바스크립트의 메인 스레드와 다른 스레드에서 동작하기 때문에 블락되지 않습니다.(no-blocking)</p><p>비동기적으로 동작하도록 설계되었으며, 동기처리API와 같은 XHR, Web Storage등은 Service Worker에서 사용할 수 없습니다.</p><p>자바스크립트 모듈을 동적으로 import할 수 없기때문에 global scope로 선언하여 사용해야합니다.</p><p>Service Worker는 네트워크 요청을 가로채 처리할 수 있기때문에 중간자 공격등에 취약할 수 있어서 보안상의 이유로 HTTPS에서만 동작합니다. 일부 브라우저에서는 private mode에서도 동작하지 않을 수 있습니다.</p><h2 id="Web-Worker-vs-Service-Worker"><a href="#Web-Worker-vs-Service-Worker" class="headerlink" title="Web Worker vs Service Worker"></a>Web Worker vs Service Worker</h2><p>Web Worker와 Service Worker는 둘 다 웹앱의 사용성을 증가시키기 위한 API입니다.<br>메인 스레드를 블록하지 않고 추가 스레드에서 실행되는 공통점을 갖고 있습니다.</p><p>Web Worker는 한 페이지 내에서 여러개를 생성하여 활용할 수 있지만, Service Worker는 하나의 도메인에 등록된 scope내에서 활용가능합니다.<br>Web Worker의 수명은 웹페이지가 닫히면 끝나지만, Service Worker는 웹페이지가 닫혀도 백그라운드에서 유지됩니다.</p><h2 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h2><ul><li><a href="https://velog.io/@oneook/Web-Worker%EC%99%80-Service-Worker%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0">블로그</a></li><li><a href="https://velog.io/@yrnana/Web-Worker%EC%99%80-Service-Worker">블로그</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API">MDN Web Worker API</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">MDN Service Worker API</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Web Worker와 Service Worker는 Web API 중 하나이다.&lt;br&gt;Web Worker와 Service Worker는 웹 애플리케이션에서 백그라운드 작업을 수행하기 위한 기술이다.&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="web frontend" scheme="https://parkbeommin.github.io/categories/web-frontend/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2206[백준 2206]</title>
    <link href="https://parkbeommin.github.io/posts/2019-11-07-baekjoon-algorithm-2206/"/>
    <id>https://parkbeommin.github.io/posts/2019-11-07-baekjoon-algorithm-2206/</id>
    <published>2019-11-07T00:58:00.000Z</published>
    <updated>2025-10-21T07:33:46.888Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2206">벽 부수고 이동하기</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>n*m으로 이루어진 맵에서 (0, 0) 지점에서 (n-1, m-1)까지 가는 <strong>최단 거리</strong>를 구하는 문제입니다.<br>따라서 <strong>bfs 알고리즘</strong>을 활용하면 되겠죠?!<br><strong>하지만! 여기서 주의할 점은.. 벽을 한 번 부수고 이동할 수 있다는 것입니다.</strong><br>이 점을 유의해서 문제를 해결해야 합니다.</p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>일반적인 bfs문제 해결과 같이 큐를 활용하고, 방문한 지점을 큐에 넣고 상하좌우로 이동하면서 판단합니다.<br>이 문제에서 핵심은 벽을 한 번 부수고 이동할 수 있다는 것인데, 그로 인해 최단 거리를 두 가지 경우로 나누어보아야합니다.  </p><ol><li>벽을 한 번 부수고 이동한 것</li><li>벽을 부수지 않고 이동한 것</li></ol><p>벽을 부수고 이동한 경로인지 부수지 않고 이동한 경로인지 알기 위해서 visited 배열을 3중배열로 선언해줍니다.<br>그래야 위와 같은 두 가지 경우를 다 고려해볼 수 있습니다.  </p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">static void bfs(int[][] maze, int n, int m) &#123;</span><br><span class="line">int[] dx = &#123; -1, 1, 0, 0 &#125;;</span><br><span class="line">int[] dy = &#123; 0, 0, -1, 1 &#125;;</span><br><span class="line">int answer = -1;</span><br><span class="line">int distance = 0;</span><br><span class="line">boolean[][][] visited = new boolean[n][m][2]; // 맨 마지막 0이면, 벽 안뚫고 간거!</span><br><span class="line">Queue&lt;Point&gt; queue = new LinkedList&lt;&gt;();</span><br><span class="line">queue.offer(new Point(0, 0, 1, false));</span><br><span class="line">visited[0][0][0] = true;</span><br><span class="line">while (!queue.isEmpty()) &#123;</span><br><span class="line">Point tmp = queue.poll();</span><br><span class="line">int x = tmp.x;</span><br><span class="line">int y = tmp.y;</span><br><span class="line">boolean b = tmp.isCracked;</span><br><span class="line">distance = tmp.distance;</span><br><span class="line">if (x == n - 1 &amp;&amp; y == m - 1) &#123;</span><br><span class="line">answer = distance;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">int nx = x + dx[i];</span><br><span class="line">int ny = y + dy[i];</span><br><span class="line">if (nx &lt; 0 || nx &gt;= n || ny &lt; 0 || ny &gt;= m) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">if (maze[nx][ny] == 1) &#123;</span><br><span class="line">if (!b &amp;&amp; !visited[nx][ny][1]) &#123; // 벽을 부숨</span><br><span class="line">queue.offer(new Point(nx, ny, distance + 1, true));</span><br><span class="line">visited[nx][ny][1] = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (!b &amp;&amp; !visited[nx][ny][0]) &#123; // 벽을 안부수고 가는 경우</span><br><span class="line">queue.offer(new Point(nx, ny, distance + 1, b));</span><br><span class="line">visited[nx][ny][0] = true;</span><br><span class="line">&#125;</span><br><span class="line">if (b &amp;&amp; !visited[nx][ny][1]) &#123; // 벽을 부수고 가는 경우</span><br><span class="line">queue.offer(new Point(nx, ny, distance + 1, b));</span><br><span class="line">visited[nx][ny][1] = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(answer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/2206/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2206&quot;&gt;벽 부수고 이동하기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;</summary>
      
    
    
    
    <category term="algorithm baekjoon bfs" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-bfs/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1966[백준 1966]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-11-baekjoon-algorithm-1966/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-11-baekjoon-algorithm-1966/</id>
    <published>2019-10-11T04:01:00.000Z</published>
    <updated>2025-10-21T07:33:46.878Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1966">프린터 큐</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>일단 저는 <a href="https://qlyh8.tistory.com/153">여기</a>를 참고했습니다..<br>어떻게든 큐를 활용해서 이것 저것해보려고 시도를 해봤는데.. 잘 안되더라구요.. 흑..<br>아직 많이 부족하네요..<br>이 문제는 큐에서 가장 앞에 있는 문서의 우선 순위 값을 가져와서 다른 문서들과 값을 비교해보면서 뒤로 보낼지, 출력을 할 지를 정하면서 m번째 문서가 언제 출력이 되는지 구하면 되는 문제입니다.  </p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>가장 처음에 위치한 문서의 우선 순위값과 다른 문서들과 비교를 하고, 추가&#x2F;삭제를 해야하기 때문에 링크드리스트를 활용합니다.<br>값을 비교하면서, 첫번째에 위치한 값이 우선순위가 가장 높다면, 삭제 시키고 요소들이 한칸씩 앞으로 밀리기 때문에 m에 -1을 해줍니다. 그리고 카운트를 증가시켜줍니다. 만약 m&#x3D;0이었다면, 비교를 멈추고 몇번째 인지 카운트한 값을 출력해줍니다.<br>첫번째에 위치한 값이 우선순위가 가장 높지 않다면, 뒤쪽으로 추가를 해줍니다. 그리고 마찬가지로 한칸씩 앞으로 밀리기 때문에 m에 -1을 해줍니다. 만약 m&#x3D;0이라면, 총 길이에서 1값을 빼준 값으로 바꿔줍니다.  </p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">while (!queue.isEmpty()) &#123;</span><br><span class="line">boolean isPriority = true;</span><br><span class="line">for (int j = 1; j &lt; queue.size(); j++) &#123;</span><br><span class="line">if (queue.peek() &lt; queue.get(j)) &#123;</span><br><span class="line">isPriority = false;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (isPriority) &#123;</span><br><span class="line">cnt++;</span><br><span class="line">queue.poll();</span><br><span class="line">if (m != 0) &#123;</span><br><span class="line">m -= 1;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">queue.add(queue.poll());</span><br><span class="line">if (m == 0) &#123;</span><br><span class="line">m = queue.size() - 1;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">m -= 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(cnt);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/1966/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1966&quot;&gt;프린터 큐&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="algorithm baekjoon queue" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-queue/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 11053[백준 11053]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-09-baekjoon-algorithm-11053/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-09-baekjoon-algorithm-11053/</id>
    <published>2019-10-08T21:30:00.000Z</published>
    <updated>2025-10-21T07:33:46.851Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/11053">가장 긴 증가하는 부분 수열</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>일단 저는 <a href="https://www.acmicpc.net/board/view/42010">여기</a>를 참고했습니다..<br>수열이 주어지고, 그 수열의 부분 수열에서 값이 증가하는 부분 수열, 그리고 그 중 가장 긴 부분 수열의 길이를 구하는 문제입니다.  </p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>배열에 담긴 수를 돌면서, 가장 긴 증가하는 부분 수열의 길이를 구해봅니다.<br>배열의 0번째 인덱스인 경우에는 하나이기 때문에 dp[0] &#x3D; 1로 초기화를 해줍니다.<br>그리고 dp[1~n]도 최소 1개씩은 가질 수 있기 때문에 1로 초기화 해줍니다.<br>이제 배열의 1번째 인덱스의 경우를 보면, 증가하는 수열이 되야하기 때문에 0번째 인덱스와 1번째 인덱스를 비교해줍니다.<br>1번째 인덱스의 값이 더 크고 dp[1]이 dp[0] + 1 보다 작다면, dp[1] &#x3D; dp[0] + 1이 됩니다.<br>여기서 dp[1]이 dp[0] + 1 보다 작아야된다는 조건은 인덱스의 값을 비교했을 때, 계속 증가해야하기 때문입니다.  </p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dp[0] = 1;</span><br><span class="line">for(int i = 1; i &lt; n; i++) &#123;</span><br><span class="line">dp[i] = 1;</span><br><span class="line">for(int j = 0; j &lt; i; j++) &#123;</span><br><span class="line">if(arr[i] &gt; arr[j] &amp;&amp; dp[i] &lt; dp[j] + 1) &#123;</span><br><span class="line">dp[i] = dp[j] + 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">result = Math.max(result, dp[i]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(result);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/11053/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11053&quot;&gt;가장 긴 증가하는 부분 수열&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 17298[백준 17298]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-17298/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-17298/</id>
    <published>2019-10-08T04:40:00.000Z</published>
    <updated>2025-10-21T07:33:46.777Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/17298">오큰수</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>아마 분류가 스택이 아니었으면, 문자열 탐색하면서 풀어보려고 시도해봤을 것 같네요..<br>오큰수를 구하는 건데 오큰수는 <strong>Ai의 오큰수는 오른쪽에 있으면서 Ai보다 큰 수 중에서 가장 왼쪽에 있는 수</strong>라고 정의되어있습니다.<br>따라서 [3, 5, 2, 7]의 경우에 3의 오큰수는 [5, 2, 7] 중 3보다 크면서 가장 왼쪽에 있는 수인 5가 됩니다.  </p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>처음 입력 받아서 수열을 스택에 쌓아두고, 하나씩 꺼내면서 다른 스택에 있는 수와 비교해보는 방식으로 해결했습니다.<br>처음 입력 받은 스택을 왼쪽 스택, 다른 스택을 오른쪽 스택이라고 하겠습니다.<br>왼쪽 스택에서 처음 값을 꺼내면, 오른쪽 스택이 비어있으므로 -1이 되고 왼쪽 스택에서 꺼낸 값을 오른쪽 스택에 넣어줍니다.<br>이제 다시 왼쪽 스택에서 값을 꺼내고, 오른쪽 스택에서 값을 꺼내 비교해줍니다.<br>여기서 오른쪽 스택에 있는 값이 더 크다면, 그 값이 오큰수가 되고 오른쪽 스택에서 꺼낸 값과 왼쪽 스택에서 꺼낸 값을 순서대로 오른쪽 스택에 넣어줍니다.<br>오른쪽 스택에 있는 값이 더 작다면, 그 값은 버리고 다시 오른쪽 스택에서 값을 꺼내 비교해줍니다.<br>이렇게 n번 반복하면 오큰수가 담긴 배열이 생성이 됩니다.</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">int lTmp = lStack.pop();</span><br><span class="line">if (rStack.isEmpty()) &#123;</span><br><span class="line">nge[n - i - 1] = -1;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">while (!rStack.isEmpty()) &#123;</span><br><span class="line">int rTmp = rStack.pop();</span><br><span class="line">if (lTmp &lt; rTmp) &#123;</span><br><span class="line">nge[n - i - 1] = rTmp;</span><br><span class="line">rStack.push(rTmp);</span><br><span class="line">rStack.push(lTmp);</span><br><span class="line">break;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (rStack.isEmpty()) &#123;</span><br><span class="line">nge[n - i - 1] = -1;</span><br><span class="line">break;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">rTmp = rStack.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rStack.push(lTmp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/17298/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/17298&quot;&gt;오큰수&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;/h2&gt;&lt;p</summary>
      
    
    
    
    <category term="algorithm baekjoon stack" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-stack/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1157[백준 1157]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-1157/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-1157/</id>
    <published>2019-10-07T22:08:00.000Z</published>
    <updated>2025-10-21T07:33:46.733Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1157">단어 공부</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>간단하게 파악할 수 있습니다.<br>문자열이 주어졌을 때, 해당 문자열에서 가장 많이 쓰인 알파벳을 찾으면 됩니다.<br>예를 들어 S&#x3D;zZa 이면, 대소문자를 구분하지 않기 때문에 Z가 2번으로 가장 많이 쓰인 것입니다.<br>만약 가장 많이 쓰인 알파벳이 1개가 아니라면 ?를 출력합니다.  </p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>먼저 문자열이 대소문자가 섞여서 입력이 되기때문에 모두 대문자로 변경해줘야 합니다.<br>그리고 문자열을 돌면서 어느 알파벳인지 판단 후, 알파벳 카운팅 배열의 숫자를 증가시켜줍니다.<br>이제 알파벳 카운팅 배열에서 가장 큰 값의 인덱스 번호와 가장 큰 값을 찾습니다.<br>가장 많이 쓰인 알파벳이 1개가 아닐 경우를 찾아야하기때문에 가장 큰 값을 가장 큰 값의 인덱스번호를 제외하고 다시 찾아봅니다.<br>가장 많이 쓰인 알파벳이 1개가 아닐 경우에는 “?”를 출력하고, 1개일 경우에는 ‘A’에 가장 큰 값의 인덱스 번호를 더해주고 문자로 바꿔서 출력해줍니다.</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; inputString.length(); i++) &#123;</span><br><span class="line">for (int j = 0; j &lt; alphabetCnt.length; j++) &#123;</span><br><span class="line">if (inputString.charAt(i) == &#x27;A&#x27; + j) &#123;</span><br><span class="line">alphabetCnt[j]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; alphabetCnt.length; i++) &#123;</span><br><span class="line">if (maxCnt &lt; alphabetCnt[i]) &#123;</span><br><span class="line">maxCnt = alphabetCnt[i];</span><br><span class="line">maxIndex = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; alphabetCnt.length; i++) &#123;</span><br><span class="line">if (maxCnt == alphabetCnt[i] &amp;&amp; i != maxIndex) &#123;</span><br><span class="line">isDuplicated = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (isDuplicated) &#123;</span><br><span class="line">System.out.print(&quot;?&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">System.out.print(Character.toChars(&#x27;A&#x27; + maxIndex));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/1157/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1157&quot;&gt;단어 공부&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="algorithm baekjoon string-handling" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-string-handling/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2675[백준 2675]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-2675/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-08-baekjoon-algorithm-2675/</id>
    <published>2019-10-07T15:41:00.000Z</published>
    <updated>2025-10-21T07:33:46.746Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2675">문자열 반복</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>간단하게 파악할 수 있습니다.<br>문자열 S와 반복될 수 R이 들어오면, 문자열 S의 각 문자를 R번 반복해서 출력시키면 됩니다.<br>예를 들어 S&#x3D;ABC, R&#x3D;3 이라면, AAABBBCCC가 출력되게 하면 됩니다.</p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>문자열의 문자를 돌면서 substring으로 잘라서 R번씩 result 문자열에 붙여주도록 했습니다.</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">static String makeRepeatString(String s, int n) &#123;</span><br><span class="line">String result = &quot;&quot;;</span><br><span class="line">for(int i = 0; i &lt; s.length(); i++) &#123;</span><br><span class="line">for(int j = 0; j &lt; n; j++) &#123;</span><br><span class="line">result += s.substring(i, i+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/2675/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2675&quot;&gt;문자열 반복&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;/h2&gt;</summary>
      
    
    
    
    <category term="algorithm baekjoon string-handling" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-string-handling/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1874[백준 1874]</title>
    <link href="https://parkbeommin.github.io/posts/2019-10-07-baekjoon-algorithm-1874/"/>
    <id>https://parkbeommin.github.io/posts/2019-10-07-baekjoon-algorithm-1874/</id>
    <published>2019-10-07T03:29:00.000Z</published>
    <updated>2025-10-21T07:33:46.704Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1874">스택수열</a></p><h2 id="문제파악"><a href="#문제파악" class="headerlink" title="문제파악"></a>문제파악</h2><p>처음에 문제를 보고 뭔소린가 했습니다..<br>문제를 제대로 읽지 않았던 거죠..<br><strong>1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로써</strong> 라는 구절을 제대로 읽어야 문제가 제대로 파악이 되더라구요.<br>따라서 입력에서 주어진 수열이 스택에 1부터 n까지 수를 넣었다가 뺐다가 하면서 만들 수 있느냐 없느냐를 판단하는 문제입니다.<br>예제 1번을 보면 [4, 3, 6, 8, 7, 5, 2, 1] 수열이 완성이 되야하죠.<br>그럼 스택에 1부터 4까지 푸쉬하면 다음과 같은 상태가 됩니다. ([1, 2, 3, 4])<br>여기서 두 번 팝을 하면, 스택은 ([1, 2]) 상태가 되고, 수열은 [4, 3]의 형태가 됩니다.<br>이렇게 반복해서 수열이 완성되도록 하면 됩니다.  </p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>저는 수열을 담은 배열을 선언하고 배열에 담긴 숫자와 스택에 들어갈 숫자를 비교하며, 스택에 값을 넣을지 뺄지 판단하도록 했습니다.<br>예를 들면, 배열의 첫 번째 숫자가 4이고 스택에 들어갈 숫자가 1부터 시작한다면, 1~4까지는 배열의 첫 번째 숫자보다 작거나 같으므로 푸쉬를 해줍니다.<br>그리고 그 다음 숫자는 5이고 배열의 첫 번째 숫자 4보다 크므로 팝 연산을 하고 배열의 인덱스를 증가시켜줍니다.<br>이 과정을 반복하고, 팝 연산과정에서 현재 배열의 인덱스 숫자와 일치하지 않는다면 플래그를 통해 수열을 만들 수 없다는 것을 판단하였습니다.</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">if (num &lt;= arr[i]) &#123;</span><br><span class="line">stack.push(num);</span><br><span class="line">num++;</span><br><span class="line">i--;</span><br><span class="line">result.add(&quot;+&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">int popNum = stack.pop();</span><br><span class="line">if(popNum != arr[i]) &#123;</span><br><span class="line">isRight = false;</span><br><span class="line">&#125;</span><br><span class="line">result.add(&quot;-&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (isRight) &#123;</span><br><span class="line">for (int i = 0; i &lt; result.size(); i++) &#123;</span><br><span class="line">System.out.println(result.get(i));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">System.out.print(&quot;NO&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/1874/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1874&quot;&gt;스택수열&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;문제파악&quot;&gt;&lt;a href=&quot;#문제파악&quot; class=&quot;headerlink&quot; title=&quot;문제파악&quot;&gt;&lt;/a&gt;문제파악&lt;/h2&gt;&lt;p</summary>
      
    
    
    
    <category term="algorithm baekjoon stack" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-stack/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1003[백준 1003]</title>
    <link href="https://parkbeommin.github.io/posts/2019-09-26-baekjoon-algorithm-1003/"/>
    <id>https://parkbeommin.github.io/posts/2019-09-26-baekjoon-algorithm-1003/</id>
    <published>2019-09-25T16:19:00.000Z</published>
    <updated>2025-10-21T07:33:46.664Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1003">피보나치 함수</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>n은 40보다 작거나 같은 자연수이다.</li><li>0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</li><li>식으로 표현하면 Fn &#x3D; Fn-1 + Fn-2 (n&gt;&#x3D;2)이다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>n번째 피보나치 수를 구할 때, 0과 1이 각각 몇번 호출되는지.</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>문제에서 주어진 코드를 그대로 활용하면, 재귀함수이기 때문에 시간 초과가 뜬다.</li><li>0과 1이 호출되는 것 또한, 피보나치 수를 구하는 방법과 같다.</li></ul><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">for (int j = 0; j &lt;= num; j++) &#123;</span><br><span class="line">if(j == 0) &#123;</span><br><span class="line">dp_zero[j] = 1;</span><br><span class="line">dp_one[j] = 0;</span><br><span class="line">&#125;else if(j == 1) &#123;</span><br><span class="line">dp_zero[j] = 0;</span><br><span class="line">dp_one[j] = 1;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">dp_zero[j] = dp_zero[j-1] + dp_zero[j-2];</span><br><span class="line">dp_one[j] = dp_one[j-1] + dp_one[j-2];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(dp_zero[num] + &quot; &quot; + dp_one[num]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/1003/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1003&quot;&gt;피보나치 함수&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2748[백준 2748]</title>
    <link href="https://parkbeommin.github.io/posts/2019-09-26-baekjoon-algorithm-2748/"/>
    <id>https://parkbeommin.github.io/posts/2019-09-26-baekjoon-algorithm-2748/</id>
    <published>2019-09-25T15:13:00.000Z</published>
    <updated>2025-10-21T07:33:46.679Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2748">피보나치 수 2</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>n은 90보다 작거나 같은 자연수이다.</li><li>0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</li><li>식으로 표현하면 Fn &#x3D; Fn-1 + Fn-2 (n&gt;&#x3D;2)이다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>n번째 피보나치 수.</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>문제에서 주어진 식을 그대로 활용한다.</li><li>주의해야할 점은 n이 최대 90이기 때문에, 자료형을 신경써줘야한다.</li></ul><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">long[] dp = new long[n+1];</span><br><span class="line">dp[0] = 0;</span><br><span class="line">dp[1] = 1;</span><br><span class="line">for(int i = 2; i &lt;= n; i++) &#123;</span><br><span class="line">dp[i] = dp[i-1] + dp[i-2];</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(dp[n]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/2748/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2748&quot;&gt;피보나치 수 2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 15953[백준 15953]</title>
    <link href="https://parkbeommin.github.io/posts/2019-08-30-baekjoon-algorithm-15953/"/>
    <id>https://parkbeommin.github.io/posts/2019-08-30-baekjoon-algorithm-15953/</id>
    <published>2019-08-29T11:12:00.000Z</published>
    <updated>2025-10-21T07:33:46.643Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/15953">상금 헌터</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>가정한 횟수 T(1 &lt;&#x3D; T &lt;&#x3D; 1000)가 주어진다.</li><li>각 가정별 1회 등수(a)와 2회 등수(b)가 주어진다. (0 &lt;&#x3D; a &lt;&#x3D; 100, 0 &lt;&#x3D; b &lt;&#x3D; 64)</li><li>1회와 2회의 순위별 상금과 상금 부여 인원이 주어진다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>각 가정별 획득 상금.</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>가정한 등수가 받을 수 있는 상금을 찾아야 한다.</li></ul><ol><li>각 가정별 1회와 2회의 등수에 대해서 상금을 받을 수 있는지 비교한다.</li><li>1회와 2회에서 받을 수 있는 상금을 합한다.</li><li>합한 상금을 출력한다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 0; i &lt; T; i++) &#123;</span><br><span class="line">int a = input[i][0];</span><br><span class="line">int b = input[i][1];</span><br><span class="line">if(a &lt;= 21 &amp;&amp; a &gt; 0) &#123;</span><br><span class="line">if( a == 1) &#123;</span><br><span class="line">result[i] += first[0];</span><br><span class="line">&#125;else if( a &gt; 1 &amp;&amp; a &lt;= 3 ) &#123;</span><br><span class="line">result[i] += first[1];</span><br><span class="line">&#125;else if( a &gt; 3 &amp;&amp; a &lt;= 6 ) &#123;</span><br><span class="line">result[i] += first[2];</span><br><span class="line">&#125;else if( a &gt; 6 &amp;&amp; a &lt;= 10 ) &#123;</span><br><span class="line">result[i] += first[3];</span><br><span class="line">&#125;else if( a &gt; 10 &amp;&amp; a &lt;= 15 ) &#123;</span><br><span class="line">result[i] += first[4];</span><br><span class="line">&#125;else if( a &gt; 15 &amp;&amp; a &lt;= 21 ) &#123;</span><br><span class="line">result[i] += first[5];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(b &lt;= 31 &amp;&amp; b &gt; 0) &#123;</span><br><span class="line">if( b == 1) &#123;</span><br><span class="line">result[i] += second[0];</span><br><span class="line">&#125;else if( b &gt; 1 &amp;&amp; b &lt;= 3 ) &#123;</span><br><span class="line">result[i] += second[1];</span><br><span class="line">&#125;else if( b &gt; 3 &amp;&amp; b &lt;= 7 ) &#123;</span><br><span class="line">result[i] += second[2];</span><br><span class="line">&#125;else if( b &gt; 7 &amp;&amp; b &lt;= 15 ) &#123;</span><br><span class="line">result[i] += second[3];</span><br><span class="line">&#125;else if( b &gt; 15 &amp;&amp; b &lt;= 31 ) &#123;</span><br><span class="line">result[i] += second[4];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(int i = 0; i &lt; T; i++) &#123;</span><br><span class="line">System.out.println(result[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/15953/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/15953&quot;&gt;상금 헌터&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="algorithm baekjoon" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 7568[백준 7568]</title>
    <link href="https://parkbeommin.github.io/posts/2019-08-30-baekjoon-algorithm-7568/"/>
    <id>https://parkbeommin.github.io/posts/2019-08-30-baekjoon-algorithm-7568/</id>
    <published>2019-08-29T10:32:00.000Z</published>
    <updated>2025-10-21T07:33:46.620Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/7568">덩치</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>전체 사람의 수 N(2 &lt;&#x3D; N &lt;&#x3D; 50)이 주어진다.</li><li>각 사람별 몸무게(x)와 키(y)가 주어진다. (10 &lt;&#x3D; x,y &lt;&#x3D; 200)</li><li>두 사람 A 와 B의 덩치가 각각 (x,y), (p,q)라고 할 때 x&gt;p 그리고 y&gt;q 이라면 우리는 A의 덩치가 B의 덩치보다 <strong>더 크다</strong>고 말한다.</li><li>N명의 집단에서 각 사람의 덩치 등수는 자신보다 더 “큰 덩치”의 사람의 수로 정해진다.</li><li>만일 자신보다 더 큰 덩치의 사람이 k명이라면 그 사람의 덩치 등수는 k+1이 된다. 이렇게 등수를 결정하면 같은 덩치 등수를 가진 사람은 여러 명도 가능하다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>입력에 나열된 사람의 덩치 등수</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>브루트포스 알고리즘으로, 모든 경우를 다 해본다.</li></ul><ol><li>1부터 N까지 키와 몸무게를 비교한다.</li><li>덩치가 큰 사람이 있다면 해당 위치의 등수를 1 증가한다.</li><li>등수가 1등부터 시작이기 때문에 전체 등수에 1씩 더해주고 출력한다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">int weight = arr[i][0];</span><br><span class="line">int height = arr[i][1];</span><br><span class="line">for (int j = 0; j &lt; N; j++) &#123;</span><br><span class="line">if (weight &lt; arr[j][0] &amp;&amp; height &lt; arr[j][1]) &#123;</span><br><span class="line">result[i] = result[i] + 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">System.out.print(result[i]+1 + &quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/7568/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/7568&quot;&gt;덩치&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;전체 </summary>
      
    
    
    
    <category term="algorithm baekjoon brute-force" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-brute-force/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2231[백준 2231]</title>
    <link href="https://parkbeommin.github.io/posts/2019-08-25-baekjoon-algorithm-2231/"/>
    <id>https://parkbeommin.github.io/posts/2019-08-25-baekjoon-algorithm-2231/</id>
    <published>2019-08-24T09:50:00.000Z</published>
    <updated>2025-10-21T07:33:46.601Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2231">분해합</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>자연수 N(1 &lt;&#x3D; N &lt;&#x3D; 100000)이 주어진다.</li><li>어떤 자연수 M이 있을 때, M의 분해합은 M과 M을 이루는 각 자릿수의 합이다.</li><li>어떤 자연수 K의 분해합이 M일 경우, K는 M의 생성자이다.</li><li>생성자가 없는 경우 결과 값은 0이다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>N의 가장 작은 생성자.</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>브루트포스 알고리즘으로, 모든 경우를 다 해본다.</li></ul><ol><li>1부터 N까지 분해합을 구한다.</li><li>분해합과 N을 비교하여, 같으면 생성자로 저장한다. 그리고 이전 생성자와 비교하여 작은 값을 선택한다.</li><li>생성자가 없다면, 0을 출력한다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">int sum = 0;</span><br><span class="line">if(i / 100000 != 0) &#123;</span><br><span class="line">sum = i + (i / 100000) + ((i%100000)/10000) + ((i%10000)/1000) + ((i%1000)/100) + ((i%100)/10) + i%10;</span><br><span class="line">&#125;else if(i / 10000 != 0) &#123;</span><br><span class="line">sum = i + ((i%100000)/10000) + ((i%10000)/1000) + ((i%1000)/100) + ((i%100)/10) + i%10;</span><br><span class="line">&#125;else if(i / 1000 != 0) &#123;</span><br><span class="line">sum = i + ((i%10000)/1000) + ((i%1000)/100) + ((i%100)/10) + i%10;</span><br><span class="line">&#125;else if(i / 100 != 0) &#123;</span><br><span class="line">sum = i + ((i%1000)/100) + ((i%100)/10) + i%10;</span><br><span class="line">&#125;else if( i / 10 != 0) &#123;</span><br><span class="line">sum = i + ((i%100)/10) + i%10;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">sum = i + i%10;</span><br><span class="line">&#125;</span><br><span class="line">if(sum == N &amp;&amp; result &gt; i) &#123;</span><br><span class="line">result = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(result == N) &#123;</span><br><span class="line">result = 0;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(result);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/2231/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2231&quot;&gt;분해합&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;자연</summary>
      
    
    
    
    <category term="algorithm baekjoon brute-force" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-brute-force/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2798[백준 2798]</title>
    <link href="https://parkbeommin.github.io/posts/2019-08-23-baekjoon-algorithm-2798/"/>
    <id>https://parkbeommin.github.io/posts/2019-08-23-baekjoon-algorithm-2798/</id>
    <published>2019-08-22T10:24:00.000Z</published>
    <updated>2025-10-21T07:33:46.574Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2798">블랙잭</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>N(3 &lt;&#x3D; N &lt;&#x3D; 100)개의 카드가 주어진다.</li><li>딜러가 숫자 M(10 &lt;&#x3D; M &lt;&#x3D; 300,000)을 외친다.</li><li>합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 주어진다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합.</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>브루트포스 알고리즘으로, 모든 경우를 다 해본다.</li></ul><ol><li>카드를 정렬한다.</li><li>카드를 처음부터 3개를 선택하여 합을 구한다. 이 후 한장씩 바꿔가면서 합을 구한다.</li><li>카드의 합이 M보다 같거나 작고, 이전에 선택했는 카드의 합보다 크거나 같다면 결과 값을 대체한다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">int result = 0;</span><br><span class="line">for(int i = 0; i &lt; N-2; i++) &#123;</span><br><span class="line">for(int j = i+1; j &lt; N-1; j++) &#123;</span><br><span class="line">for(int k = j+1; k &lt; N; k++) &#123;</span><br><span class="line">int sum = card[i] + card[j] + card[k];</span><br><span class="line">if(sum &lt;= M &amp;&amp; result &lt;= sum) &#123;</span><br><span class="line">result = sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/BaekJoonAlgorithm/blob/2798/src/Main.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2798&quot;&gt;블랙잭&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;N(</summary>
      
    
    
    
    <category term="algorithm baekjoon brute-force" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-brute-force/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드] 테이블 레이아웃(TableLayout)</title>
    <link href="https://parkbeommin.github.io/posts/2019-08-17-android-table-layout/"/>
    <id>https://parkbeommin.github.io/posts/2019-08-17-android-table-layout/</id>
    <published>2019-08-16T18:19:00.000Z</published>
    <updated>2025-10-21T07:33:46.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0"><a href="#0" class="headerlink" title="0."></a>0.</h2><p>우리는 안드로이드에서 대표적인 레이아웃인 LinearLayout, RelativeLayout, ConstrainLayout을 활용해서 다양한 화면을 만들 수 있습니다.</p><p>하지만 특정한 모양의 레이아웃이 제공된다면 더 쉽게 만들 수 있겠죠?</p><p>이번에는 테이블 형태의 모양을 제공해주는 테이블 레이아웃에 대해서 알아보도록 하겠습니다.</p><h2 id="1-구조"><a href="#1-구조" class="headerlink" title="1. 구조"></a>1. 구조</h2><p>테이블 레이아웃의 구조는 다음과 같습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout&gt;</span><br><span class="line">  &lt;TableRow&gt;&lt;/TableRow&gt;</span><br><span class="line">  &lt;TableRow&gt;&lt;/TableRow&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/TableLayout&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMTYz/MDAxNTYzOTQ2NTQwMzEx.ehbF-a5zKKs16GDTMRX-ea84MJ3ZGUSGXgMfvAl3Apog.GW9TPdE5JrlIrCpblZQZp4hdJsv25Hw0iUlMfbpqPIYg.PNG.club1294/image.png?type=w773"><p>TableLayout으로 전체를 감싸고 그 안에 한 행(row)이 TableRow가 됩니다.</p><p>그리고 그 행안에 필요한 위젯들을 추가해줍니다.</p><h2 id="2-속성"><a href="#2-속성" class="headerlink" title="2. 속성"></a>2. 속성</h2><p>속성에 대해 설명하기에 앞서 기본적으로 테이블 레이아웃을 구성하고, 속성을 하나씩 추가해가면서 변화하는 모습으로 설명을 드리겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TableRow</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">                android:text=&quot;1&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">                android:text=&quot;2&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br><span class="line">    &lt;/TableRow&gt;</span><br><span class="line">    &lt;TableRow android:layout_width=&quot;match_parent&quot;</span><br><span class="line">              android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">                android:text=&quot;3&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">                android:text=&quot;4&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br><span class="line">    &lt;/TableRow&gt;</span><br><span class="line"></span><br><span class="line">&lt;/TableLayout&gt;</span><br></pre></td></tr></table></figure><p><img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMTIg/MDAxNTYzOTQ4MzQ2OTgz.kpGUdeipNxivzCgyxPoS1cKpOMdkh0Sleaxc5C8PkaEg.4qVsZW_6C3OPvYhHr3z_J2dD32FZu50Ci-Nib2PiGLEg.PNG.club1294/image.png?type=w773">​</p><h3 id="2-1-테이블-레이아웃-속성-TableLayout-Attribute"><a href="#2-1-테이블-레이아웃-속성-TableLayout-Attribute" class="headerlink" title="2.1 테이블 레이아웃 속성(TableLayout Attribute)"></a>2.1 테이블 레이아웃 속성(TableLayout Attribute)</h3><p>영상에서는 stretchColumns에 대한 속성만 언급이 되어있지만, 안드로이드 공식문서에 보면 이것 외에 두가지 속성이 더 있습니다.</p><blockquote><p>collapseColumns &#x2F; shrinkColumns &#x2F; stretchColumns</p></blockquote><p>테이블 레이아웃에는 위와 같이 세 가지 속성을 지정할 수 있습니다.</p><p>세 가지 모두 값으로 열(column)의 인덱스 값을 받습니다.</p><h4 id="2-1-1-collapseColumns"><a href="#2-1-1-collapseColumns" class="headerlink" title="2.1.1 collapseColumns"></a>2.1.1 collapseColumns</h4><p>collapseColumns는 지정한 열을 없애줍니다.</p><p>테이블 레이아웃 태그에 collapseColumns 속성으로 0 인덱스를 지정했습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        android:collapseColumns=&quot;0&quot;</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMjc2/MDAxNTYzOTQ4NTM2ODQ3.L4yAdSkFEBu-Nunx8F6MceeCljSBBD1R2fCFA4NA6oIg.jVdPGkTBR2o-xOnD-q5hNbxTnEGH5_Ds0-TE9C7kb6Yg.PNG.club1294/image.png?type=w773"><p>첫번째 열이 사라진 것을 볼 수 있습니다.<br>​<br>속성의 값으로 여러 개의 열을 지정할 수 있습니다.</p><p>콤마(‘,’)로 구분을 해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        android:collapseColumns=&quot;0, 1&quot;</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMTgy/MDAxNTYzOTQ4NjU1Mzc5.IR2DQUIuHrPbReW9LQS36EjTTahR3DsXPYkyX63YGC0g.CF7xQqP8IkbWbY0fg2buM21HSfbl3hFV9dn6s3WYkwQg.PNG.club1294/image.png?type=w773"><p>속성 값이 테이블 열의 인덱스 값을 벗어나게 되면, 무시하게 됩니다.</p><h4 id="2-1-2-shrinkColumns"><a href="#2-1-2-shrinkColumns" class="headerlink" title="2.1.2 shrinkColumns"></a>2.1.2 shrinkColumns</h4><p>shrinkColumns는 지정한 열을 축소해줍니다.</p><p>shrinkColumns의 경우 화면을 벗어날 경우 해당 인덱스를 축소시켜주는 것이기 때문에, 기본 레이아웃에 버튼을 여러개 더 추가한 상태에서 설명드리도록 하겠습니다.</p><p>테이블 레이아웃 태그에 shrinkColumns 속성으로 0 인덱스를 지정했습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:shrinkColumns=&quot;0&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMjIg/MDAxNTYzOTQ5Mzg1NzQ4.RIseIecXDYjNMpp4-XUBIWi7fY3OdW4-Fyhzu3bPSIEg.kVrVTQbA_B1_olwpHl7rgzek99SRwACXzKMupfsMqKUg.PNG.club1294/image.png?type=w773"><p>첫번째 열에 있는 버튼이 사라진 것처럼 보입니다.</p><p>1~5열에 있는 버튼들의 크기가 아직도 화면을 벗어나 있기 때문입니다.</p><p>여러개의 속성을 지정해보겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:shrinkColumns=&quot;0, 1, 2&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfNDUg/MDAxNTYzOTQ5NTIyNTkx.0qWmhodZdUmxE2J-Nt5kfqSlMwOlGsOJvyTdwZ7zJ7gg.YCX1iSWdi4a6jbX6Pn68QepqXQJJAZK8d8z2oQCYW4Yg.PNG.club1294/image.png?type=w773"><p>지정된 인덱스에 해당되는 열이 축소된 것을 볼 수 있습니다.</p><p>모든 열에 똑같이 지정하고 싶을 때는 ‘*‘을 넣어주면 됩니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:shrinkColumns=&quot;*&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMTUz/MDAxNTYzOTQ5NjMwNTcz.4UXgUuUkOjtG-KfG83DIqqAp4NtpegzihPfrjLI5cdQg.pU0qQ7Uu0qSrH6cCtz4HsofVO1VsEjoUDEZxGKpxAQ8g.PNG.club1294/image.png?type=w773"><p>모든 열이 화면에 맞게 축소된 것을 볼 수 있습니다.</p><h4 id="2-1-3-stretchColumns"><a href="#2-1-3-stretchColumns" class="headerlink" title="2.1.3 stretchColumns"></a>2.1.3 stretchColumns</h4><p>stretchColumns는 지정한 열을 늘려줍니다.</p><p>테이블 레이아웃 태그에 stretchColumns 속성으로 0 인덱스를 지정했습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:stretchColumns=&quot;0&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfODAg/MDAxNTYzOTQ5OTQ5Nzk0.PNfjklwvoGkftBdZ6bm6bs85VILeEssOoY-0nBMXZfMg.feQI33Fh6DG97hLt1VimQK-86gMlx1cu82N71ImXVK4g.PNG.club1294/image.png?type=w773"><p>해당하는 열이 화면에 맞게 늘어나는 것을 볼 수 있습니다.</p><p>다른 속성과 마찬가지로 여러 개의 열을 지정할 수 있고,</p><p>shrink 속성과 마찬가지로 모든 열에 지정하고 싶을 때는 ‘*‘을 넣어줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;TableLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        android:stretchColumns=&quot;*&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMzgg/MDAxNTYzOTUwMDc1ODkz.m9dw-WoF1iQav72IFYIjFhd4BKwAwAdp5MZfUHFVh8Yg.qiey47SEiGhbDAjmhShbZz47Lgkpay_cQLLKeKL7zFUg.PNG.club1294/image.png?type=w773"><h3 id="2-2-테이블레이아웃-내-위젯-속성"><a href="#2-2-테이블레이아웃-내-위젯-속성" class="headerlink" title="2.2 테이블레이아웃 내 위젯 속성"></a>2.2 테이블레이아웃 내 위젯 속성</h3><p>테이블 레이아웃 내에 위치한 위젯들에는 layout_column이란 속성을 지정할 수 있습니다.</p><p>layout_column의 값은 마찬가지로 열(column)의 인덱스 값이고 해당하는 인덱스에 위치하게 됩니다.</p><p>하지만 주의할 사항이 있습니다.</p><p>순서상 앞에 있는 위젯의 열의 위치를 뒤로 옮기면 뒤에 있던 위젯들은 그대로 따라서 뒤로 옮겨지게 됩니다.</p><p>즉, 뒤에 있는 위젯에 인덱스 값을 다른 위젯의 앞의 값으로 변경하여도 적용되지 않습니다.<br>​</p><p>2번 버튼을 3번째 열(인덱스 값&#x3D;2)로 옮겨보도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">                android:layout_column=&quot;2&quot;</span><br><span class="line">                android:text=&quot;2&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br></pre></td></tr></table></figure> <img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMjEw/MDAxNTYzOTUwNzQwNTQ3.z8Gr-Mb7bvtQLl3mN2n2zAJgtxpYMWBRpdJxop3OltUg.QC_kM58DRn177w2UMcOKHA1Pj2nnRcL1YWOro0UBXpMg.PNG.club1294/image.png?type=w773"><p>2열에 있던 2번 버튼이 3열로 잘 옮겨졌습니다.</p><p>그러면 1번 버튼을 2열(1번 인덱스)로 옮기고, 2번 버튼을 1열(0번 인덱스)로 지정을 해보겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">                android:layout_column=&quot;1&quot;</span><br><span class="line">                android:text=&quot;1&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">                android:layout_column=&quot;0&quot;</span><br><span class="line">                android:text=&quot;2&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;/&gt;</span><br></pre></td></tr></table></figure><img src ="https://postfiles.pstatic.net/MjAxOTA3MjRfMjI0/MDAxNTYzOTU3NjM0ODgw.qmmUifiJs3So_RJotioio4ugRfrv7G_VM6I2x-DbjzEg.d7cDKaAAS0AX0DwSg5fQgyM8eDYaYYb7TZIUO39vOHsg.PNG.club1294/image.png?type=w773"><p>1번 버튼은 잘 옮겨졌지만, 2번 버튼은 제대로 동작하지 않습니다.</p><p>순서상 1번 버튼이 앞에 있어서 그런 것 같습니다.</p><p>​</p><h2 id="3-생각해보기"><a href="#3-생각해보기" class="headerlink" title="3. 생각해보기"></a>3. 생각해보기</h2><img src="https://postfiles.pstatic.net/MjAxOTA3MjRfMTQx/MDAxNTYzOTU3Nzg4NjU3.-gA2d_wflwGBsYqQBmgXP8MwfIYA9Kf8vfOlU7jmFuMg.vNULTjr02-_2AqCTX2I3mYptSuef9qLspdCSDuqlKz8g.PNG.club1294/image.png?type=w773"><p>A) 유지 보수에 더 불편함이 많을 것 같다.</p><p>테이블 레이아웃에서 제공되는 속성들을 활용하여서 모양을 잡기가 훨씬 편리하다.</p><p>리니어 레이아웃으로 구성을 한다면, 각 행 마다 수정을 해줘야한다.<br>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[#부스트코스][ref-url-1]</p><!-- [ref-url-1]: "https://www.edwith.org/boostcourse-android/lecture/17050/" -->]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0&quot;&gt;&lt;a href=&quot;#0&quot; class=&quot;headerlink&quot; title=&quot;0.&quot;&gt;&lt;/a&gt;0.&lt;/h2&gt;&lt;p&gt;우리는 안드로이드에서 대표적인 레이아웃인 LinearLayout, RelativeLayout, ConstrainLayout을 활용</summary>
      
    
    
    
    <category term="android boostcourse" scheme="https://parkbeommin.github.io/categories/android-boostcourse/"/>
    
    
  </entry>
  
  <entry>
    <title>[React Native] React Native 시작하기 - React Native CLI</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-15-react-native-setting-react-native-cli/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-15-react-native-setting-react-native-cli/</id>
    <published>2019-07-15T04:29:00.000Z</published>
    <updated>2025-10-21T07:33:46.545Z</updated>
    
    <content type="html"><![CDATA[<p>[저번 포스팅][last-posting]에서 React Native 개발 환경을 Expo로 셋팅하는 것에 대해서 알아보았습니다.<br>Expo를 이용하여서 잘 개발을 진행하면 될 줄 알았지만, 조금 알아보니 Expo를 이용하면 빠르게 환경 셋팅을 하고 시작할 수 있다는 장점이 있지만, React Native CLI로 하는 것보다 한계가 존재한다고 하네요. 그래서 React Native CLI로 셋팅하는 것에 대해서 알아보도록 하겠습니다.<br>기본적인 제 노트북 환경은 다음과 같습니다.</p><blockquote><p>macOS Mojave 10.14.3<br>2.3 GHz Intel core i5<br>8GB 2133 MHz LPDDR3<br>Macintosh HD<br>intel Iris Plus Graphics 640 1536 MB</p></blockquote><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>[React Native 공식 문서][docs-url]에 들어가서 하라는대로 해보도록 하겠습니다.</p><p>Expo는 저번에 설치했으니, Expo에 관한 글은 넘어가고, ‘네이티브 개발에 친숙하다면’의 문구가 적힌 글을 봅니다.</p><p>Xcode나 Android Studio가 설치되어있다면, 몇분안에 셋팅이 끝난다고 하네요.<br>저는 둘 다 설치가 되어있지만, Xcode는 거의 사용을 안해봐서 Android Studio 기준으로 해보겠습니다.</p><p>개발 운영체제와 플랫폼에 따라서 설치가 조금씩 다르다고 합니다.<br>저는 일단 macOS와 Android를 선택하고 설명을 따라해보도록 하겠습니다.</p><h3 id="Installing-dependencies"><a href="#Installing-dependencies" class="headerlink" title="Installing dependencies"></a>Installing dependencies</h3><p>문서에서 Node, Watchman, React Native command line interface, JDK, Android Studio가 설치되어 있어야한다고 합니다.<br>문서에서 Homebrew를 이용하여서 다음과 같은 명령어로 설치를 안내하고 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install watchman</span><br><span class="line">brew tap AdoptOpenJDK/openjdk</span><br><span class="line">brew cask install adoptopenjdk8</span><br><span class="line">npm install -g react-native-cli</span><br></pre></td></tr></table></figure><p>Node는 8.3 버전 이상이어야합니다.<br>Watchman은 파일시스템 변화를 감지하는 페이스북에서 만든것이라고 합니다. 성능 향상을 위해 설치하는 것을 추천한다고 하네요.<br>JDK는 8 버전 이상이어야합니다.</p><p>Node는 저번 Expo 셋팅 때 10.16.0 버전으로 업그레이드했으니, 넘어가고 Watchman과 JDK, React Native CLI를 설치해보도록 하겠습니다.</p><img src="/assets/react-native-cli-setting/watchman.png"><p>watchman 설치 후 이런 에러가 뜨네요.<br>하지만 친절하게도 어떻게 하라고 안내가 되어있어서 그대로 복붙해줍니다.</p><img src="/assets/react-native-cli-setting/jdk1.png"><img src="/assets/react-native-cli-setting/jdk2.png"><p>JDK 설치도 완료가 되었습니다.<br>이제 React Native CLI만 설치하면 필요한 설치는 다 끝이나네요.<br>React Native CLI 설치 할 때 앞에 sudo를 붙여주었습니다.</p><img src="/assets/react-native-cli-setting/install-react-native-cli.png"><p>이제 필요한 설치가 모두 끝이났네요.</p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p>React Native 앱 개발을 위해서는 Android SDK 버전이 Pie버전이 요구된다고 합니다.<br>문서에 나와있는대로 따라서 SDK 설치를 해줍니다.</p><img src="/assets/react-native-cli-setting/install-sdk.png"><img src="/assets/react-native-cli-setting/install-sdk2.png"><p>우측 하단의 show package details을 클릭하여서 알맞는 것들을 체크하고 설치해줍니다.</p><p>그리고 문서에 따라 환경 변수 설정을 진행해줍니다.<br>터미널 창을 켜서 .bash_profile 파일을 열어 아래 코드를 추가해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_HOME=$HOME/Library/Android/sdk</span><br><span class="line">export PATH=$PATH:$ANDROID_HOME/emulator</span><br><span class="line">export PATH=$PATH:$ANDROID_HOME/tools</span><br><span class="line">export PATH=$PATH:$ANDROID_HOME/tools/bin</span><br><span class="line">export PATH=$PATH:$ANDROID_HOME/platform-tools</span><br></pre></td></tr></table></figure><img src="/assets/react-native-cli-setting/set-bash-profile.png"><p>이제 환경 변수 설정까지 끝났습니다.</p><h3 id="Project-생성하기"><a href="#Project-생성하기" class="headerlink" title="Project 생성하기"></a>Project 생성하기</h3><p>이제 react-native-cli로 프로젝트를 생성해보도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure><img src="/assets/react-native-cli-setting/cocoapod.png"><p>생성이 완료되고, cocoapod이라는 ios개발에 필요한 것을 설치할 것이냐 묻습니다. y를 입력하고 설치를 진행해주면 생성이 끝납니다.</p><h3 id="Project-실행하기"><a href="#Project-실행하기" class="headerlink" title="Project 실행하기"></a>Project 실행하기</h3><p>저는 안드로이드 스마트폰을 사용하기 때문에, 따로 가상머신으로 하지 않겠습니다.<br>프로젝트 폴더로 이동하여서, 아래와 같은 명령어로 프로젝트를 실행시킵니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><img src="/assets/react-native-cli-setting/err1.png"><p>에러가 나네요..<br>안드로이드 환경변수 관련된 에러인거 같은데 뭐가 잘못된걸까요..?<br>SDK 설치가 제대로 완료가 안되었었네요..<br>설치 후 다시 해봐도 에러가 해결이 안되었습니다..<br>환경변수가 제대로 설정이 안되었나 확인을 해보도록 하겠습니다.<br>.bash_profile을 열어 확인해보니 문서에서 하라는대로 잘 되어있습니다.<br>그럼 경로가 잘못된걸까요..?</p><img src="/assets/react-native-cli-setting/confirm-sdk-path.png"><p>SDK 매니저에 들어가서 SDK 경로를 확인해보니 잘못된 것 같진 않습니다..</p><img src="/assets/react-native-cli-setting/empty-path.png"><p>echo로 찍어보니 아무것도 출력이 되지 않네요..</p><p>문서를 다시 한 번 읽어보도록 하겠습니다.. 빠트린건 없는지..</p><blockquote><p>Type source $HOME&#x2F;.bash_profile to load the config into your current shell. Verify that ANDROID_HOME has been added to your path by running echo $PATH.</p></blockquote><p>이럴수가.. 아래와 같은 명령어를 통해 설정 변경한 것을 로드 시켜줘야한다고 하네요..</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source $HOME/.bash_profile</span><br></pre></td></tr></table></figure><img src="/assets/react-native-cli-setting/path.png"><p>이제 설정이 잘 되었습니다..!<br>바로 다시 실행시켜보니 또 에러가 납니다..</p><img src="/assets/react-native-cli-setting/err2.png"><p>그런데 조금 다른 것 같습니다.<br>SDK 경로가 조금 이상하게 출력이 되는 것 같습니다.</p><p>혹시나해서 프로젝트를 다시 생성해보았습니다.<br>역시나 똑같네요..<br>뭐가 문제일까요..</p><p>에러를 검색해보고 [여기][ref-url-1]를 참고하여서 해결하였습니다!!</p><img src="/assets/react-native-cli-setting/import-project.png"><p>일단 안드로이드 스튜디오를 실행하여서, React Native 프로젝트를 import해줍니다.</p><img src="/assets/react-native-cli-setting/sync.png"><p>그리고 싱크를 맞춰줍니다.</p><img src="/assets/react-native-cli-setting/solution.png"><p>그러면 에러 메시지가 뜹니다.<br>SDK 경로에 이상이 있다는 거죠..<br>파란 글씨로 되어있는 부분을 클릭하면 에러를 알아서 해결해줍니다.!!</p><p>이제 다시 터미널창으로 돌아와서 아래 명령어를 입력해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">react-native start</span><br><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><img src="/assets/react-native-cli-setting/start.png"><img src="/assets/react-native-cli-setting/run-android.png"><p>문서에서는 react-native run-android 만 하면 된다고 했는데, 저는 react-native start로 서버 같은걸 실행시켜줘야하더라구요.</p><img src="/assets/react-native-cli-setting/finish.jpeg"><p>그러면 이렇게 디바이스에 출력이 됩니다.!!</p><p>이상 삽질 셋팅하기 였습니다..</p><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[React Native 공식 문서][docs-url]</p><!-- [last-posting]: "https://parkbeommin.github.io/react-native/react-native-setting-expo/"[docs-url]: "https://facebook.github.io/react-native/docs/getting-started"[ref-url-1]: "https://stackoverflow.com/questions/32634352/react-native-android-build-failed-sdk-location-not-found" -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[저번 포스팅][last-posting]에서 React Native 개발 환경을 Expo로 셋팅하는 것에 대해서 알아보았습니다.&lt;br&gt;Expo를 이용하여서 잘 개발을 진행하면 될 줄 알았지만, 조금 알아보니 Expo를 이용하면 빠르게 환경 셋팅을</summary>
      
    
    
    
    <category term="react-native" scheme="https://parkbeommin.github.io/categories/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>[React Native] React Native 시작하기 - Expo</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-14-react-native-setting-expo/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-14-react-native-setting-expo/</id>
    <published>2019-07-13T08:21:00.000Z</published>
    <updated>2025-10-21T07:33:46.527Z</updated>
    
    <content type="html"><![CDATA[<p>[저번 포스팅][last-posting]에서 React Native에 대해서 알아보았습니다.<br>이제 React Native 개발환경셋팅을 해보도록 하겠습니다.<br>기본적인 제 노트북 환경은 다음과 같습니다.</p><blockquote><p>macOS Mojave 10.14.3<br>2.3 GHz Intel core i5<br>8GB 2133 MHz LPDDR3<br>Macintosh HD<br>intel Iris Plus Graphics 640 1536 MB</p></blockquote><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>[React Native 공식 문서][docs-url]에 들어가서 하라는대로 해보도록 하겠습니다.</p><p>웹 개발자의 경우에는 Xcode나 Android Studio 설치를 따로 하지 않고 Expo라는 도구를 사용하는 것이 가장 빠른 방법이라고 합니다.<br>Expo CLI로 개발 환경을 구축하고 바로 React Native 앱을 만들 수 있다고 합니다. 그리고 Snack이라는 사이트에서 바로 개발을 진행할 수도 있다고 합니다.</p><p>저는 네이티브 개발자이기 때문에 위에서 안내하는 것은 무시하고 가려했지만.. 팀 프로젝트를 위해 React Native를 배우는 입장이니만큼 위와 같은 방법으로 셋팅하도록 하겠습니다.</p><h3 id="Node-10"><a href="#Node-10" class="headerlink" title="Node 10+"></a>Node 10+</h3><p>문서에서 Node 버전이 10 이상일 때를 가정한다는 말이 있어서, 노트북에 깔린 Node의 버전을 확인해야합니다.<br>터미널 창을 열어서 다음과 같은 명령어로 Node 버전을 확인합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/node-version.png"><p>저는 지금 8.11.1 버전이네요.<br>업데이트를 해야합니다.<br>터미널 창에서 다음과 같은 명령어를 입력합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo npm cache clean -f</span><br><span class="line">sudo npm install -g n</span><br><span class="line">sudo n stable</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/node-update.png"><p>이제 Node 버전이 10.16.0이 되었습니다.<br>React Native 환경 설정을 다시 진행해보도록 하겠습니다.</p><h3 id="Expo-CLI-설치"><a href="#Expo-CLI-설치" class="headerlink" title="Expo CLI 설치"></a>Expo CLI 설치</h3><p>이제 React Native 개발을 위한 Expo CLI를 설치합니다.<br>아직 Expo Tool이란게 뭔지는 잘 모르겠지만, React Native 개발을 위해 필요한 것임은 틀림없습니다.<br>터미널 창에서 다음과 같이 입력하여 Expo CLI를 설치합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g expo-cli</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/expo-cli-install.png"><p>설치가 완료되었습니다. 생각보다 시간이 좀 걸렸네요..</p><h3 id="Project-생성하고-실행하기"><a href="#Project-생성하고-실행하기" class="headerlink" title="Project 생성하고 실행하기"></a>Project 생성하고 실행하기</h3><p>React Native 프로젝트를 폴더와 함께 생성해보도록 하겠습니다.<br>Expo CLI가 설치되었으니 Expo 명령어로 생성합니다.<br>문서에서 AwesomeProject란 이름의 프로젝트를 생성해보라고 하네요.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expo init AwesomeProject</span><br><span class="line">cd AwesomeProject</span><br><span class="line">npm start # you can also use: expo start</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/choose-template.png"><p>템플릿을 선택하라고 하네요.<br>뭔지는 잘 모르겠지만, 실행하는데 최소한의 디펜던시만 갖고 루트 컴포넌트가 비어있는 blank로 선택을 했습니다.</p><img src="/assets/react-native-setting/name.png"><p>초기 구성 정보를 설정하고 엔터를 눌러달라고 합니다.<br>처음에 Please enter만 보고 엔터키를 계속 눌렀는데 안넘어가길래 뭔가 싶었습니다…</p><img src="/assets/react-native-setting/name2.png"><p>“name” 부분에 값을 넣어달라는 것이었습니다..<br>그냥 타이핑하시고 엔터를 누르면 진행이 됩니다.</p><img src="/assets/react-native-setting/err1.png"><p>그러더니 갑자기 막 에러메시지가 뜹니다..<br>무슨 폴더를 만들어야하는데 퍼미션때문에 거절당해 생긴 에러같습니다..<br>혹시나 해서 보니 프로젝트는 생성이 되어있었습니다.<br>그래서 프로젝트 폴더로 이동하여 그냥 한 번 실행을 해봤습니다.</p><img src="/assets/react-native-setting/confirm-chrome.png"><p>에러가 나서 안될줄 알았더니, 위와 같은 화면이 뜹니다.<br>19002번 포트로 뭔가 실행이 되고 크롬브라우저를 통해 뭔가 보여주려는 것 같습니다.<br>확인을 눌러주고 브라우저에서 19002번 포트로 접속합니다.</p><img src="/assets/react-native-setting/err2.png"><p>뭔가 뜨는가 싶더니.. 프로젝트를 실행할 수 없다는 에러 메시지가 뜹니다..</p><p>당황하긴 했지만.. 퍼미션 에러였으니까 프로젝트 생성할 때 sudo를 붙여주면 어떨까 생각을 했습니다.<br>test라는 프로젝트를 생성해보겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo expo init test</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/test-project.png"><p>역시나.. 성공적으로 생성이 되었습니다.<br>다시 실행해보도록 하겠습니다.</p><img src="/assets/react-native-setting/err3.png"><p>당연히 잘 될 줄 알았는데.. 또 퍼미션 에러입니다..<br>실행할때도 sudo를 붙여주도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm start</span><br></pre></td></tr></table></figure><img src="/assets/react-native-setting/npm-start1.png"><p>역시 성공적으로 실행이 되었습니다.<br>QR코드도 뜨고 IP주소도 보입니다.<br>그리고 웹 브라우저에도 화면이 나타납니다.</p><img src="/assets/react-native-setting/npm-start2.png"><p>뭔가 프로젝트를 관리할 수 있는 대쉬보드 같은 모습입니다.<br>문서를 보니 개발 서버라고 합니다.<br>QR코드나 IP주소를 보니 뭔가 모바일로 접속을 해봐야할 것 같습니다.</p><img src="/assets/react-native-setting/qrcode.jpeg"><p>빅스비 비전으로 QR코드를 인식하는 이렇게 나왔습니다.<br>모바일 화면이 나올거라 기대했는데, IP주소가 나왔습니다.<br>IP주소로 접속해보라는 거겠죠..?</p><img src="/assets/react-native-setting/mobile.jpeg"><p>… 무엇이 잘못된걸까요..<br>모바일 화면이 나올거란 기대는 절대 하지말라는 의미인것 같습니다.</p><img src="/assets/react-native-setting/web.png"><p>혹시나 해서 웹 브라우저에서도 접속해봤지만, 똑같습니다.</p><p>문서로 돌아가서 다음 진행을 보도록 하겠습니다.<br>QR코드를 인식하는 것은 맞았지만, Expo 앱을 설치하라고 합니다.</p><img src="/assets/react-native-setting/expo-install.jpeg"><p>플레이스토어에 가서 다운받습니다.<br>그리고 노트북과 같은 네트워크 상에 있어야합니다.</p><img src="/assets/react-native-setting/expo-qrcode.jpeg"><p>Expo앱을 실행시키니 위와 같이 Scan QR Code 기능이 있습니다.<br>바로 QR코드를 인식시켜줍니다.</p><img src="/assets/react-native-setting/permit.jpeg"><p>이번에는 정말 실행이 되려합니다.<br>다른 앱 위에 그려지는 권한을 허용해달라고 하니 확인을 눌러주고 허용해줍니다.</p><img src="/assets/react-native-setting/building.jpeg"><p>하단에 뭔가 진행이 되고 있습니다.<br>자바스크립트 번들을 만들고 있습니다.</p><img src="/assets/react-native-setting/success.jpeg"><p>드디어 실행이 되었습니다!<br>아마 템플릿이 blank로 되어있어서 이렇게 출력이 되는 것 같습니다.</p><img src="/assets/react-native-setting/add-device.png"><p>아까 웹 브라우저에 대쉬보드 같은 곳에 기기가 연결되었다는 것이 표시됩니다.</p><p>이제 출력된 내용을 바꿔보도록 하겠습니다.</p><img src="/assets/react-native-setting/open-appjs.png"><p>App.js 파일을 열어보니, 출력되었던 텍스트가 보입니다.</p><img src="/assets/react-native-setting/modify-appjs.png"><p>이 부분을 바꿔줍니다.</p><img src="/assets/react-native-setting/appjs-permit.png"><p>그런데 또.. 퍼미션이 필요하다고 합니다.. 변경된 파일을 저장하는데도 sudo권한이 필요하답니다..<br>이건 뭔가 문제가 있는 것 같으니, 수정된 텍스트를 확인 후 알아보도록 하겠습니다.</p><p>저장을 하고 확인을 해보니, 아무 변화가 없습니다..<br>문서에서는 수정을 하고 어플리케이션을 리로드하면 바뀐다고 해서 리로드 버튼을 찾아보니 상태바에 있었습니다.</p><img src="/assets/react-native-setting/reload-err.jpeg"><p>한 번에 되는 법이 없습니다..<br>뭔가 또 문제가 발생했습니다.</p><img src="/assets/react-native-setting/reload-err2.png"><p>리로드 버튼을 누를때마다 터미널창에 위와 같은 워닝이 뜹니다.<br>아래와 같은 명령어를 실행시켜 달라는 것 같습니다.<br>혹시나 해서.. 실행중이 expo 개발 서버를 종료시키고 다시 실행해서 해보니 아주 잘됩니다..<br>리로드 버튼을 눌러줄 필요도 없이 수정하고 저장하면 바로 앱에서 변경이 됩니다.<br><img src="/assets/react-native-setting/modify-success.jpeg"></p><p>정말 이 간단한 개발 환경 셋팅에서도 삽질을 여러 번 했네요.. ‘ㅁ’;</p><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[React Native 공식 문서][docs-url]<br>[Node Update][ref-url-1]</p><!-- [last-posting]: "https://parkbeommin.github.io/react-native/react-native-start/"[docs-url]: "https://facebook.github.io/react-native/docs/getting-started"[ref-url-1]: "https://velopert.com/1351" -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[저번 포스팅][last-posting]에서 React Native에 대해서 알아보았습니다.&lt;br&gt;이제 React Native 개발환경셋팅을 해보도록 하겠습니다.&lt;br&gt;기본적인 제 노트북 환경은 다음과 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;</summary>
      
    
    
    
    <category term="react-native" scheme="https://parkbeommin.github.io/categories/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>[React Native] React Native 알아보기</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-14-react-native-start/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-14-react-native-start/</id>
    <published>2019-07-13T07:16:00.000Z</published>
    <updated>2025-10-21T07:33:46.539Z</updated>
    
    <content type="html"><![CDATA[<p>안녕하세요.<br>안드로이드 개발 경험만 있던 개발자를 꿈꾸는 한 사람입니다. :smile:<br>이 글은 React Native를 처음 시작함과 동시에 작성하는 글입니다.<br>따라서 완전 초보자의 시선에서 바라 본 과정이 될겁니다.<br>제가 React Native를 시작하게 된 것은 네이버에서 주최하는 [D2 CAMPUS FEST mini][d2-campus-fest-mini-url]에 한 번 도전해보고자 친구들과 함께 주제 선정 중 React Native 기술이 필요한 주제를 골랐기 때문입니다.<br>남은 기간이 많지 않기에 일단은 빠르게 습득하는 것을 목표로 하고 있고, 새로운 기술을 습득하게 될 계기를 만들어서 좋습니다. :smile:<br>우선 React Native란 무엇인지에 대해서 알아보도록 하겠습니다.</p><h2 id="React-Native란"><a href="#React-Native란" class="headerlink" title="React Native란?"></a>React Native란?</h2><p>React Native란 무엇일까요..?<br>안드로이드 개발을 하면서 React Native라는 말은 많이 들어봤습니다.</p><p><em>페이스북이 만든거다. 크로스 플랫폼이다. 등등..</em></p><p>그리고 이런 의문점도 있었습니다.</p><p><em>근데, React와 React Native는 뭐가 다른거지..? 그냥 웹, 앱 이렇게 구분되는 건가?</em></p><p>이제 이런 의문점? 흘려들은것?들에 대해서 차근 차근 알아가보도록 하겠습니다.</p><h3 id="페이스북이-만든거다"><a href="#페이스북이-만든거다" class="headerlink" title="페이스북이 만든거다."></a>페이스북이 만든거다.</h3><p>맞습니다!<br>React Native는 페이스북의 오픈소스 프로젝트입니다.<br>한번 배워서 어디서든 써먹자(Learn once, write anywhere)는 페이스북의 철학이 담겨있는 기술입니다.<br>오픈소스 프로젝트이기 때문에 이슈들을 해결하거나, 필요한 네이티브 모듈등을 만들어 올리면 오픈소스에 기여할 수 있습니다.</p><h3 id="크로스-플랫폼이다"><a href="#크로스-플랫폼이다" class="headerlink" title="크로스 플랫폼이다."></a>크로스 플랫폼이다.</h3><p>맞습니다!<br>React Native는 Android와 IOS 개발을 동시에 할 수 있는 크로스 플랫폼입니다.<br>보통 Android 따로 IOS 따로 개발하는 것을 Native로 개발한다고 말하는데, 그래서 Native가 붙은 것 같습니다..<br>Android와 IOS 개발을 같이 하기 위해 하이브리드 앱의 개념이 생겨났는데, 일반적으로 네이티브에 웹뷰를 띄워 보여주었는데, 속도가 느린 단점이 있어서 React Native가 나오게 되었습니다.</p><h3 id="React와-React-Native의-차이점은-뭔가요"><a href="#React와-React-Native의-차이점은-뭔가요" class="headerlink" title="React와 React Native의 차이점은 뭔가요?"></a>React와 React Native의 차이점은 뭔가요?</h3><p>React 또한 페이스북의 오픈소스 프로젝트이고, 웹 개발에 유용한 자바스크립트 라이브러리라고 합니다.<br>React Native는 React에서 네이티브 모바일 앱을 만들 수 있게 확장된? 자바스크립트 라이브러리입니다.<br>따라서 React의 여러 규칙들을 이용하여서 모바일 앱을 개발할 수 있게 만든 것이 React Native입니다.</p><h2 id="React-Native의-장단점"><a href="#React-Native의-장단점" class="headerlink" title="React Native의 장단점"></a>React Native의 장단점</h2><p>이제 React Native가 Android와 IOS 개발을 동시에 하기 위한 자바스크립트 라이브러리 이며, 페이스북의 오픈소스 프로젝트라는 것을 알았습니다.<br>그러면 React Native를 하면 어떤 장단점이 있을까요?<br>지금부터 알아보도록 하겠습니다.</p><h3 id="장점"><a href="#장점" class="headerlink" title="장점"></a>장점</h3><p>일단, 앞에서 말했던 것처럼 React Native는 크로스 플랫폼입니다.<br>즉, Android와 IOS를 자바스크립트로 동시에 개발할 수 있어 엄청난 시간 절약이 됩니다.<br>그리고 네이티브 개발을 하는 것과 같이 네이티브 모듈(카메라, GPS 등)을 이용할 수 있습니다.<br>그리고 굉장히 솔깃햇던 부분인데, 개발을 하다가 UI를 변경하였을 때, 따로 컴파일을 하지 않아도 라이브 리로딩이 됩니다. ( 안드로이드 개발에선 조금 답답했던 기억이.. )<br>그리고 오래된 기술이 아님에도 불구하고, 여러 뛰어난 개발자분들께서 여러 모듈들을 많이 만들어주셔서 리소스가 풍부하고 많은 질의응답이 오간다고 합니다.</p><p>전체적으로 봤을 때, <strong>시간 절약</strong>이 주 키워드가 될 것 같습니다.</p><p>정리를 해보면, 다음과 같습니다.</p><ol><li>한 가지 언어(JavaScript)로 Android와 IOS를 동시에 개발할 수 있다.</li><li>네이티브 모듈을 이용하여서 개발할 수 있다.</li><li>Live Reloading 기능이 있어서, 컴파일을 따로 하지 않아도 된다.</li><li>개발 생태계 활동이 활발하다.</li></ol><h3 id="단점"><a href="#단점" class="headerlink" title="단점"></a>단점</h3><p>좋을 것만 같지만, 단점은 어디에나 존재합니다.</p><p>제공되는 기능에 한계가 있을 수 있습니다.<br>필요한데 없는 기능이라면, Android나 IOS에서 Native로 개발을 진행해야합니다.<br>그리고 Android와 IOS는 각각 다른 특징들을 가지고 있기 때문에, 특정 기능에 있어서는 각 플랫폼별 API를 사용해야합니다.<br>그리고 비즈니스 로직이나 뷰 스택이 많아지게 되면, 성능 저하가 있습니다.</p><p>전체적으로 봤을 때, <strong>네이티브 개발의 완전한 대체에는 한계</strong>가 있는 것 같습니다.</p><p>정리를 해보면, 다음과 같습니다.</p><ol><li>제공되는 기능에 한계가 있어, Native개발이 필요할 수 있다.</li><li>각 플랫폼별 API를 사용해야 하는 경우도 있다.</li><li>비즈니스 로직이나 뷰 스택이 많아지면, 성능 저하가 있다.</li></ol><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[<a href="https://starvinglion-rn.tistory.com/2][ref-url-1]">https://starvinglion-rn.tistory.com/2][ref-url-1]</a><br>[<a href="https://tansfil.tistory.com/57][ref-url-2]">https://tansfil.tistory.com/57][ref-url-2]</a><br>[<a href="https://zeddios.tistory.com/409][ref-url-3]">https://zeddios.tistory.com/409][ref-url-3]</a></p><!-- [d2-campus-fest-mini-url]: "http://d2campusfest.kr/7th/"[ref-url-1]: "https://starvinglion-rn.tistory.com/2"[ref-url-2]: "https://tansfil.tistory.com/57"[ref-url-3]: "https://zeddios.tistory.com/409" -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;안녕하세요.&lt;br&gt;안드로이드 개발 경험만 있던 개발자를 꿈꾸는 한 사람입니다. :smile:&lt;br&gt;이 글은 React Native를 처음 시작함과 동시에 작성하는 글입니다.&lt;br&gt;따라서 완전 초보자의 시선에서 바라 본 과정이 될겁니다.&lt;br&gt;제가</summary>
      
    
    
    
    <category term="react-native" scheme="https://parkbeommin.github.io/categories/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드 스튜디오] 시간 절약을 위한 라이브 템플릿</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-12-android-studio-live-templates/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-12-android-studio-live-templates/</id>
    <published>2019-07-11T08:16:00.000Z</published>
    <updated>2025-10-21T07:33:46.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Live-Templates"><a href="#Live-Templates" class="headerlink" title="Live Templates"></a>Live Templates</h2><p>안드로이드 스튜디오에서 제공하는 Live Templates 기능은 잘만 사용한다면 눈에 띄게 개발 속도를 향상시켜주고 개발 환경의 질이 향상될 수 있습니다.<br>이 Live Templates 기능은 안드로이드 스튜디오에만 있는 것은 아니고 대부분의 IDE에서 제공한다고 합니다.<br>저는 최근에야 이 기능을 알게되었..</p><p>Live Templates는 사용자가 지정한 키워드를 통해 어떠한 코드 구문을 생성하는 것을 의미합니다.</p><p>안드로이드 개발을 하면서 가장 귀찮았던 것 중 하나가 findViewById였으나, 코틀린을 쓰게 되면서 이 수고는 덜었습니다.<br>하지만, ConstraintLayout이 나오면서 제약을 걸어주는 것에 귀찮음이 많았습니다.<br>이제 Live Templates를 활용하여서 이런 수고를 덜 수 있도록 해보겠습니다!!</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>맥 기준으로, 안드로이드 스튜디오 좌측 상단을 클릭하여서 Preferences(Command + ,)에 들어갑니다.</p><p>Preferences창이 뜨면 검색창에 live를 검색해줍니다.<br>그러면 다음 그림과 같이 Live Templates가 나타납니다.<br><img src="/assets/live-templates/live-templates-1.png" ></p><p>이제 우리는 키워드를 추가해줄것이기 때문에 우측에 있는 + 버튼을 눌러서 Live Template를 눌러줍니다.</p><img src="/assets/live-templates/live-template-2.png" ><p>이제 abbreviation에 키워드를 적어줍니다.<br>Description과 Template text도 알맞게 작성해줍니다.<br>그리고 하단에 있는 Define을 눌러줍니다.</p><img src="/assets/live-templates/live-templates-3.png" ><p>우리가 만들어줄 키워드는 xml에서 쓰일것이기 때문에 xml에 체크해줍니다.</p><img src="/assets/live-templates/live-templates-4.png"><p>이제 xml파일로 돌아와서 작성해준 키워드를 입력하면 자동완성이 될 수 있도록 나오는 것을 확인할 수 있습니다.</p><img src="/assets/live-templates/live-templates-5.png" ><p>이제 응용하여서 다른 키워드들도 만들어서 좀 더 편리하게 개발을 할 수 있습니다. :smile:</p><p>xml에서 말고 코틀린이나 자바에서도 당연히 사용가능 합니다.<br>코드에서는 여러 변수가 들어갈 수 있는데, 이런 것들을 사용할 때는 젯브레인에서 제공하는 [문서][ref-url-1]를 참고하시면 될 것 같습니다.</p><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[<a href="https://family-gram.tistory.com/293][ref-url-2]">https://family-gram.tistory.com/293][ref-url-2]</a></p><!-- [ref-url-1]: "https://www.jetbrains.com/help/idea/template-variables.html"[ref-url-2]: "https://family-gram.tistory.com/293" -->]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Live-Templates&quot;&gt;&lt;a href=&quot;#Live-Templates&quot; class=&quot;headerlink&quot; title=&quot;Live Templates&quot;&gt;&lt;/a&gt;Live Templates&lt;/h2&gt;&lt;p&gt;안드로이드 스튜디오에서 제공하는 Live</summary>
      
    
    
    
    <category term="android-studio" scheme="https://parkbeommin.github.io/categories/android-studio/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드] 현재 시간 구하기, 시간 계산하기</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-08-android-current-time/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-08-android-current-time/</id>
    <published>2019-07-08T00:18:00.000Z</published>
    <updated>2025-10-21T07:33:46.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="currentTimeMillis"><a href="#currentTimeMillis" class="headerlink" title="currentTimeMillis"></a>currentTimeMillis</h2><p>자바 언어에서 기본으로 제공하는 API Class인 System Class의 currentTimeMillis() 함수를 활용합니다.<br>안드로이드 공식 언어인 코틀린도 JVM 기반이기 때문에 문제 없이 사용가능 합니다.</p><blockquote><p>long currentTimeMillis()</p></blockquote><p>반환 타입은 long 타입으로 반환이 됩니다.<br>반환 값은 1970년 1월 1일부터 호출 시점까지의 ms로 반환이 됩니다.</p><h2 id="현재-시간-구하기"><a href="#현재-시간-구하기" class="headerlink" title="현재 시간 구하기"></a>현재 시간 구하기</h2><p>currentTimeMillis()로 받은 값으로 현재 시간을 구해보도록 하겠습니다.<br>SimpleDateFormat Class 와 Date Class로 쉽게 나타낼 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val time = System.currentTimeMillis()</span><br><span class="line">val dateFormat = SimpleDateFormat(&quot;yyyy-mm-dd hh:mm:ss&quot;)</span><br><span class="line">val curTime = dateFormat.format(Date(time))</span><br></pre></td></tr></table></figure><p>curTime을 출력하면 포맷에 맞게 현재 시간이 출력됩니다.</p><h2 id="시간-계산하기"><a href="#시간-계산하기" class="headerlink" title="시간 계산하기"></a>시간 계산하기</h2><p>이제 조금 응용을 해서 시간을 구해보도록 하겠습니다.</p><h3 id="시간-차이-구하기"><a href="#시간-차이-구하기" class="headerlink" title="시간 차이 구하기"></a>시간 차이 구하기</h3><p>어떤 작업을 시작한 시간과 끝난 시간의 차이를 구해보도록 하겠습니다.<br>예제로 앱을 실행시켰을 때 시간과 버튼을 눌렀을 때 시간 차이를 구하도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class="line">    super.onCreate(savedInstanceState)</span><br><span class="line">    setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">    val startTime = System.currentTimeMillis()</span><br><span class="line"></span><br><span class="line">    button.setOnClickListner &#123;</span><br><span class="line">        val clickTime = System.currentTimeMillis()</span><br><span class="line">        val time = (clickTime - startTime) / 1000</span><br><span class="line">        Log.d(&quot;TEST&quot;, &quot;$time 초 걸림&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="더한-시간-구하기"><a href="#더한-시간-구하기" class="headerlink" title="더한 시간 구하기"></a>더한 시간 구하기</h3><p>현재 시간에서 시간을 더했을 때의 시간을 출력하도록 하겠습니다.<br>예제로 현재 시간에서 부터 30분 후의 시간을 출력하도록 하겠습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var reservationTime = System.currentTimeMillis() + 1800000</span><br><span class="line">val dateFormat = SimpleDateFormat(&quot;yyyy-mm-dd hh:mm:ss&quot;)</span><br><span class="line">val curTime = dateFormat.format(Date(reservationTime))</span><br></pre></td></tr></table></figure><p>currentTimeMillis()의 반환 값이 밀리초(ms)이기 때문에, 30분을 밀리초 단위로 변형 시켜서 더해주었습니다.</p><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[<a href="https://ra2kstar.tistory.com/123][ref-url-1]">https://ra2kstar.tistory.com/123][ref-url-1]</a><br>[<a href="https://aroundck.tistory.com/10][ref-url-2]">https://aroundck.tistory.com/10][ref-url-2]</a></p><!-- [ref-url-1]: "https://ra2kstar.tistory.com/123"[ref-url-2]: "https://aroundck.tistory.com/10" -->]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;currentTimeMillis&quot;&gt;&lt;a href=&quot;#currentTimeMillis&quot; class=&quot;headerlink&quot; title=&quot;currentTimeMillis&quot;&gt;&lt;/a&gt;currentTimeMillis&lt;/h2&gt;&lt;p&gt;자바 언어에서 기본</summary>
      
    
    
    
    <category term="android" scheme="https://parkbeommin.github.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드] Widget 만들기</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-04-android-widget/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-04-android-widget/</id>
    <published>2019-07-03T20:56:00.000Z</published>
    <updated>2025-10-21T07:33:46.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="위젯이란"><a href="#위젯이란" class="headerlink" title="위젯이란?"></a>위젯이란?</h2><p>안드로이드에서 위젯이라고 하면, TextView, EditText와 같은 위젯이 있고, 스마트폰 홈 스크린 화면에 표시되는 위젯이 있습니다.<br>여기서는 후자에 해당하는 위젯에 대해서 설명하도록 하겠습니다.</p><p>공식 문서에서 위젯은 <strong>홈 화면에서 바로 쓸 수 있도록 앱에서 가장 중요한 자료와 기능을 한 곳에 모아주는 역할</strong>을 한다고 합니다.</p><p>위젯은 일반적으로 4가지 종류가 있습니다.</p><ol><li>정보 위젯</li><li>모음 위젯</li><li>제어 위젯</li><li>혼합 위젯</li></ol><p>그리고 위젯을 만들 때, 제약 사항이 있습니다.</p><ul><li>제스처</li></ul><p><strong>터치</strong>와 <strong>세로로 스와이프</strong>만 가능합니다.<br>가로로 스와이프의 경우에는 홈화면간 전환이 되는 제스처와 겹치기 때문에 불가합니다.<br>요즘엔 홈화면에서 세로로 스와이프하여서 모든 앱을 볼 수 있는 기능이 있는데, 이 경우는 고려되는지 잘 모르겠습니다.. 아직 공식문서에서는 따로 언급이 없는 걸로 보아서 가능한 것 같습니다.</p><ul><li>구성 요소 및 레이아웃</li></ul><p>위젯의 레이아웃은 RemoteViews를 기반으로 하기 때문에, 모든 종류의 레이아웃이 가능하지 않습니다.</p><p>가능한 레이아웃은 <strong>FrameLayout, LinearLayout, RelativeLayout, GridLayout</strong> 입니다.</p><p>그리고 구성 요소 또한 제한이 있습니다.</p><p>가능한 구성 요소는 <strong>AnalogClock, Button, Chronometer, ImageButton, ImageView, ProgressBar, TextView, ViewFlipper, ListView, GridView, StackView, AdapterViewFlipper</strong> 입니다.</p><h2 id="위젯-만들기"><a href="#위젯-만들기" class="headerlink" title="위젯 만들기"></a>위젯 만들기</h2><p>위젯을 만들기 위해서는 다음과 같은 절차를 거쳐야 합니다.</p><ol><li>widget 레이아웃 만들기</li><li>widget 속성(meta data) 만들기</li><li>AppWidgetProvider 클래스를 상속받은 ProviderClass 만들기</li><li>AndroidManifest에 widget과 receiver 등록하기</li></ol><p>이렇게 4가지 과정을 거치면 위젯을 만들 수 있습니다.<br>그런데 최근 안드로이드 스튜디오에서는 New &gt; Widget &gt; AppWidget으로 4가지 과정을 한 번에 할 수 있더라구요.<br>일단 이번 포스팅에서는 4가지 과정을 차례 차례 진행해보도록 하겠습니다.</p><h3 id="widget-레이아웃-만들기"><a href="#widget-레이아웃-만들기" class="headerlink" title="widget 레이아웃 만들기"></a>widget 레이아웃 만들기</h3><p>일반적인 레이아웃 파일을 만드는 것과 동일하게 만들어줍니다.</p><blockquote><p>res&#x2F;layout &gt; New &gt; Layout Resource File</p></blockquote><p>여기서 주의할 점은 위젯의 제약사항 중 구성 요소 및 레이아웃을 고려해야한다는 점입니다.<br>처음에 저는 제약 사항의 존재를 모르고, Constrain Layout으로 했다가 계속 위젯 설정에 문제가 있었습니다… ㅠ<br>저는 파일 이름을 widget.xml로 했습니다.<br>그리고 버튼을 두 개 띄우도록 하겠습니다.</p><blockquote><p>widget.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;16dp&quot;</span><br><span class="line">        android:layout_marginTop=&quot;16dp&quot;</span><br><span class="line">        android:layout_weight=&quot;1&quot;</span><br><span class="line">        android:text=&quot;Button&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button2&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginEnd=&quot;16dp&quot;</span><br><span class="line">        android:layout_marginTop=&quot;16dp&quot;</span><br><span class="line">        android:layout_weight=&quot;1&quot;</span><br><span class="line">        android:text=&quot;Button&quot; /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h3 id="widget-속성-meta-data-만들기"><a href="#widget-속성-meta-data-만들기" class="headerlink" title="widget 속성(meta data) 만들기"></a>widget 속성(meta data) 만들기</h3><p>위젯의 속성을 기술하는 파일을 만들어야 합니다.<br>위젯의 속성으로는 <strong>최소 가로, 세로, 업데이트 시간, 초기 레이아웃, 리사이즈 모드 등</strong>이 있습니다.</p><p>최소 가로, 세로의 단위는 dp 이며, 위젯은 셀 단위로 표시되기 때문에 셀 크기에 따른 최소 단위 값을 구하는 공식은 다음과 같습니다.</p><blockquote><p>(셀 개수 * 74) - 2</p></blockquote><p>업데이트 시간의 경우는 얼마나 자주 onUpdate()를 호출할 것인지에 대한 값입니다.<br>최소 값은 30분(86400000밀리초)이며, 이 값보다 작게 지정을 해도 30분으로 됩니다.<br>30분보다 적은 시간에 업데이트를 하고 싶다면, 사용자에게 업데이트를 요청하는 버튼을 만들거나, AppWidgetManager.ACTION_APPWIDGET_UPDATE로 전달되는 intent를 이용하여 AlarmManager를 이용하여 처리하면 될 것 같습니다.</p><p>초기 레이아웃은 onUpdate()가 호출될 때 레이아웃에 변경이 있을 수 있기 때문에, 초기 레이아웃을 설정합니다.</p><p>리사이즈 모드는 위젯의 크기를 가로, 세로로 변경할 수 있는지에 대한 값을 지정해줍니다.</p><p>이 외에도 다른 속성들이 있는데 필수사항은 아니기 때문에, 문서를 참고해주시면 될 것 같습니다.</p><blockquote><p>widget_provider.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;appwidget-provider</span><br><span class="line">    android:initialLayout=&quot;@layout/widget&quot;</span><br><span class="line">    android:minWidth=&quot;146dp&quot;</span><br><span class="line">    android:minHeight=&quot;72dp&quot;</span><br><span class="line">    android:updatePeriodMillis=&quot;86400000&quot;</span><br><span class="line">    android:resizeMode=&quot;horizontal|vertical&quot;</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="AppWidgetProvider-클래스를-상속받은-ProviderClass-만들기"><a href="#AppWidgetProvider-클래스를-상속받은-ProviderClass-만들기" class="headerlink" title="AppWidgetProvider 클래스를 상속받은 ProviderClass 만들기"></a>AppWidgetProvider 클래스를 상속받은 ProviderClass 만들기</h3><p>이제 위젯의 동작 및 생명주기 관리를 위해 AppWidgetProvider를 상속받는 클래스 파일을 만듭니다.<br>그리고 다음과 같은 메서드들을 오버라이드합니다.</p><ul><li>onEnabled() : 위젯이 처음 생성될때 호출되며, 동일한 위젯의 경우 처음에만 호출</li><li>onUpdate() : 위젯 갱신 주기에 따라 위젯을 갱신할때 호출, 처음 위젯이 화면에 붙을 때 호출(Configuration activity를 따로 두었다면, 처음 붙을 때 불리지는 않음)</li><li>onDeleted() : 위젯이 사용자에 의해 제거될때 호출</li><li>onDisabled() : 위젯의 마지막 인스턴스가 제거될때 호출</li><li>onReceive() : 일반적인 브로드캐스팅 receiver, 위젯이 붙었을 때, 위젯이 삭제되었을 때 호출</li></ul><blockquote><p>WidgetProvider.kt</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">package com.beomji.parkbeommin.soundreservation</span><br><span class="line"></span><br><span class="line">import android.app.PendingIntent</span><br><span class="line">import android.appwidget.AppWidgetManager</span><br><span class="line">import android.appwidget.AppWidgetProvider</span><br><span class="line">import android.content.Context</span><br><span class="line">import android.content.Intent</span><br><span class="line">import android.media.AudioManager</span><br><span class="line">import android.net.Uri</span><br><span class="line">import android.support.v4.content.ContextCompat.getSystemService</span><br><span class="line">import android.util.Log</span><br><span class="line">import android.widget.RemoteViews</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class WidgetProvider : AppWidgetProvider() &#123;</span><br><span class="line">    private val MY_ACTION = &quot;android.action.MY_ACTION&quot;</span><br><span class="line"></span><br><span class="line">    //    위젯 갱신 주기에 따라 위젯을 갱신할때 호출</span><br><span class="line">    override fun onUpdate(context: Context?, appWidgetManager: AppWidgetManager?, appWidgetIds: IntArray?) &#123;</span><br><span class="line">        super.onUpdate(context, appWidgetManager, appWidgetIds)</span><br><span class="line">        appWidgetIds?.forEach &#123; appWidgetId -&gt;</span><br><span class="line">            val views: RemoteViews = addViews(context)</span><br><span class="line">            appWidgetManager?.updateAppWidget(appWidgetId, views)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    override fun onReceive(context: Context?, intent: Intent?) &#123;</span><br><span class="line">        super.onReceive(context, intent)</span><br><span class="line">        var action = intent?.action</span><br><span class="line">        if (action == MY_ACTION) &#123;</span><br><span class="line">            // TODO</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //    위젯이 처음 생성될때 호출되며, 동일한 위젯의 경우 처음 호출</span><br><span class="line">    override fun onEnabled(context: Context?) &#123;</span><br><span class="line">        super.onEnabled(context)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //    위젯의 마지막 인스턴스가 제거될때 호출</span><br><span class="line">    override fun onDisabled(context: Context?) &#123;</span><br><span class="line">        super.onDisabled(context)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //    위젯이 사용자에 의해 제거될때 호출</span><br><span class="line">    override fun onDeleted(context: Context?, appWidgetIds: IntArray?) &#123;</span><br><span class="line">        super.onDeleted(context, appWidgetIds)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private fun setMyAction(context: Context?): PendingIntent &#123;</span><br><span class="line">        val intent = Intent(MY_ACTION)</span><br><span class="line">        return PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private fun buildURIIntent(context: Context?): PendingIntent &#123;</span><br><span class="line">        val intent = Intent(Intent.ACTION_VIEW).setData(Uri.parse(&quot;http://parkbeommin.github.io&quot;))</span><br><span class="line">        return PendingIntent.getActivity(context, 0, intent, 0)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private fun addViews(context: Context?): RemoteViews &#123;</span><br><span class="line">        val views = RemoteViews(context?.packageName, R.layout.widget)</span><br><span class="line">        views.setOnClickPendingIntent(R.id.button, setMyAction(context))</span><br><span class="line">        views.setOnClickPendingIntent(R.id.button2, buildURIIntent(context))</span><br><span class="line">        return views</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위의 코드를 보면, RemoteViews를 이용해서 레이아웃을 만들고, 버튼에 클릭이벤트를 만들어줬습니다.<br>button에는 커스텀 액션을 만들어서 버튼을 클릭했을 때, 브로드캐스트로 이벤트가 보내지고, onReceive에서 받아서 처리합니다.(이 경우, 오레오버전부터는 백그라운드 정책이 바뀌어서 조금 다르게 구현을 해야합니다. 추후에 추가하도록 하겠습니다.)<br>button2에는 웹사이트로 이동하게 됩니다.</p><h3 id="AndroidManifest에-widget과-receiver-등록하기"><a href="#AndroidManifest에-widget과-receiver-등록하기" class="headerlink" title="AndroidManifest에 widget과 receiver 등록하기"></a>AndroidManifest에 widget과 receiver 등록하기</h3><p>이제 모든 준비가 끝나고, manifest에 등록을 해줘야합니다.</p><blockquote><p>AndroidManifest.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">          package=&quot;com.beomji.parkbeommin.soundreservation&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/AppTheme&quot;&gt;</span><br><span class="line">        &lt;activity android:name=&quot;.MainActivity&quot;&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line"></span><br><span class="line">        &lt;receiver</span><br><span class="line">            android:name=&quot;.WidgetProvider&quot;&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=&quot;android.appwidget.action.APPWIDGET_UPDATE&quot;/&gt;</span><br><span class="line">                &lt;action android:name=&quot;android.action.MY_ACTION&quot;/&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line"></span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=&quot;android.appwidget.provider&quot;</span><br><span class="line">                android:resource=&quot;@xml/widget_provider&quot;/&gt;</span><br><span class="line">        &lt;/receiver&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure><p>이제 완성이 되어서, 위젯을 만들어서 잘 동작하는 것을 확인하시면 됩니다.</p><p>감사합니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>[<a href="https://developer.android.com/guide/topics/appwidgets/overview][ref-url-1]">https://developer.android.com/guide/topics/appwidgets/overview][ref-url-1]</a><br>[<a href="http://klutzy.nanabi.org/android-design-ko/patterns/widgets.html][ref-url-2]">http://klutzy.nanabi.org/android-design-ko/patterns/widgets.html][ref-url-2]</a><br>[<a href="https://tech.wanted.co.kr/android/2018/02/12/android-widget.html][ref-url-3]">https://tech.wanted.co.kr/android/2018/02/12/android-widget.html][ref-url-3]</a><br>[<a href="https://arabiannight.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9CAndroid-App-widget%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90-2][ref-url-4]">https://arabiannight.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9CAndroid-App-widget%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90-2][ref-url-4]</a></p><!-- [ref-url-1]: "https://developer.android.com/guide/topics/appwidgets/overview"[ref-url-2]: "http://klutzy.nanabi.org/android-design-ko/patterns/widgets.html"[ref-url-3]: "https://tech.wanted.co.kr/android/2018/02/12/android-widget.html"[ref-url-4]: "https://arabiannight.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9CAndroid-App-widget%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90-2" -->]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;위젯이란&quot;&gt;&lt;a href=&quot;#위젯이란&quot; class=&quot;headerlink&quot; title=&quot;위젯이란?&quot;&gt;&lt;/a&gt;위젯이란?&lt;/h2&gt;&lt;p&gt;안드로이드에서 위젯이라고 하면, TextView, EditText와 같은 위젯이 있고, 스마트폰 홈 스크린 </summary>
      
    
    
    
    <category term="android" scheme="https://parkbeommin.github.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드 스튜디오] 함수 오버라이드 시 의미 있는 이름 인자 값 설정하기</title>
    <link href="https://parkbeommin.github.io/posts/2019-07-01-android-studio-match-sdk-version/"/>
    <id>https://parkbeommin.github.io/posts/2019-07-01-android-studio-match-sdk-version/</id>
    <published>2019-06-30T23:53:00.000Z</published>
    <updated>2025-10-21T07:33:46.489Z</updated>
    
    <content type="html"><![CDATA[<p>안드로이드 스튜디오를 사용하면서 <strong>자동완성 기능</strong>이 있어서 정말 정말 편리하고 좋게 사용하고 있습니다.  </p><p>그런데 콜백 함수를 구현하거나 할 때, 함수도 자동으로 생성이 되는데 인자 값이 의미 없는 변수명으로 되어있는 경우가 있습니다.  </p><img src="/assets/match-sdk/no-mean.png" style="width: 100%"><p>사진과 같이 변수 이름이 p0, p1 처럼 의미 없는 값들로 이루어져있습니다.<br>큰 문제가 되는건 아니지만, 의미있는 변수로 되어있다면 좀 더 보기 좋은 코드가 될 것이고 유지보수에도 좋을 것 같습니다.  </p><p>이렇게 의미 없는 값으로 나오는 경우는 안드로이드 스튜디오의 <strong>컴파일sdk버전에 맞는 sdk 소스가 설치되어 있지 않은 경우</strong>입니다.  </p><h2 id="compileSdkVersion-확인하기"><a href="#compileSdkVersion-확인하기" class="headerlink" title="compileSdkVersion 확인하기"></a>compileSdkVersion 확인하기</h2><p>가장 먼저 본인의 안드로이드 스튜디오의 compileSdkVersion을 확인합니다.<br>저의 경우는 28입니다.  </p><blockquote><p>build.gradle (Module: app)</p></blockquote><img src="/assets/match-sdk/sdk-version.png" style="width: 100%"><h2 id="SDK-Manager-실행하기"><a href="#SDK-Manager-실행하기" class="headerlink" title="SDK Manager 실행하기"></a>SDK Manager 실행하기</h2><p>안드로이드 스튜디오 상단 툴바에 있는 아이콘을 클릭하여서 SDK Manager를 실행합니다.  </p><img src="/assets/match-sdk/sdk-manager.png" style="width: 100%"><h2 id="Sources-for-Android-version-설치하기"><a href="#Sources-for-Android-version-설치하기" class="headerlink" title="Sources for Android (version) 설치하기"></a>Sources for Android (version) 설치하기</h2><p>이제 compileSdkVersion에 맞는 Sources for Android를 설치합니다.<br>저의 경우는 Sources for Android 28을 설치했습니다.  </p><img src="/assets/match-sdk/set-sdk.png" style="width: 100%"><h2 id="안드로이드-스튜디오-재-실행하기"><a href="#안드로이드-스튜디오-재-실행하기" class="headerlink" title="안드로이드 스튜디오 재 실행하기"></a>안드로이드 스튜디오 재 실행하기</h2><p>이제 안드로이드 스튜디오를 재 실행하여서 다시 오버라이드합니다.  </p><img src="/assets/match-sdk/mean.png" style="width: 100%"><p>변수 이름이 sensor, accuracy, event와 같이 의미있는 이름으로 변한 것을 확인할 수 있습니다.</p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;안드로이드 스튜디오를 사용하면서 &lt;strong&gt;자동완성 기능&lt;/strong&gt;이 있어서 정말 정말 편리하고 좋게 사용하고 있습니다.  &lt;/p&gt;
&lt;p&gt;그런데 콜백 함수를 구현하거나 할 때, 함수도 자동으로 생성이 되는데 인자 값이 의미 없는 변수명으</summary>
      
    
    
    
    <category term="android-studio" scheme="https://parkbeommin.github.io/categories/android-studio/"/>
    
    
  </entry>
  
  <entry>
    <title>안드로이드 코틀린 개발하기 - WebBrowser</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-28-kotlin-web-browser/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-28-kotlin-web-browser/</id>
    <published>2019-06-27T07:19:00.000Z</published>
    <updated>2025-10-21T07:33:46.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="사전-설정"><a href="#사전-설정" class="headerlink" title="사전 설정"></a>사전 설정</h2><h3 id="Anko라이브러리-추가하기"><a href="#Anko라이브러리-추가하기" class="headerlink" title="Anko라이브러리 추가하기"></a>Anko라이브러리 추가하기</h3><p>Anko라이브러리를 사용하기 위해서 아래와 같이 코드를 삽입해줍니다.<br>이번 예제에서는 Anko commons 라이브러리만 사용합니다.</p><blockquote><p>build.gradle (Module: app)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = &#x27;0.10.8&#x27;</span><br></pre></td></tr></table></figure><img src="/assets/anko_project.png" width="100%" ><blockquote><p>build.gradle (Project)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &quot;org.jetbrains.anko:anko-commons:$anko_version&quot;</span><br></pre></td></tr></table></figure><img src="/assets/anko_app.png" width="100%" ><ul><li>Anko 라이브러리란?</li></ul><p>젯브레인에서 개발한 코드 작성을 편리하게 도와주는 라이브러리.<br>Anko 라이브러리는 총 4개로 구성됩니다.  </p><ol><li>Anko Commons : 인텐트, 다이얼로그, 로그 등을 편리하게 사용하는 라이브러리</li><li>Anko Layouts : 안드로이드 레이아웃을 코드로 쉽게 작성하는 라이브러리</li><li>Anko SQLite : SQLite를 쉽게 사용하는 라이브러리</li><li>Anko Coroutines : 코루틴을 쉽게 사용하는 라이브러리</li></ol><h3 id="인터넷-사용-권한-추가하기"><a href="#인터넷-사용-권한-추가하기" class="headerlink" title="인터넷 사용 권한 추가하기"></a>인터넷 사용 권한 추가하기</h3><p>안드로이드에서는 특정 권한이 필요한 동작을 할 때는 권한을 추가해줘야 합니다.<br>우리는 웹 뷰에 웹 페이지를 표시해야하기 때문에 인터넷 사용 권한을 추가해줍니다.  </p><blockquote><p>AndroidManifest.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</span><br></pre></td></tr></table></figure><img src="/assets/web-browser/internet.png" width="100%" ><h3 id="http프로토콜-접속-허용-추가하기"><a href="#http프로토콜-접속-허용-추가하기" class="headerlink" title="http프로토콜 접속 허용 추가하기"></a>http프로토콜 접속 허용 추가하기</h3><p>안드로이드9(APL Lv 28) 부터 강화된 네트워크 보안정책에 따라 http 접속시 제한이 될 수도 있습니다.<br>따라서 허용이 되도록 코드를 추가해줍니다.  </p><blockquote><p>AndroidManifest.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot;</span><br></pre></td></tr></table></figure><img src="/assets/web-browser/http.png" width="100%" ><h2 id="레이아웃-만들기"><a href="#레이아웃-만들기" class="headerlink" title="레이아웃 만들기"></a>레이아웃 만들기</h2><p>가장 최근에 등장했고, 현재 안드로이드 기본 레이아웃인 <strong>Constrain Layout</strong>을 사용합니다.<br>url주소를 입력받을 <strong>EditText</strong>를 사용합니다.<br>웹 페이지를 보여줄 <strong>WebView</strong>를 사용합니다.  </p><p>추가적으로, EditText속성 중 imeOptions을 actionSearch로 설정해줍니다.<br>키보드의 엔터 아이콘이 변하게 됩니다.</p><img src="/assets/web-browser/layout.png" width="100%" ><h2 id="웹-페이지-표시하기"><a href="#웹-페이지-표시하기" class="headerlink" title="웹 페이지 표시하기"></a>웹 페이지 표시하기</h2><h3 id="웹뷰-기본-설정하기"><a href="#웹뷰-기본-설정하기" class="headerlink" title="웹뷰 기본 설정하기"></a>웹뷰 기본 설정하기</h3><p>웹뷰를 사용할 떄는 항상 기본으로 두 가지 설정을 해야합니다.  </p><ol><li>javaScriptEnabled 기능을 킨다.</li><li>WebViewClient 클래스를 지정한다.</li></ol><p>javaScriptEnabled 기능을 켜야 웹 페이지의 자바스크립트 기능이 동작하게 됩니다.<br>WebViewClient 클래스를 지정해야 웹뷰에 페이지가 표시되게 됩니다.<br>지정하지 않을 경우, 자체 웹 브라우저가 동작하게 됩니다.</p><p>웹 페이지를 로딩할 때는 loadUrl() 메소드를 사용합니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">webView.apply &#123;</span><br><span class="line">    // 자바스크립트 기능이 잘 동작하도록 설정</span><br><span class="line">    settings.javaScriptEnabled = true</span><br><span class="line">    // 자체 웹 브라우저가 실행되지 않고, 웹뷰에서 페이지가 표시되도록 설정</span><br><span class="line">    webViewClient = WebViewClient()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">webView.loadUrl(&quot;https://www.google.com&quot;)</span><br></pre></td></tr></table></figure><h3 id="키보드-검색-버튼-엔터-버튼-이벤트-구현하기"><a href="#키보드-검색-버튼-엔터-버튼-이벤트-구현하기" class="headerlink" title="키보드 검색 버튼(엔터 버튼) 이벤트 구현하기"></a>키보드 검색 버튼(엔터 버튼) 이벤트 구현하기</h3><p>EditText에 url을 입력하고 검색 버튼을 눌렀을 때, 해당 url로 페이지가 이동해야합니다.<br>따라서 키보드의 검색 버튼에 웹 페이지가 이동될 수 있도록 이벤트를 발생시켜야 합니다.   </p><p>setOnEditorActionListener는 EditText가 선택되고 글자가 입력될 때마다 호출됩니다.<br>그리고 인자로는 반응한 뷰, 액션 Id, 이벤트 세가지이며, 사용하지 않는 인자의 경우 _로 대치할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 에딧텍스트가 선택디고 글자가 입력될 때마다 호출</span><br><span class="line">urlEdt.setOnEditorActionListener &#123; _, actionId, _ -&gt; // 반응한 뷰, 액션ID, 이벤트</span><br><span class="line">    if (actionId == EditorInfo.IME_ACTION_SEARCH) &#123;</span><br><span class="line">        webView.loadUrl(urlEdt.text.toString())</span><br><span class="line">        true</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="뒤로가기-동작-재정의하기"><a href="#뒤로가기-동작-재정의하기" class="headerlink" title="뒤로가기 동작 재정의하기"></a>뒤로가기 동작 재정의하기</h3><p>기본적으로 뒤로 가기 버튼을 눌르면, 앱이 종료가 됩니다.<br>하지만 보통 웹 페이지의 경우, 뒤로 가기 버튼을 누르면 이전 페이지로 돌아가게 됩니다.<br>따라서 뒤로가기 버튼의 이벤트를 재정의하기 위해 onBackPressed() 메서드를 오버라이드해서 코드를 작성해줍니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">override fun onBackPressed() &#123;</span><br><span class="line">    if (webView.canGoBack()) &#123;</span><br><span class="line">        webView.goBack()</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        super.onBackPressed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="메뉴-사용하기"><a href="#메뉴-사용하기" class="headerlink" title="메뉴 사용하기"></a>메뉴 사용하기</h2><h3 id="옵션-메뉴-사용하기"><a href="#옵션-메뉴-사용하기" class="headerlink" title="옵션 메뉴 사용하기"></a>옵션 메뉴 사용하기</h3><p>상단 툴바에 표시되는 메뉴를 옵션 메뉴라고 합니다.  </p><p>옵션 메뉴를 사용하기 위해서는 다음과 같은 순서를 따라야합니다.  </p><ol><li>메뉴 리소스를 준비한다.</li><li>onCreateOptionsMenu() 메서드를 재정의하여 메뉴를 붙이고 true를 반환한다.</li><li>onOptionsItemSelected() 메서드를 재정의하여 메뉴 아이템이 선택되었을 때의 이벤트를 작성한다.</li></ol><p>메뉴 리소스를 만들기 위해, 메뉴 디렉터리를 만들어야 합니다.<br>res 우클릭 &gt; New &gt; Android Resource Directory를 클릭합니다.<br>Resource type을 menu로 변경하고 OK 버튼을 누릅니다.  </p><p>이제 menu 디렉토리에서 메뉴 리소스를 만듭니다.<br>menu 디렉토리 우클릭 &gt; New &gt; Menu resource file을 클릭합니다.<br>File name을 지정합니다.(예제에서는 main으로 지정했습니다.)  </p><blockquote><p>main.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;menu xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">      xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;item android:title=&quot;검색 사이트&quot;&gt;</span><br><span class="line">        &lt;menu</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_google&quot;</span><br><span class="line">                android:title=&quot;구글&quot;/&gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_naver&quot;</span><br><span class="line">                android:title=&quot;네이버&quot;/&gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_daum&quot;</span><br><span class="line">                android:title=&quot;다음&quot;/&gt;</span><br><span class="line">        &lt;/menu&gt;</span><br><span class="line">    &lt;/item&gt;</span><br><span class="line">    &lt;item android:title=&quot;개발자 정보&quot;&gt;</span><br><span class="line">        &lt;menu</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_call&quot;</span><br><span class="line">                android:title=&quot;전화하기&quot;/&gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_send_text&quot;</span><br><span class="line">                android:title=&quot;문자보내기&quot;/&gt;</span><br><span class="line">            &lt;item</span><br><span class="line">                android:id=&quot;@+id/action_email&quot;</span><br><span class="line">                android:title=&quot;이메일 보내기&quot;/&gt;</span><br><span class="line">        &lt;/menu&gt;</span><br><span class="line">    &lt;/item&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/action_home&quot;</span><br><span class="line">        android:icon=&quot;@drawable/ic_home_black_24dp&quot;</span><br><span class="line">        android:title=&quot;Home&quot;</span><br><span class="line">        app:showAsAction=&quot;ifRoom&quot;/&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><p>코드는 위와 같지만, design탭에서 드래그 앤 드랍으로 만드는 것이 더 편리할 수 있습니다.<br>home의 경우에 showAsAction 속성이 지정되어 있는데, 툴바에 노출할지 안할지에 대한 속성입니다.  </p><ul><li>showAsAction 속성</li></ul><ol><li>never : 밖으로 절대 노출시키지 않는다.</li><li>ifRoom : 툴바에 여유가 있으면 노출한다.</li><li>always : 항상 노출한다.</li><li>withText : 글자와 아이콘을 함께 표시한다.</li><li>collapseActionView : 액션 뷰와 결합하면 축소되는 메뉴를 만들 수 있다.</li></ol><p>이제 메뉴 리소스는 다 만들었기 떄문에, 옵션 메뉴를 지정하고 이벤트 처리를 해야합니다.  </p><p>옵션 메뉴를 지정하기 위해서는 onCreateOptionsMenu() 메서드를 오버라이드해서 menuInflater 객체의 inflate() 메서드를 사용해야합니다.<br>반환값을 true로 해줘야 옵션메뉴가 있다고 인식하게 됩니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">override fun onCreateOptionsMenu(menu: Menu?): Boolean &#123;</span><br><span class="line">    menuInflater.inflate(R.menu.main, menu)</span><br><span class="line">    return true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>각 메뉴의 이벤트 처리는 onOptionsItemSelected() 메서드를 오버라이드해서 처리합니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">override fun onOptionsItemSelected(item: MenuItem?): Boolean &#123;</span><br><span class="line">    when (item?.itemId) &#123;</span><br><span class="line">        R.id.action_google, R.id.action_home -&gt; &#123;</span><br><span class="line">            webView.loadUrl(&quot;http://google.com&quot;)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_naver -&gt; &#123;</span><br><span class="line">            webView.loadUrl(&quot;http://naver.com&quot;)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_daum -&gt; &#123;</span><br><span class="line">            webView.loadUrl(&quot;http://daum.com&quot;)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_call -&gt; &#123;</span><br><span class="line">            val intent = Intent(Intent.ACTION_DIAL)</span><br><span class="line">            intent.data = Uri.parse(&quot;tel:010-2434-7280&quot;)</span><br><span class="line">            if (intent.resolveActivity(packageManager) != null) &#123;</span><br><span class="line">                startActivity(intent)</span><br><span class="line">            &#125;</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_send_text -&gt; &#123;</span><br><span class="line">            sendSMS(&quot;010-0000-0000&quot;, webView.url)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_email -&gt; &#123;</span><br><span class="line">            email(&quot;club20608@gmail.com&quot;, &quot;Good Site!&quot;, webView.url)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return super.onOptionsItemSelected(item)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="컨텍스트-메뉴-사용하기"><a href="#컨텍스트-메뉴-사용하기" class="headerlink" title="컨텍스트 메뉴 사용하기"></a>컨텍스트 메뉴 사용하기</h3><p>컨텍스트 메뉴는 특정 뷰를 길게 클릭하고 있을 때 표시되는 메뉴입니다.<br>컨텍스트 메뉴는 옵션 메뉴를 사용하는 방법과 동일하지만 오버라이드하는 메서드만 다릅니다.  </p><p>메뉴 리소스 파일을 생성합니다.(예제에서는 context로 이름을 지정했습니다.).</p><blockquote><p>context.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/action_share&quot;</span><br><span class="line">        android:title=&quot;페이지 공유&quot;/&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/action_browser&quot;</span><br><span class="line">        android:title=&quot;기본 브라우저에서 열기&quot;/&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><p>onCreateContextMenu() 메서드를 오버라이드해서 컨텍스트 메뉴를 지정합니다.<br>옵션 메뉴와는 다르게 반환값이 없습니다.<br>대신 onCreate() 내부에 registerForContextMenu() 메소드를 호출해야하며, 인자로 컨텍스트 메뉴가 지정될 뷰를 넣습니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">override fun onCreateContextMenu(menu: ContextMenu?, v: View?, menuInfo: ContextMenu.ContextMenuInfo?) &#123;</span><br><span class="line">    super.onCreateContextMenu(menu, v, menuInfo)</span><br><span class="line">    menuInflater.inflate(R.menu.context, menu)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 컨텍스트 메뉴가 표시될 대상 뷰 설정</span><br><span class="line">registerForContextMenu(webView)</span><br></pre></td></tr></table></figure><p>이제 onContextItemSelected() 메서드를 오버라이드해서 이벤트를 구현해줍니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">override fun onContextItemSelected(item: MenuItem?): Boolean &#123;</span><br><span class="line">    when (item?.itemId) &#123;</span><br><span class="line">        R.id.action_share -&gt; &#123;</span><br><span class="line">            share(webView.url)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">        R.id.action_browser -&gt; &#123;</span><br><span class="line">            browse(webView.url)</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return super.onContextItemSelected(item)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="암시적-인텐트-사용하기"><a href="#암시적-인텐트-사용하기" class="headerlink" title="암시적 인텐트 사용하기"></a>암시적 인텐트 사용하기</h2><p>예제에서 보면 전화 걸기, SMS 보내기, 메일 보내기 등의 기능이 있는데 해당 기능을 수행할 수 있는 액티비티를 띄워주게 됩니다.<br>우리가 따로 만든 액티비티가 아니지만, 안드로이드에서는 이와 같이 미리 정의된 인텐트들이 있어서 이런 기능들이 가능합니다.<br>이렇게 미리 정의된 인텐트를 암시적 인텐트라고 합니다.  </p><p>암시적 인텐트로 다양한 기능들을 구현하기 위해서는 코드가 조금 길어질 수 있는데, 우리는 Anko라이브러리를 사용합니다.  </p><ol><li>전화걸기 : makeCall(전화번호)</li><li>문자 보내기 : sendSms(전화번호, [문자열])</li><li>웹 브라우저에서 열기 : browse(url)</li><li>문자열 공유 : share(문자열, [제목])</li><li>이메일 보내기 : email(받는 메일주소, [제목], [내용])</li></ol><p>[]는 옵션 사항입니다.</p><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><p><a href="https://github.com/ParkBeomMin/Kotlin_Web_Browser">Kotlin_Web_Browser</a></p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )<br><a href="https://developside.tistory.com/85">안드로이드 http 프로토콜 접속 시 예외발생 조치 (ERR CLEARTEXT NOT PERMITTED)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;사전-설정&quot;&gt;&lt;a href=&quot;#사전-설정&quot; class=&quot;headerlink&quot; title=&quot;사전 설정&quot;&gt;&lt;/a&gt;사전 설정&lt;/h2&gt;&lt;h3 id=&quot;Anko라이브러리-추가하기&quot;&gt;&lt;a href=&quot;#Anko라이브러리-추가하기&quot; class=&quot;head</summary>
      
    
    
    
    <category term="android kotlin" scheme="https://parkbeommin.github.io/categories/android-kotlin/"/>
    
    
  </entry>
  
  <entry>
    <title>안드로이드 코틀린 개발하기 - StopWatch</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-26-kotlin-stop-watch/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-26-kotlin-stop-watch/</id>
    <published>2019-06-26T02:16:00.000Z</published>
    <updated>2025-10-21T07:33:46.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="사전-설정"><a href="#사전-설정" class="headerlink" title="사전 설정"></a>사전 설정</h2><h3 id="Design-라이브러리-추가하기"><a href="#Design-라이브러리-추가하기" class="headerlink" title="Design 라이브러리 추가하기"></a>Design 라이브러리 추가하기</h3><p>FloatingActioinButton을 사용하기 위해 design 라이브러리를 추가해야 합니다.<br>다음과 같은 코드를 삽입해줍니다.</p><blockquote><p>build.gradle (Module: app)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;com.android.support:design:28.0.0&#x27;</span><br></pre></td></tr></table></figure><img src="/assets/stop-watch/design_library.png" width="100%" ><h3 id="벡터-드로어블-사용-환경-설정하기"><a href="#벡터-드로어블-사용-환경-설정하기" class="headerlink" title="벡터 드로어블 사용 환경 설정하기"></a>벡터 드로어블 사용 환경 설정하기</h3><blockquote><p>build.gradle (Module: app)</p></blockquote><p>버전 5.0미만의 기기에서 벡터 이미지를 사용하기 위해서 아래와 같은 코드를 삽입해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vectorDrawables.useSupportLibrary = true</span><br></pre></td></tr></table></figure><img src="/assets/vector_drawable.png" width="100%" ><h2 id="레이아웃-만들기"><a href="#레이아웃-만들기" class="headerlink" title="레이아웃 만들기"></a>레이아웃 만들기</h2><p>가장 최근에 등장했고, 현재 안드로이드 기본 레이아웃인 <strong>Constrain Layout</strong>을 사용합니다.<br>초 단위와 밀리초 단위를 보여줄 <strong>TextView</strong>를 사용합니다.<br>랩 타임을 기록할 이벤트를 발생시킬 <strong>Button</strong>을 사용합니다.<br>스탑워치의 시작, 정지, 리셋 이벤트를 발생시킬 <strong>FloatingActionButton</strong>을 사용합니다.<br>랩 타임이 기록되어 보여질 <strong>ScrollView</strong>를 사용합니다.</p><p>FloatingActionButton에 사용될 이미지는 <strong>에셋 스튜디오</strong>에서 벡터 이미지를 생성하여 사용합니다. </p><blockquote><p>activity_main.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/secondTv&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;0&quot;</span><br><span class="line">        android:textAppearance=&quot;@style/TextAppearance.AppCompat.Large&quot;</span><br><span class="line">        android:textSize=&quot;100sp&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintRight_toRightOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintVertical_bias=&quot;0.1&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/milliSecondTv&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;8dp&quot;</span><br><span class="line">        android:text=&quot;00&quot;</span><br><span class="line">        android:textAppearance=&quot;@style/TextAppearance.AppCompat.Large&quot;</span><br><span class="line">        android:textSize=&quot;22sp&quot;</span><br><span class="line">        app:layout_constraintBaseline_toBaselineOf=&quot;@+id/secondTv&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/secondTv&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.design.widget.FloatingActionButton</span><br><span class="line">        android:id=&quot;@+id/playFab&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;16dp&quot;</span><br><span class="line">        android:clickable=&quot;true&quot;</span><br><span class="line">        android:tint=&quot;@android:color/white&quot;</span><br><span class="line">        app:backgroundTint=&quot;@color/colorPrimary&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/ic_play_arrow_black_24dp&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.design.widget.FloatingActionButton</span><br><span class="line">        android:id=&quot;@+id/refreshFab&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;16dp&quot;</span><br><span class="line">        android:layout_marginStart=&quot;16dp&quot;</span><br><span class="line">        android:clickable=&quot;true&quot;</span><br><span class="line">        app:backgroundTint=&quot;@color/colorPrimary&quot;</span><br><span class="line">        android:tint=&quot;@android:color/white&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/ic_refresh_black_24dp&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/lapBtn&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;16dp&quot;</span><br><span class="line">        android:layout_marginEnd=&quot;16dp&quot;</span><br><span class="line">        android:text=&quot;랩 타임&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ScrollView</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;0dp&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;8dp&quot;</span><br><span class="line">        android:layout_marginTop=&quot;8dp&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/lapBtn&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/secondTv&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:id=&quot;@+id/lapLayout&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;vertical&quot;/&gt;</span><br><span class="line">    &lt;/ScrollView&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="타이머-구현하기-Timer"><a href="#타이머-구현하기-Timer" class="headerlink" title="타이머 구현하기(Timer)"></a>타이머 구현하기(Timer)</h2><h3 id="timer-사용하기"><a href="#timer-사용하기" class="headerlink" title="timer 사용하기"></a>timer 사용하기</h3><p>코틀린에서 타이머를 구현하는 방법은 다음과 같습니다.<br>타이머는 일정한 시간을 주기로 반복하는 동작을 수행할 때 사용합니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timer(period = 1000) &#123; // 1초(1000ms)마다</span><br><span class="line">    // 수행할 동작</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="UI-변경하기"><a href="#UI-변경하기" class="headerlink" title="UI 변경하기"></a>UI 변경하기</h3><p>시간이 흘러감에 따라 흘러간 시간을 사용자에게 보여줘야합니다.  </p><p>안드로이드에서 UI를 조작하는 것은 메인 스레드에서 해야 합니다.<br>오래 걸리는 작업을 할 때에는 보이지 않는 곳에서 처리하는 워커 스레드에서 합니다.<br>워커 스레드에서는 UI를 조작할 수 없습니다.<br>그리고 timer는 워커 스레드에서 수행되기 때문에 UI를 조작할 수 없습니다.<br>따라서, timer내부에 <strong>runOnUiThread()</strong> 메소드를 사용해서 UI를 조작해야 합니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">timer(period = 1000) &#123;</span><br><span class="line">    runOnUiThread &#123;</span><br><span class="line">        // UI 조작</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="타이머-시작"><a href="#타이머-시작" class="headerlink" title="타이머 시작"></a>타이머 시작</h3><p>타이머가 시작이 되면, 시작 버튼의 이미지가 바뀌게 됩니다.<br>그리고 0.01초 단위로 타이머를 작동시킵니다.<br>초와 밀리초 단위에 맞게 계산을 합니다.<br>UI를 조작하기 위해, runOnUiThread 안에서 TextView에 값을 뿌려줍니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">private fun start() &#123;</span><br><span class="line">    playFab.setImageResource(R.drawable.ic_pause_black_24dp)</span><br><span class="line">    timerTask = timer(period = 10) &#123;</span><br><span class="line">        time++</span><br><span class="line">        val sec = time / 100</span><br><span class="line">        val milli = time % 100</span><br><span class="line">        runOnUiThread &#123;</span><br><span class="line">            secondTv.text = &quot;$sec&quot;</span><br><span class="line">            milliSecondTv.text = &quot;$milli&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="타이머-일시정지"><a href="#타이머-일시정지" class="headerlink" title="타이머 일시정지"></a>타이머 일시정지</h3><p>시작과 반대로, 일시정지가 되면 버튼의 이미지가 바뀌게 됩니다.<br>그리고 실행중인 타이머가 있다면, 타이머를 취소시킵니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private fun pause() &#123;</span><br><span class="line">    playFab.setImageResource(R.drawable.ic_play_arrow_black_24dp)</span><br><span class="line">    timerTask?.cancel() // 실행중인 타이머가 있다면, 종료</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="타이머-초기화"><a href="#타이머-초기화" class="headerlink" title="타이머 초기화"></a>타이머 초기화</h3><p>타이머에 사용했던 모든 변수를 초기화해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">private fun reset() &#123;</span><br><span class="line">    timerTask?.cancel()</span><br><span class="line">    time = 0</span><br><span class="line">    isRunning = false</span><br><span class="line">    playFab.setImageResource(R.drawable.ic_play_arrow_black_24dp)</span><br><span class="line">    secondTv.text = &quot;0&quot;</span><br><span class="line">    milliSecondTv.text = &quot;00&quot;</span><br><span class="line">    lapLayout.removeAllViews()</span><br><span class="line">    lap = 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="랩-타임-기록하기"><a href="#랩-타임-기록하기" class="headerlink" title="랩 타임 기록하기"></a>랩 타임 기록하기</h2><h3 id="동적으로-뷰-추가하기"><a href="#동적으로-뷰-추가하기" class="headerlink" title="동적으로 뷰 추가하기"></a>동적으로 뷰 추가하기</h3><p>랩 타임을 기록하는 버튼을 누르면, 스크롤뷰 내부에 있는 리니어 레이아웃 안에 텍스트 뷰가 추가가 되어야 합니다.<br>텍스트뷰 객체를 생성하고, 레이아웃에 추가해주면 됩니다.<br>리니어 레이아웃에 addView() 메서드를 사용하면 됩니다.<br>첫 번째 인자로 추가할 뷰를 넣습니다.<br>첫 번째 인자만 넣어도 되지만, 추가될 뷰가 레이아웃의 어느 위치에 위치할지 지정해주는 두 번째 인자도 설정할 수 있습니다.<br>두 번째 인자에 0을 넣으면, 레이아웃의 항상 최상단에 추가가 됩니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val textView = TextView(this)</span><br><span class="line">textView.text = &quot;글자&quot;</span><br><span class="line">lapLayout.addView(textView, 0)</span><br></pre></td></tr></table></figure><h3 id="랩-타임-표시하기"><a href="#랩-타임-표시하기" class="headerlink" title="랩 타임 표시하기"></a>랩 타임 표시하기</h3><p>랩 타임을 표시하기 위해 버튼을 누르면, 시간을 받아옵니다.<br>그리고 텍스트뷰 객체를 생성하고, 받아온 시간을 설정해줍니다.<br>레이아웃에 텍스트뷰를 추가해줍니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private fun recordLapTime() &#123;</span><br><span class="line">    val lapTime = this.time</span><br><span class="line">    val lapTv = TextView(this)</span><br><span class="line">    lapTv.text = &quot;$lap LAB : $&#123;lapTime / 100&#125;.$&#123;lapTime % 100&#125;&quot;</span><br><span class="line"></span><br><span class="line">    lapLayout.addView(lapTv, 0) // 맨 위에 뷰를 추가한다.</span><br><span class="line">    lap++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><p><a href="https://github.com/ParkBeomMin/Kotlin_Stop_Watch">Kotlin_Stop_Watch</a></p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;사전-설정&quot;&gt;&lt;a href=&quot;#사전-설정&quot; class=&quot;headerlink&quot; title=&quot;사전 설정&quot;&gt;&lt;/a&gt;사전 설정&lt;/h2&gt;&lt;h3 id=&quot;Design-라이브러리-추가하기&quot;&gt;&lt;a href=&quot;#Design-라이브러리-추가하기&quot; class</summary>
      
    
    
    
    <category term="android kotlin" scheme="https://parkbeommin.github.io/categories/android-kotlin/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 10610[백준 10610]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-26-baekjoon-algorithm-10610/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-26-baekjoon-algorithm-10610/</id>
    <published>2019-06-25T21:34:00.000Z</published>
    <updated>2025-10-21T07:33:46.461Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/10610">30</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>N은 최대 10^5개의 숫자로 구성된다.</li><li>N은 0으로 시작하지 않는다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>N으로 만들 수 있는 30의 배수가 되는 가장 큰 수 &#x2F; 만들 수 없다면 -1</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>30의 배수가 될 수 있는지 없는지 판별 후, 내림차순으로 정렬한다.</li></ul><ol><li>30의 배수가 되는 규칙을 찾는다.</li><li>3의 배수가 되는 규칙과 10의 배수가 되는 규칙으로 나눈다.</li><li>3의 배수가 되는 규칙 : 각 자리의 숫자를 합했을 때, 3의 배수이면 3의 배수이다.</li><li>10의 배수가 되는 규칙 : 맨 끝자리 수가 0이 나오면, 10의 배수이다.</li><li>n을 String형태로 입력받는다.</li><li>0 ~ 9까지 각 숫자의 갯수가 들어갈 배열을 만든다.</li><li>n을 1자리씩 쪼개서 숫자 갯수 배열에 해당 하는 숫자를 증가시킨다.</li><li>n을 1자리씩 쪼개서 다 더해본다.</li><li>배열에서 0의 갯수가 0이거나, 각 자릿수의 합이 3의 배수가 아니라면 -1을 출력한다.</li><li>30의 배수를 만들 수 있다면, 배열에서 큰 숫자부터 꺼내서 결과 값을 만든다.</li></ol><p>문제는 많이 어렵지 않습니다..!<br>하지만.. 저는 계속 런타임 에러가 나서 이유를 찾아보니.. n의 값이 큰데 int형으로 받으려고 하다보니 에러가 나는 것 같았습니다. 그래서 String형으로 받아서 했습니다.</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">String n = scan.nextLine();</span><br><span class="line">int[] arr = new int[10];</span><br><span class="line">String result = &quot;&quot;;</span><br><span class="line">long sum = 0;</span><br><span class="line">for(int i = 0; i &lt; n.length(); i++) &#123;</span><br><span class="line">int num = Integer.parseInt(n.substring(i, i+1));</span><br><span class="line">arr[num]++;</span><br><span class="line">sum += num;</span><br><span class="line">&#125;</span><br><span class="line">if(arr[0] == 0 || sum % 3 != 0) &#123;</span><br><span class="line">result = &quot;-1&quot;;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">for(int i = arr.length-1; i &gt;= 0; i--) &#123;</span><br><span class="line">while(arr[i] &gt; 0) &#123;</span><br><span class="line">result += i;</span><br><span class="line">arr[i]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_10610.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10610&quot;&gt;30&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;N은</summary>
      
    
    
    
    <category term="algorithm baekjoon greedy" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-greedy/"/>
    
    
  </entry>
  
  <entry>
    <title>안드로이드 코틀린 개발하기 - BMI 계산기</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-23-kotlin-bmi-calculator/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-23-kotlin-bmi-calculator/</id>
    <published>2019-06-22T10:47:00.000Z</published>
    <updated>2025-10-21T07:33:46.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="사전-설정"><a href="#사전-설정" class="headerlink" title="사전 설정"></a>사전 설정</h2><h3 id="Anko라이브러리-추가하기"><a href="#Anko라이브러리-추가하기" class="headerlink" title="Anko라이브러리 추가하기"></a>Anko라이브러리 추가하기</h3><p>Anko라이브러리를 사용하기 위해서 아래와 같이 코드를 삽입해줍니다.<br>이번 예제에서는 Anko commons 라이브러리만 사용합니다.</p><blockquote><p>build.gradle (Module: app)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = &#x27;0.10.8&#x27;</span><br></pre></td></tr></table></figure><img src="/assets/anko_project.png" width="100%" ><blockquote><p>build.gradle (Project)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &quot;org.jetbrains.anko:anko-commons:$anko_version&quot;</span><br></pre></td></tr></table></figure><img src="/assets/anko_app.png" width="100%" ><ul><li>Anko 라이브러리란?</li></ul><p>젯브레인에서 개발한 코드 작성을 편리하게 도와주는 라이브러리.<br>Anko 라이브러리는 총 4개로 구성됩니다.  </p><ol><li>Anko Commons : 인텐트, 다이얼로그, 로그 등을 편리하게 사용하는 라이브러리</li><li>Anko Layouts : 안드로이드 레이아웃을 코드로 쉽게 작성하는 라이브러리</li><li>Anko SQLite : SQLite를 쉽게 사용하는 라이브러리</li><li>Anko Coroutines : 코루틴을 쉽게 사용하는 라이브러리</li></ol><h3 id="벡터-드로어블-사용-환경-설정하기"><a href="#벡터-드로어블-사용-환경-설정하기" class="headerlink" title="벡터 드로어블 사용 환경 설정하기"></a>벡터 드로어블 사용 환경 설정하기</h3><blockquote><p>build.gradle (Module: app)</p></blockquote><p>버전 5.0미만의 기기에서 벡터 이미지를 사용하기 위해서 아래와 같은 코드를 삽입해줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vectorDrawables.useSupportLibrary = true</span><br></pre></td></tr></table></figure><img src="/assets/vector_drawable.png" width="100%" ><h2 id="레이아웃-만들기"><a href="#레이아웃-만들기" class="headerlink" title="레이아웃 만들기"></a>레이아웃 만들기</h2><p>값을 입력받는 액티비티와 결과를 보여주는 액티비티를 만듭니다.  </p><p>가장 최근에 등장했고, 현재 안드로이드 기본 레이아웃인 <strong>Constrain Layout</strong>을 사용합니다.<br>몸무게와 키를 입력받을 <strong>EditText</strong>를 사용합니다.<br>몸무게와 키를 결과 화면으로 넘겨주는 이벤트를 발생시킬 <strong>Button</strong>을 사용합니다.<br>결과 내용을 보여줄 <strong>TextView</strong>를 사용합니다.<br>결과를 이미지로 표시해줄 <strong>ImageView</strong>를 사용합니다.</p><p>결과 이미지는 <strong>에셋 스튜디오</strong>에서 벡터 이미지를 생성하여 사용합니다. </p><blockquote><p>activity_main.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:padding=&quot;8dp&quot;</span><br><span class="line">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/weightEdt&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:inputType=&quot;numberDecimal&quot;</span><br><span class="line">        android:hint=&quot;@string/weight&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/heightEdt&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/heightEdt&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:inputType=&quot;numberDecimal&quot;</span><br><span class="line">        android:hint=&quot;@string/height&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/button&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/weightEdt&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/click&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/heightEdt&quot;/&gt;</span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><blockquote><p>activity_result.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;.ResultActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/resultIv&quot;</span><br><span class="line">        android:layout_width=&quot;100dp&quot;</span><br><span class="line">        android:layout_height=&quot;100dp&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/resultTv&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/ic_sentiment_satisfied_black_24dp&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/resultTv&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;TextView&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/resultIv&quot;/&gt;</span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="화면-전환하기-Intent"><a href="#화면-전환하기-Intent" class="headerlink" title="화면 전환하기(Intent)"></a>화면 전환하기(Intent)</h2><h3 id="기본적인-방법"><a href="#기본적인-방법" class="headerlink" title="기본적인 방법"></a>기본적인 방법</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">val intent = Intent(this, ResultActivity::class.java)</span><br><span class="line">startActivity(intent)</span><br></pre></td></tr></table></figure><h3 id="Anko-Commons-라이브러리-방법"><a href="#Anko-Commons-라이브러리-방법" class="headerlink" title="Anko Commons 라이브러리 방법"></a>Anko Commons 라이브러리 방법</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startActivity&lt;ResultActivity&gt;()</span><br></pre></td></tr></table></figure><p><em>코드가 확실하게 짧아짐을 볼 수 있습니다.</em>  </p><p>여기서 우리는 결과 화면으로 몸무게와 키 값을 넘겨주어야 하기 때문에, 액티비티간 데이터 전송을 추가하도록 하겠습니다.  </p><h3 id="기본적인-방법-데이터-전송"><a href="#기본적인-방법-데이터-전송" class="headerlink" title="기본적인 방법 - 데이터 전송"></a>기본적인 방법 - 데이터 전송</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">val intent = Intent(this, ResultActivity::class.java)</span><br><span class="line">intent.putExtra(&quot;weight&quot;, weightEdt.text.toString())</span><br><span class="line">intent.putExtra(&quot;height&quot;, heightEdt.text.toString())</span><br><span class="line">startActivity(intent)</span><br></pre></td></tr></table></figure><h3 id="Anko-Commons-라이브러리-방법-데이터-전송"><a href="#Anko-Commons-라이브러리-방법-데이터-전송" class="headerlink" title="Anko Commons 라이브러리 방법 - 데이터 전송"></a>Anko Commons 라이브러리 방법 - 데이터 전송</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">startActivity&lt;ResultActivity&gt;(</span><br><span class="line">        &quot;weight&quot; to weightEdt.text.toString(),</span><br><span class="line">        &quot;height&quot; to heightEdt.text.toString()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>이제 결과 화면에서 값을 받아와야 합니다.</p><h3 id="값-받아오기"><a href="#값-받아오기" class="headerlink" title="값 받아오기"></a>값 받아오기</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">val weight = intent.getStringExtra(&quot;weight&quot;).toInt()</span><br><span class="line">val height = intent.getStringExtra(&quot;height&quot;).toInt()</span><br></pre></td></tr></table></figure><p>값을 넘겨줄 때, 지정했던 <strong>키 값</strong>으로 가지고 옵니다.</p><h3 id="부모-액티비티-설정하기"><a href="#부모-액티비티-설정하기" class="headerlink" title="부모 액티비티 설정하기"></a>부모 액티비티 설정하기</h3><p>부모 액티비티를 설정하면 상단에 위치한 네비게이션바에 자동으로 뒤로가기 버튼이 생겨납니다.  </p><blockquote><p>AndroidManifest.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity android:name=&quot;.ResultActivity&quot;</span><br><span class="line">    android:parentActivityName=&quot;.MainActivity&quot;&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure><img src="/assets/manifest.png" width="100%" ><h2 id="계산하기"><a href="#계산하기" class="headerlink" title="계산하기"></a>계산하기</h2><p>몸무게와 키를 받아왔기 때문에 BMI를 계산해야 합니다.  </p><blockquote><p>BMI &#x3D; 몸무게 &#x2F; (키&#x2F;100)^2</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val bmi = weight / Math.pow(height / 100.0, 2.0)</span><br></pre></td></tr></table></figure><p>그리고 bmi의 결과 값에 따라 결과 문구와 이미지가 다르게 나타나야합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">when &#123;</span><br><span class="line">    bmi &gt;= 35 -&gt; resultTv.text = &quot;고도 비만&quot;</span><br><span class="line">    bmi &gt;= 30 -&gt; resultTv.text = &quot;2단계 비만&quot;</span><br><span class="line">    bmi &gt;= 25 -&gt; resultTv.text = &quot;1단계 비만&quot;</span><br><span class="line">    bmi &gt;= 13 -&gt; resultTv.text = &quot;과체중&quot;</span><br><span class="line">    bmi &gt;= 18.5 -&gt; resultTv.text = &quot;정상&quot;</span><br><span class="line">    else -&gt; resultTv.text = &quot;저체중&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">when &#123;</span><br><span class="line">    bmi &gt;= 23 -&gt; resultIv.setImageResource(R.drawable.ic_sentiment_very_dissatisfied_black_24dp)</span><br><span class="line">    bmi &gt;= 18.5 -&gt; resultIv.setImageResource(R.drawable.ic_sentiment_satisfied_black_24dp)</span><br><span class="line">    else -&gt; resultIv.setImageResource(R.drawable.ic_sentiment_dissatisfied_black_24dp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="데이터-저장하기-SharedPreference"><a href="#데이터-저장하기-SharedPreference" class="headerlink" title="데이터 저장하기 (SharedPreference)"></a>데이터 저장하기 (SharedPreference)</h2><p>몸무게와 키에 입력했던 값이 앱을 다시 실행했을 때 남아있도록 합니다.  </p><h3 id="데이터-저장하기"><a href="#데이터-저장하기" class="headerlink" title="데이터 저장하기"></a>데이터 저장하기</h3><p>값을 입력하고 버튼을 누르면 저장이 됩니다.  </p><blockquote><p>MainActivity.kt</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private fun saveData(weight: Int, height: Int) &#123;</span><br><span class="line">    val pref = PreferenceManager.getDefaultSharedPreferences(this)</span><br><span class="line">    val editor = pref.edit()</span><br><span class="line"></span><br><span class="line">    editor.putInt(&quot;KEY_WEIGHT&quot;, weight)</span><br><span class="line">            .putInt(&quot;KEY_HEIGHT&quot;, height)</span><br><span class="line">            .apply()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="데이터-불러오기"><a href="#데이터-불러오기" class="headerlink" title="데이터 불러오기"></a>데이터 불러오기</h3><p>앱이 실행되었을 때, 값을 불러옵니다.<br>초기값은 0으로 설정합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">private fun loadData() &#123;</span><br><span class="line">    val pref = PreferenceManager.getDefaultSharedPreferences(this)</span><br><span class="line">    val weight = pref.getInt(&quot;KEY_WEIGHT&quot;, 0)</span><br><span class="line">    val height = pref.getInt(&quot;KEY_HEIGHT&quot;, 0)</span><br><span class="line"></span><br><span class="line">    if( weight != 0 &amp;&amp; height != 0) &#123;</span><br><span class="line">        weightEdt.setText(weight.toString())</span><br><span class="line">        heightEdt.setText(height.toString())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><p><a href="https://github.com/ParkBeomMin/Kotlin_BMI_Calculator">Kotlin_BMI_Calculator</a></p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;사전-설정&quot;&gt;&lt;a href=&quot;#사전-설정&quot; class=&quot;headerlink&quot; title=&quot;사전 설정&quot;&gt;&lt;/a&gt;사전 설정&lt;/h2&gt;&lt;h3 id=&quot;Anko라이브러리-추가하기&quot;&gt;&lt;a href=&quot;#Anko라이브러리-추가하기&quot; class=&quot;head</summary>
      
    
    
    
    <category term="android kotlin" scheme="https://parkbeommin.github.io/categories/android-kotlin/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2193[백준 2193]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-23-baekjoon-algorithm-2193/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-23-baekjoon-algorithm-2193/</id>
    <published>2019-06-22T07:27:00.000Z</published>
    <updated>2025-10-21T07:33:46.452Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2193">이친수</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>0과 1로만 이루어진다.</li><li>0으로 시작하지 않는다.</li><li>1은 연속으로 나올 수 없다.</li><li>1 &lt;&#x3D; N &lt;&#x3D; 90</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>N자리 이친수의 갯수</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>N일 때, 이친수의 갯수의 규칙을 찾는다.</li></ul><ol><li>N &#x3D; 1 일 때, 1 -&gt; 1개</li><li>N &#x3D; 2 일 때, 10 -&gt; 1개</li><li>N &#x3D; 3 일 때, 100, 101 -&gt; 2개</li><li>N &#x3D; 4 일 때, 1000, 1001, 1010 -&gt; 3개</li><li>여기까지 보면, N이 2이상일 때는 무조건 10으로 시작하는 것을 알 수 있다.</li><li>그리고 N이 4일 때를 보면, 10<strong>00</strong>, 10<strong>01</strong>, 10<strong>10</strong>에서 N이 3일 때 뒷 2자리, N이 2일 때 뒷 2자리임을 알 수 있다.</li><li>N &#x3D; 5 일 때, 10<strong>000</strong>, 10<strong>001</strong>, 10<strong>010</strong>, 10<strong>100</strong>, 10<strong>101</strong> -&gt; 5개</li></ol><p>따라서, dp[n] &#x3D; dp[n-1] + dp[n-2]</p><p>그리고, N의 범위가 최대 90까지이기 때문에, 정수형의 범위를 벗어나게 됩니다( 점화식이 피보나치이기 때문에!! ).</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">long[] result = new long[N+1];</span><br><span class="line">result[0] = 0;</span><br><span class="line">result[1] = 1; // n = 1, 1</span><br><span class="line">for(int i = 2; i &lt;= N; i++) &#123;</span><br><span class="line">result[i] = result[i-1] + result[i-2];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result[N]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_2193.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2193&quot;&gt;이친수&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;0과</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>안드로이드 코틀린 시작하기 - Hello World</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-20-kotlin-hello-world/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-20-kotlin-hello-world/</id>
    <published>2019-06-19T19:37:00.000Z</published>
    <updated>2025-10-21T07:33:46.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="레이아웃-만들기"><a href="#레이아웃-만들기" class="headerlink" title="레이아웃 만들기"></a>레이아웃 만들기</h2><p>가장 최근에 등장했고, 현재 안드로이드 기본 레이아웃인 <strong>Constrain Layout</strong>을 사용합니다.<br>“Hello World” 문자열을 보여줄 <strong>TextView</strong>를 사용합니다.<br>추가적으로 문자열의 변화, 이벤트를 발생시킬 <strong>Button</strong>을 사용합니다.  </p><p>TextView는 화면 상단과 좌측, 우측에 제약을 걸어놓고, 상단에 마진 값을 주었습니다.<br>Button에는 화면 좌측과 우측, 하단과 상단은 TextView에 제약을 걸어놓았습니다. </p><blockquote><p>activity_main.xml</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;32dp&quot;</span><br><span class="line">        android:text=&quot;@string/hello_world&quot;</span><br><span class="line">        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintRight_toRightOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;Button&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/textView&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="문자열-리소스화"><a href="#문자열-리소스화" class="headerlink" title="문자열 리소스화"></a>문자열 리소스화</h2><p>레이아웃의 TextView의 text속성을 보시면 <strong>“@string&#x2F;hello_world”</strong> 문자열이 리소스화 되있는 것을 볼 수 있습니다.<br>리소스화 하지 않는다면 스튜디오에서 자체적으로 경고를 띄워줍니다.<br>컴파일에 문제는 없지만, 리소스화 하지 않는다면 <strong>유지보수</strong>에 어려움이 있을 수 있고 <strong>다국어 지원</strong>이 되지 않습니다.</p><ul><li>다국어 지원 방법</li></ul><p>프로젝트 내에서 res&#x2F;values&#x2F;strings&#x2F;strings.xml 경로로 갑니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;string name=&quot;app_name&quot;&gt;Kotlin_HelloWorld&lt;/string&gt;</span><br><span class="line">    &lt;string name=&quot;hello_world&quot;&gt;Hello World!&lt;/string&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><p>위와 같이 hello_world 리소스를 추가해줍니다.  </p><img src="/assets/string.png" width="100%" ><p>Open editor를 클릭하여 열어줍니다.  </p><img src="/assets/string2.png" width="100%" ><p>지구본 아이콘을 클릭하여 국가를 지정해줍니다.<br>그러면 에디터 테이블에 해당 국가 열이 추가됩니다.<br>해당 칸에 알맞게 문자열을 넣어줍니다.  </p><h2 id="Kotlin-Extension"><a href="#Kotlin-Extension" class="headerlink" title="Kotlin Extension"></a>Kotlin Extension</h2><p>코틀린에서 kotlin-android-extensions 라이브러리를 기본으로 제공해줍니다.<br>따라서 레이아웃에 있는 뷰를 가지고 올 때, 자바에서는 findViewById라는 함수로 가져왔는데, 코틀린에서는 아이디값으로 바로 가져올 수 있습니다.  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">button.setOnClickListener &#123;</span><br><span class="line">    clickNum++</span><br><span class="line">    textView.text = clickNum.toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위와 같이 button과 textView는 레이아웃에서 각 위젯의 아이디 값입니다.<br>따라서 코드가 훨씬 더 간결해진 것을 알 수 있습니다.</p><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><p><a href="https://github.com/ParkBeomMin/Kotlin_HelloWorld">Kotlin_HelloWorld</a></p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;레이아웃-만들기&quot;&gt;&lt;a href=&quot;#레이아웃-만들기&quot; class=&quot;headerlink&quot; title=&quot;레이아웃 만들기&quot;&gt;&lt;/a&gt;레이아웃 만들기&lt;/h2&gt;&lt;p&gt;가장 최근에 등장했고, 현재 안드로이드 기본 레이아웃인 &lt;strong&gt;Constra</summary>
      
    
    
    
    <category term="android kotlin" scheme="https://parkbeommin.github.io/categories/android-kotlin/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 11052[백준 11052]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-20-baekjoon-algorithm-11052/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-20-baekjoon-algorithm-11052/</id>
    <published>2019-06-19T17:42:00.000Z</published>
    <updated>2025-10-21T07:33:46.437Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/11052">카드구매하기</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>카드는 카드팩의 형태로만 구매할 수 있다.</li><li>카드의 갯수가 적은 팩이더라도 가격이 비싸면 높은 등급의 카드가 많이 들어있다.</li><li>카드팩의 종류는 카드 1개가 포함된 카드팩, 카드 2개가 포함된 카드팩, … 카드 N개가 포함된 카드팩과 같이 총 N가지가 존재한다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>카드 N개를 갖기 위해 지불해야 하는 금액의 최댓값</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>카드 N개를 구매할 때의 경우를 찾고 식으로 만든다.</li></ul><ol><li>카드 1개가 들어있는 팩을 구매하고, 카드를 N-1개 구매한다.</li><li>카드 2개가 들어있는 팩을 구매하고, 카드를 N-2개 구매한다.</li><li>카드 N개가 들어있는 팩을 구매하고, 카드를 N-N개 구매한다.</li></ol><p>따라서, dp[n] &#x3D; cardPackPrice[n] + dp[n-i]</p><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1; i &lt;= N; i++) &#123;</span><br><span class="line">for(int j = 1; j &lt;= i; j++) &#123;</span><br><span class="line">result[i] = Math.max(result[i], result[i - j] + price[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result[N]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_11052.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11052&quot;&gt;카드구매하기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>코틀린 특징</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-19-kotlin-feature/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-19-kotlin-feature/</id>
    <published>2019-06-19T00:42:00.000Z</published>
    <updated>2025-10-21T07:33:46.421Z</updated>
    
    <content type="html"><![CDATA[<img src="/assets/kotlin.png" width="100%" ><h2 id="코틀린은"><a href="#코틀린은" class="headerlink" title="코틀린은.."></a>코틀린은..</h2><p><a href="https://events.google.com/io2017/">2017 구글 I&#x2F;O</a>에서 정식으로 <strong>안드로이드 개발 언어</strong>로 추가되었습니다.  </p><p>JVM 위에서 동작하며 <strong>자바와 100% 호환</strong>됩니다.  </p><p>자바의 수많은 라이브러리를 그대로 사용하면서 코드는 <strong>더 간결</strong>하게 작성할 수 있습니다. 즉 같은 기능을 구현하더라도 자바에 비해서 더 적은 코드를 작성할 수 있습니다.  </p><p><a href="https://events.google.com/io2018/">2018 구글 I&#x2F;O</a>에서 대부분의 예제를 <strong>코틀린으로 설명</strong>하고 있습니다.</p><h2 id="특징"><a href="#특징" class="headerlink" title="특징"></a>특징</h2><ul><li>간결한 코드</li></ul><blockquote><p>상용구 코드양을 대폭 줄여줍니다.<br>예를 들어, 자바에서는 단순한 클래스를 작성할 때 게터 및 세터를 잔뜩 만들고 equals(), hashcode(), toString()을 재정의해 수십 줄의 코드를 작성하게 되지만, 코틀린에서는 한 줄이면 됩니다.</p></blockquote><ul><li>안정성</li></ul><blockquote><p>Null 포인터 예외와 같은 오류를 피할 수 있습니다.</p></blockquote><ul><li>상호 운용성</li></ul><blockquote><p>기존 자바 라이브러리와 100% 호환됩니다.</p></blockquote><ul><li>도구 친화적</li></ul><blockquote><p>자바, 안드로이드 개발 도구에서 그대로 사용 가능합니다.</p></blockquote><p><strong>기존 자바 개발자가 쉽게 배울 수 있습니다.</strong></p><h2 id="레퍼런스"><a href="#레퍼런스" class="headerlink" title="레퍼런스"></a>레퍼런스</h2><p>오준석의 안드로이드 생존코딩 코틀린 편 ( 오준석 저 &#x2F; 한빛미디어 &#x2F; 2018.10.01 )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/assets/kotlin.png&quot; width=&quot;100%&quot; &gt;

&lt;h2 id=&quot;코틀린은&quot;&gt;&lt;a href=&quot;#코틀린은&quot; class=&quot;headerlink&quot; title=&quot;코틀린은..&quot;&gt;&lt;/a&gt;코틀린은..&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="android kotlin" scheme="https://parkbeommin.github.io/categories/android-kotlin/"/>
    
    
  </entry>
  
  <entry>
    <title>[안드로이드 프로젝트] 서비스 기획하기-1</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-19-project1-1/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-19-project1-1/</id>
    <published>2019-06-19T00:29:00.000Z</published>
    <updated>2025-10-21T07:33:46.427Z</updated>
    
    <content type="html"><![CDATA[<p>안드로이드 개인 프로젝트를 진행해보려 합니다.<br>최종 목표는 마켓에 배포하는 것입니다.<br>서비스 기획부터 배포까지 모든 과정을 포스팅하면서 정리를 하려합니다.<br>부족한 부분이 많을 겁니다..ㅎㅎ 많은 피드백 주시면 감사하겠습니다!!</p><h2 id="아이디어-구체화"><a href="#아이디어-구체화" class="headerlink" title="아이디어 구체화"></a>아이디어 구체화</h2><p>가장 먼저 아이디어를 선정하고 구체화해야합니다.  </p><ul><li>아이디어</li></ul><blockquote><p>서로의 명언을 공유할 수 있는 커뮤니티 앱</p></blockquote><p>한 마디로 정의를 하면 위와 같은 앱을 구현할 것입니다. </p><ul><li>의도</li></ul><p>이 서비스를 기획하게 된 의도는.. 예능 프로그램 신서유기, 대탈출 등을 보다가 강호동씨가 명언을 남기는 것을 좋아하는 것을 보고 다른 사람들도 각자의 명언을 갖고 있을 것이고, 그 것을 뽐내는 것을 좋아하지 않을까라는 생각에 기획하게 되었습니다. </p><h2 id="기능-정리"><a href="#기능-정리" class="headerlink" title="기능 정리"></a>기능 정리</h2><ul><li>회원가입 및 로그인</li></ul><p>사용자 관리를 위해 회원가입 및 로그인 기능을 넣습니다.<br>Firebase Auth를 활용할 것이며, 구글과 페이스북 로그인을 연동합니다.<br>사용자 정보는 닉네임, 나이, 성별을 수집합니다.</p><ul><li>랭킹 시스템</li></ul><p>매달 추천(좋아요)수를 기준으로 랭킹을 매겨 나타냅니다.<br>전체 &#x2F; 성별 &#x2F; 나이로 분류하여 랭킹을 나타냅니다.</p><ul><li>추천(좋아요)</li></ul><p>상대방의 명언이 마음에 들 경우 추천(좋아요)을 할 수 있습니다.<br>추천(좋아요)을 한 글은 내 피드에서 확인할 수 있습니다.</p><ul><li>팔로우</li></ul><p>상대방을 팔로우할 수 있습니다.<br>팔로우한 상대의 명언은 메인 피드에서 볼 수 있습니다.</p><ul><li>내 피드(내가 올린 명언 보기)</li></ul><p>내 피드에서 내가 올린 명언들을 확인할 수 있습니다.<br>수정 및 삭제는 하루 한 번만 가능합니다.</p><ul><li>내 피드(내가 추천한 명언 보기)</li></ul><p>내 피드에서 내가 추천(좋아요)했던 명언들을 확인할 수 있습니다.<br>추천(좋아요) 취소가 가능합니다.</p><ul><li>뱃지(메달) 시스템</li></ul><p>작성한 명언 갯수, 랭킹 횟수 등에 대한 보상으로 뱃지(메달)을 수여합니다.<br>닉네임 옆에 최대 5개를 표시합니다.</p><ul><li>푸쉬 알림 서비스</li></ul><p>매일 아침 &#x2F; 점심 &#x2F; 저녁으로 푸쉬알림을 전송합니다.<br>아침 - 추천수가 많은 명언<br>점심 - 팔로우한 사람 중 랜덤하게 골라진 명언<br>저녁 - 추천(좋아요)한 명언 중 랜덤하게 골라진 명언</p><ul><li>명언 작성 하기</li></ul><p>명언을 작성할 수 있습니다.<br>최소 5글자 이상 작성해야 합니다.</p><ul><li>메인 피드</li></ul><p>이번 달 랭킹 1 ~ 3위를 확인할 수 있습니다.<br>추천수가 높은 명언을 확인할 수 있습니다.<br>최근에 올라온 명언을 확인할 수 있습니다.<br>팔로우한 사람의 명언을 확인할 수 있습니다.</p><ul><li>검색 피드</li></ul><p>명언에 담긴 키워드 검색을 할 수 있습니다.<br>해당 키워드가 들어간 명언을 검색해서 리스트로 보여줍니다.</p><ul><li>랭킹 피드</li></ul><p>전체 &#x2F; 성별 &#x2F; 나이로 분류된 랭킹을 확인할 수 있습니다.<br>내 랭킹을 확인할 수 있습니다.</p><ul><li>SNS 공유</li></ul><p>명언을 SNS로 공유할 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;안드로이드 개인 프로젝트를 진행해보려 합니다.&lt;br&gt;최종 목표는 마켓에 배포하는 것입니다.&lt;br&gt;서비스 기획부터 배포까지 모든 과정을 포스팅하면서 정리를 하려합니다.&lt;br&gt;부족한 부분이 많을 겁니다..ㅎㅎ 많은 피드백 주시면 감사하겠습니다!!&lt;/</summary>
      
    
    
    
    <category term="android project" scheme="https://parkbeommin.github.io/categories/android-project/"/>
    
    
  </entry>
  
  <entry>
    <title>자바 변수&amp;상수</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-18-java-variable/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-18-java-variable/</id>
    <published>2019-06-17T09:33:00.000Z</published>
    <updated>2025-10-21T07:33:46.398Z</updated>
    
    <content type="html"><![CDATA[<p>프로그래밍을 처음 시작하면서 접하게 되는 개념이 바로 <strong>변수</strong> 입니다.  </p><h2 id="변수-vs-상수"><a href="#변수-vs-상수" class="headerlink" title="변수 vs 상수"></a>변수 vs 상수</h2><p>변수와 상수는 항상 붙어다니는 개념입니다.</p><ul><li>변수</li></ul><p>변수란, 프로그램이 실행되는 동안에 언제든지 저장된 값이 변경될 수 있는 공간입니다.<br>다시 말해서 값을 저장할 수 있는 메모리 공간입니다.<br>예) 두 점간의 거리 distance는 프로그램이 실행되는 도중에 변경될 수 있다</p><ul><li>상수</li></ul><p>상수란, 한 번 정해지면 값을 변경할 필요가 없는 데이터입니다.<br>예) 원주율 3.141592는 프로그램에 저장되어 변경될 필요가 없다.</p><blockquote><p>값을 변경할 수 있으면 변수 &#x2F; 값을 변경할 수 없으면 상수</p></blockquote><h2 id="선언하기"><a href="#선언하기" class="headerlink" title="선언하기"></a>선언하기</h2><p>변수, 상수를 사용하기 위해서는 먼저 선언을 해야합니다.<br>선언을 하기 위해서는 어떤 형태로 선언할 것인지 먼저 정해야합니다.<br>그 형태를 <strong>자료형</strong> 이라고 합니다.<br>여기서는 간단하게 정수형, 실수형, 문자열로 예시를 들겠습니다.  </p><blockquote><p>정수형 : int<br>실수형 : double<br>문자열 : String</p></blockquote><p>변수 선언 방법은 <strong>자료형 + 변수명 (&#x3D; 초기값);</strong> 으로 선언합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int intType;  </span><br><span class="line">int intType = 10;  </span><br><span class="line">double doubleType;  </span><br><span class="line">double doubleType = 10.5;  </span><br><span class="line">String stringType;  </span><br><span class="line">String stringType = &quot;string&quot;;</span><br></pre></td></tr></table></figure><p>상수 선언 방법은 <strong>final + 자료형 + 상수명 &#x3D; 값;</strong> 으로 선언합니다.<br>상수를 선언할 때는 함수 바깥쪽에서 선언하고 클래스 내에서 공유하는 자원이므로 static을 붙여줍니다.<br>그리고 상수명은 일반적 관례로 대문자의 명사로 지어줍니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">final static int INT_CONSTANT = 10;  </span><br><span class="line">final static double DOUBLE_CONSTANT = 10.5;  </span><br><span class="line">final static String STRING_CONSTANT = &quot;string&quot;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;프로그래밍을 처음 시작하면서 접하게 되는 개념이 바로 &lt;strong&gt;변수&lt;/strong&gt; 입니다.  &lt;/p&gt;
&lt;h2 id=&quot;변수-vs-상수&quot;&gt;&lt;a href=&quot;#변수-vs-상수&quot; class=&quot;headerlink&quot; title=&quot;변수 vs 상수&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="java" scheme="https://parkbeommin.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2217[백준 2217]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-18-baekjoon-algorithm-2217/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-18-baekjoon-algorithm-2217/</id>
    <published>2019-06-17T07:49:00.000Z</published>
    <updated>2025-10-21T07:33:46.383Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2217">로프</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>N개의 로프가 주어진다.</li><li>각각의 로프는 들 수 있는 중량이 다르다.</li><li>로프를 병렬로 연결하면, 드는 물체의 중량을 고르게 나눌 수 있다.</li><li>각각의 로프는 한 개씩 존재한다.</li><li>모든 로프를 반드시 다 사용해야하는 것은 아니다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>각각의 로프에 모두 동일한 중량이 가해진다는 것이 핵심이다.</li></ul><ol><li>들어올릴 수 있는 최대 중량을 내림차순으로 정렬한다.</li><li>첫 번째 로프의 최대 중량으로 생각하면, 최대 중량 &#x3D; ( 첫 번째 로프가 들 수 있는 무게 ) * ( N ) </li><li>두 번째 로프의 최대 중량으로 생각하면, 최대 중량 &#x3D; ( 두 번째 로프가 들 수 있는 무게 ) * ( N - 1 )</li><li>N번째 로프까지 반복하면서, 각각의 최대 중량을 비교하여 본다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arrays.sort(rope);</span><br><span class="line">for(int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">w = Math.max(w, rope[i]*(N-i));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(w);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_2217.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2217&quot;&gt;로프&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;N개의</summary>
      
    
    
    
    <category term="algorithm baekjoon greedy" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-greedy/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1931[백준 1931]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-14-baekjoon-algorithm-1931/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-14-baekjoon-algorithm-1931/</id>
    <published>2019-06-13T09:00:00.000Z</published>
    <updated>2025-10-21T07:33:46.360Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1931">회의실 배정</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>각 회의 시작 시간과 끝나는 시간이 주어진다.</li><li>각 회의 간 겹치지 않아야한다.</li><li>회의는 중간에 멈출 수 없다.</li><li>회의가 끝남과 동시에 다른 회의가 시작될 수 있다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>회의실을 사용할 수 있는 최대수의 회의</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>각 회의가 끝나는 시간을 오름차순으로 정렬한 후 비교하여 구한다.</li></ul><ol><li>회의가 끝나는 시간을 기준으로 오름차순으로 정렬한다.</li><li>이전 회의가 끝나는 시간과 이번 회의가 시작하는 시간을 비교한다.</li><li>비교하여 끝나는 시간이 시작하는 시간보다 작거나 같으면 result를 1 증가시킨다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;MeetTime&gt; arr = new ArrayList();</span><br><span class="line">for(int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">arr.add(new MeetTime(scan.nextInt(), scan.nextInt()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Collections.sort(arr);</span><br><span class="line">        </span><br><span class="line">int result = 0;</span><br><span class="line">int prevEnd = 0;</span><br><span class="line">for(MeetTime t:arr) &#123;</span><br><span class="line">    if(prevEnd &lt;= t.getStartTime()) &#123;</span><br><span class="line">            result += 1;</span><br><span class="line">            prevEnd = t.getEndTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_1931.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1931&quot;&gt;회의실 배정&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="algorithm baekjoon greedy" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-greedy/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1427[백준 1427]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-13-baekjoon-algorithm-1427/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-13-baekjoon-algorithm-1427/</id>
    <published>2019-06-12T14:35:00.000Z</published>
    <updated>2025-10-21T07:33:46.347Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1427">소트인사이드</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>숫자가 주어진다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>주어진 숫자를 내림차순으로 출력</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>숫자를 쪼개서 배열에 담은 후, 정렬한다.</li></ul><ol><li>숫자를 String으로 변환한다.</li><li>String의 각 자릿수에 해당하는 char를 int로 변환하여 int배열에 넣는다.</li><li>버블 소트를 통해 내림차순으로 정렬한다.</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">int N = scan.nextInt();</span><br><span class="line">String tmp = String.valueOf(N);</span><br><span class="line">int[] result = new int[tmp.length()];</span><br><span class="line">for(int i = 0; i &lt; tmp.length(); i++) &#123;</span><br><span class="line">result[i] = Character.getNumericValue(tmp.charAt(i));</span><br><span class="line">&#125;</span><br><span class="line">for(int i = 0; i &lt; tmp.length(); i++) &#123;</span><br><span class="line">for(int j = 0; j &lt; tmp.length()-i-1; j++) &#123;</span><br><span class="line">if(result[j] &lt; result[j+1]) &#123;</span><br><span class="line">int tmpInt = result[j];</span><br><span class="line">result[j] = result[j+1];</span><br><span class="line">result[j+1] = tmpInt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i = 0; i &lt; tmp.length(); i++) &#123;</span><br><span class="line">System.out.print(result[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_1427.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1427&quot;&gt;소트인사이드&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="algorithm baekjoon sorting" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-sorting/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1149[백준 1149]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-11-baekjoon-algorithm-1149/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-11-baekjoon-algorithm-1149/</id>
    <published>2019-06-11T04:25:00.000Z</published>
    <updated>2025-10-21T07:33:46.275Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1149">RGB거리</a></p><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ol><li>집을 빨강, 초록, 파랑중에 하나로 칠한다.</li><li>이웃된 집은 같은 색으로 칠할 수 없다.</li></ol><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><ul><li>모든 집에 색을 칠할 때 드는 최소 비용</li></ul><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><ul><li>n번째 집이 빨강일 때, 초록일 때, 파랑일 때 드는 최소 값을 구한다.</li></ul><ol><li>dp[n, r] &#x3D; min(dp[n-1, g], dp[n-1, b]) + price[n, r]</li><li>dp[n, g] &#x3D; min(dp[n-1, r], dp[n-1, b]) + price[n, g]</li><li>dp[n, b] &#x3D; min(dp[n-1, g], dp[n-1, r]) + price[n, b]</li></ol><h2 id="핵심-코드"><a href="#핵심-코드" class="headerlink" title="핵심 코드"></a>핵심 코드</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 0; i &lt; house_num; i++) &#123;</span><br><span class="line">if(i == 0) &#123;</span><br><span class="line">result[i][0] = price[i][0];</span><br><span class="line">result[i][1] = price[i][1];</span><br><span class="line">result[i][2] = price[i][2];</span><br><span class="line">&#125;else &#123;</span><br><span class="line">result[i][0] = Math.min(result[i-1][1], result[i-1][2]) + price[i][0];</span><br><span class="line">result[i][1] = Math.min(result[i-1][0], result[i-1][2]) + price[i][1];</span><br><span class="line">result[i][2] = Math.min(result[i-1][1], result[i-1][0]) + price[i][2];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Math.min(result[house_num-1][0], Math.min(result[house_num-1][1], result[house_num-1][2])));</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_1149.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1149&quot;&gt;RGB거리&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;조건&quot;&gt;&lt;a href=&quot;#조건&quot; class=&quot;headerlink&quot; title=&quot;조건&quot;&gt;&lt;/a&gt;조건&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>왜 자바인가</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-11-why-java/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-11-why-java/</id>
    <published>2019-06-10T10:18:00.000Z</published>
    <updated>2025-10-21T07:33:46.315Z</updated>
    
    <content type="html"><![CDATA[<p>안녕하세요.  </p><p>제목이 좀 거창한 것 같은데, 제가 왜 자바를 하게 되었는지 간단하게 이야기 해보려 합니다.  </p><p>개발자를 꿈꾸고 있는 한 사람으로써 어떤 언어를 주 언어로 해야 할지 선택을 해야한다고 생각합니다. 그 시기는 사람마다 다르겠지만, 컴퓨터 전공을 하는 사람은 학생 때 어느 정도 결정을 한다고 생각됩니다.  </p><p>저는 군 전역 후 대학교 2학년 때부터 자바를 저의 주 언어로 해야겠다는 생각을 했습니다. C, JAVA, Python을 접해봤었는데 이클립스라는 통합 개발 환경이 갖춰져 있고 그 때 당시 대학 동기의 도움을 자바로 많이 받아서 셋 중에 자바가 제일 낫다는 생각을 했고 지금까지 해오고 있습니다.  </p><p>그리고 가장 큰 확신을 가지게 된 것은 안드로이드 개발을 접했을 때입니다. 그동안은 커맨드라인에서만 결과를 확인했었는데, 안드로이드를 하면서 바로 바로 눈에 보여지는게 재밌었습니다. 그래서 자바를 주언어로 하자는 생각에 확신을 했었죠.. ( 지금 안드로이드 정식 언어는 코틀린이 되었지만.. )  </p><p>여기까지가 제가 자바를 선택하게 된 이유이고, 자바의 객관적인 시선에서의 장점을 몇가지 적어보도록 하겠습니다.  </p><p>일단, 국내 대부분의 통합 프로젝트가 자바로 구현되어있습니다. 따라서 현재 사용되는 대부분의 시스템 개발의 기본이 되는 프로그래밍 언어라고 할 수 있습니다.<br>그리고 웹에서는 JSP, 모바일에서는 Android가 높은 점유율을 가지고 있습니다.<br>그리고 자바는 다른 언어들과 다르게 동일한 프로그램이 운영체제를 가리지 않고 실행이 되는 특징을 가지고 있습니다.<br>마지막으로 C++과 같이 대표적인 객체 지향 프로그래밍 언어입니다.  </p><p>정리를 해보면, 다음과 같습니다.</p><ol><li>현재 국내에서 시스템 개발의 기본이 되는 프로그래밍 언어이다.</li><li>웹과 모바일 환경에서도 높은 점유율을 가지고 있다.</li><li>운영체제에 제한 없이 실행 가능하다.</li><li>객체 지향 프로그래밍 언어이다.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;안녕하세요.  &lt;/p&gt;
&lt;p&gt;제목이 좀 거창한 것 같은데, 제가 왜 자바를 하게 되었는지 간단하게 이야기 해보려 합니다.  &lt;/p&gt;
&lt;p&gt;개발자를 꿈꾸고 있는 한 사람으로써 어떤 언어를 주 언어로 해야 할지 선택을 해야한다고 생각합니다. 그 시기</summary>
      
    
    
    
    <category term="java" scheme="https://parkbeommin.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 2579[백준 2579]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-11-baekjoon-algorithm-2579/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-11-baekjoon-algorithm-2579/</id>
    <published>2019-06-10T08:55:00.000Z</published>
    <updated>2025-10-21T07:33:46.291Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/2579">계단 오르기</a></p><p>이제 막 알고리즘 문제 풀기를 시작한지라.. 문제 유형 파악을 하기 위해 분류된 문제를 풀어보고 있습니다..<br>이미 다이나믹 프로그래밍 문제라는 것을 알기 때문에, 먼저 점화식을 찾으려고 생각했습니다.<br>주어진 조건이</p><ol><li>3계단 연속 불가</li><li>1칸 또는 2칸씩 이동 가능</li><li>마지막 칸은 무조건 밟아야 함</li></ol><p>이기 때문에, 마지막 칸을 밟았다고 했을 때 가능한 경우가 두 가지 존재합니다.</p><ol><li>전 칸을 밟고 왔을 때</li><li>전전 칸을 밟고 왔을 때</li></ol><p>따라서, 점화식을 만들어 보겠습니다.</p><ol><li>dp[n] &#x3D; score[n-1] + score[n] + dp[n-3]</li><li>dp[n] &#x3D; score[n] + dp[n-2]</li></ol><p>이와 같은 식이 나오게 됩니다.(score는 계단의 점수, dp는 총 점수의 최댓값)  </p><ol><li>입력 값의 크기로 배열을 두개 만듭니다. (계단의 각 점수가 담긴 배열, 해당 계단을 밟았을 때 점수의 최댓값이 담긴 배열)</li><li>0~2까지는 점화식이 성립되지 않기 때문에, 알맞게 계산하여 값을 넣어줍니다.</li><li>dp[i]에 위 점화식 중 큰 값을 넣어줍니다.</li><li>3번을 n까지 반복합니다.</li><li>dp[n-1]을 출력합니다.</li></ol><p>핵심코드는 다음과 같습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">result[1] = Math.max(score[1], score[0] + score[1]);</span><br><span class="line">result[2] = Math.max(score[0] + score[2], score[1] + score[2]);</span><br><span class="line">for(int i = 3; i &lt; stairs; i++) &#123;</span><br><span class="line">result[i] = Math.max(result[i-3] + score[i-1] + score[i], result[i-2] + score[i]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result[stairs-1]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_2579.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2579&quot;&gt;계단 오르기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이제 막 알고리즘 문제 풀기를 시작한지라.. 문제 유형 파악을 하기 위해 분류된 문제를 풀어보고 있습니다..&lt;br&gt;이미 다이나믹 </summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 1463[백준 1463]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-10-baekjoon-algorithm-1463/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-10-baekjoon-algorithm-1463/</id>
    <published>2019-06-09T11:20:00.000Z</published>
    <updated>2025-10-21T07:33:46.258Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1463">1로 만들기</a></p><p>이 문제는 다이나믹 프로그래밍 문제로, bottom-up 방식으로 문제를 해결하였습니다.<br>작은 값에서 부터 시작해서 큰 값으로 갈수록, 작은 값이었을 때 결과 값을 활용하는 방법입니다.</p><ol><li>입력 값 +1의 크기로 배열을 만든다.(시작값을 1로 하기 위해서, array[0]은 쓰지 않는다.)</li><li>1일 때는 결과 값이 0이므로, array[1]에 0을 넣는다.</li><li>array[i]에 array[i-1] + 1을 넣는다.</li><li>i가 2로 나누어 떨어지면, array[i]에 array[i]와 array[i&#x2F;2]+1 중 작은 값을 넣는다.</li><li>i가 3으로 나누어 떨어지면, array[i]에 array[i]와 array[i&#x2F;3]+1 중 작은 값을 넣는다.</li><li>3-5번을 n까지 반복한다.</li><li>array[n]을 출력한다.</li></ol><p>핵심코드는 다음과 같습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">if(i == 1) &#123;</span><br><span class="line">result[i] = 0;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">result[i] = result[i-1] + 1;</span><br><span class="line">if(i%2 == 0) &#123;</span><br><span class="line">result[i] = Math.min(result[i], result[i/2] + 1);</span><br><span class="line">&#125;</span><br><span class="line">if(i%3 == 0) &#123;</span><br><span class="line">result[i] = Math.min(result[i], result[i/3] + 1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result[n]);</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_1463.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1463&quot;&gt;1로 만들기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이 문제는 다이나믹 프로그래밍 문제로, bottom-up 방식으로 문제를 해결하였습니다.&lt;br&gt;작은 값에서 부터 시작해서 큰 값으</summary>
      
    
    
    
    <category term="algorithm baekjoon dynamic-programming" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon-dynamic-programming/"/>
    
    
  </entry>
  
  <entry>
    <title>BOJ 14912[백준 14912]</title>
    <link href="https://parkbeommin.github.io/posts/2019-06-09-baekjoon-algorithm-14912/"/>
    <id>https://parkbeommin.github.io/posts/2019-06-09-baekjoon-algorithm-14912/</id>
    <published>2019-06-08T08:30:00.000Z</published>
    <updated>2025-10-21T07:33:46.247Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/14912">숫자 빈도수</a></p><ol><li>입력값의 갯수를 알려주지 않았기 때문에, 각 변수별로 나눠주는 작업을 한다.</li><li>1~n까지 숫자에서 d가 포함된 갯수를 구해야하기 때문에 각 숫자의 1의 자리 숫자로 d와 비교를 한다.</li><li>각 숫자의 1의 자리와 비교하기 위해 각 숫자를 10, 100, 1000, … 으로 나눠보면서 b와 비교를 한다.</li><li>b와 같을 때마다 result값을 증가시킨다.</li></ol><p>핵심코드는 다음과 같습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">tmp = i;</span><br><span class="line">while(tmp &gt; 0) &#123;</span><br><span class="line">if(tmp%10 == d) &#123;</span><br><span class="line">result++;</span><br><span class="line">&#125;</span><br><span class="line">tmp /= 10;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 소스 코드는 <a href="https://github.com/ParkBeomMin/Algorithm/blob/master/Backjoon/src/B_14912.java">여기서</a> 확인하실 수 있습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14912&quot;&gt;숫자 빈도수&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;입력값의 갯수를 알려주지 않았기 때문에, 각 변수별로 나눠주는 작업을 한다.&lt;/li&gt;
&lt;li&gt;1~n까지 숫자에서 d가</summary>
      
    
    
    
    <category term="algorithm baekjoon" scheme="https://parkbeommin.github.io/categories/algorithm-baekjoon/"/>
    
    
  </entry>
  
</feed>
